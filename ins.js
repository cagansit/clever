(function() {
    window.API_VERSION_ikea = 'v2.7.2';
}
)();
function insIsLocalStorageSupported() {
    var insider = 'insider';
    try {
        localStorage.setItem(insider, insider);
        localStorage.removeItem(insider);
        return true;
    } catch (e) {
        return false;
    }
}
if (!insIsLocalStorageSupported() && typeof console.log !== 'undefined') {
    console.log('LocalStorage Support is not supported. API will not initialize.');
} else if (spApi === undefined) {
    var spApi = {};
    spApi.loadScript = function(url, callback) {
        var script = document.createElement('script')
        script.type = 'text/javascript';
        script.async = 'async';
        if (script.readyState) {
            script.onreadystatechange = function() {
                if (script.readyState == 'loaded' || script.readyState == 'complete') {
                    script.onreadystatechange = null;
                    if ('function' === typeof callback) {
                        callback();
                    }
                }
            }
            ;
        } else {
            script.onload = function() {
                if ('function' === typeof callback) {
                    callback();
                }
            }
            ;
        }
        script.src = url;
        document.getElementsByTagName('head')[0].appendChild(script);
    };

    var sQuery;
    var protocol = '';
    function insiderMain() {
        var NO_JQUERY = {};
        (function(a, b, c) {
            if (!("console"in a)) {
                var d = a.console = {};
                d.log = d.warn = d.error = d.debug = function() {}
            }
            if (b === NO_JQUERY) {
                b = {
                    fn: {},
                    extend: function() {
                        var a = arguments[0];
                        for (var b = 1, c = arguments.length; b < c; b++) {
                            var d = arguments[b];
                            for (var e in d) {
                                a[e] = d[e]
                            }
                        }
                        return a
                    }
                }
            }
            b.fn.pm = function() {
                return this
            }
            ;
            b.pm = a.pm = function(a) {
                e.send(a)
            }
            ;
            b.pm.bind = a.pm.bind = function(a, b, c, d, f) {
                e.bind(a, b, c, d, f === true)
            }
            ;
            b.pm.unbind = a.pm.unbind = function(a, b) {
                e.unbind(a, b)
            }
            ;
            b.pm.origin = a.pm.origin = null;
            b.pm.poll = a.pm.poll = 200;
            var e = {
                send: function(a) {
                    var c = b.extend({}, e.defaults, a)
                      , d = c.target;
                    if (!c.target) {
                        return
                    }
                    if (!c.type) {
                        return
                    }
                    var f = {
                        data: c.data,
                        type: c.type
                    };
                    if (c.success) {
                        f.callback = e._callback(c.success)
                    }
                    if (c.error) {
                        f.errback = e._callback(c.error)
                    }
                    if ("postMessage"in d && !c.hash) {
                        e._bind();
                        d.postMessage(sQuery.toJSON(f), c.origin || "*")
                    } else {
                        e.hash._bind();
                        e.hash.send(c, f)
                    }
                },
                bind: function(a, b, c, d, f) {
                    e._replyBind(a, b, c, d, f)
                },
                _replyBind: function(c, d, f, g, h) {
                    if ("postMessage"in a && !g) {
                        e._bind()
                    } else {
                        e.hash._bind()
                    }
                    var i = e.data("listeners.postmessage");
                    if (!i) {
                        i = {};
                        e.data("listeners.postmessage", i)
                    }
                    var j = i[c];
                    if (!j) {
                        j = [];
                        i[c] = j
                    }
                    j.push({
                        fn: d,
                        callback: h,
                        origin: f || b.pm.origin
                    })
                },
                unbind: function(a, b) {
                    var c = e.data("listeners.postmessage");
                    if (c) {
                        if (a) {
                            if (b) {
                                var d = c[a];
                                if (d) {
                                    var f = [];
                                    for (var g = 0, h = d.length; g < h; g++) {
                                        var i = d[g];
                                        if (i.fn !== b) {
                                            f.push(i)
                                        }
                                    }
                                    c[a] = f
                                }
                            } else {
                                delete c[a]
                            }
                        } else {
                            for (var g in c) {
                                delete c[g]
                            }
                        }
                    }
                },
                data: function(a, b) {
                    if (b === c) {
                        return e._data[a]
                    }
                    e._data[a] = b;
                    return b
                },
                _data: {},
                _CHARS: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
                _random: function() {
                    var a = [];
                    for (var b = 0; b < 32; b++) {
                        a[b] = e._CHARS[0 | Math.random() * 32]
                    }
                    return a.join("")
                },
                _callback: function(a) {
                    var b = e.data("callbacks.postmessage");
                    if (!b) {
                        b = {};
                        e.data("callbacks.postmessage", b)
                    }
                    var c = e._random();
                    b[c] = a;
                    return c
                },
                _bind: function() {
                    if (!e.data("listening.postmessage")) {
                        if (a.addEventListener) {
                            a.addEventListener("message", e._dispatch, false)
                        } else if (a.attachEvent) {
                            a.attachEvent("onmessage", e._dispatch)
                        }
                        e.data("listening.postmessage", 1)
                    }
                },
                _dispatch: function(a) {
                    try {
                        if (!a.data) {
                            return
                        }
                        var b = sQuery.evalJSON(a.data)
                    } catch (c) {
                        return
                    }
                    if (!b.type) {
                        return
                    }
                    var d = e.data("callbacks.postmessage") || {}
                      , f = d[b.type];
                    if (f) {
                        f(b.data)
                    } else {
                        var g = e.data("listeners.postmessage") || {};
                        var h = g[b.type] || [];
                        for (var i = 0, j = h.length; i < j; i++) {
                            var k = h[i];
                            if (k.origin && k.origin !== "*" && a.origin !== k.origin) {
                                if (b.errback) {
                                    var l = {
                                        message: "postmessage origin mismatch",
                                        origin: [a.origin, k.origin]
                                    };
                                    e.send({
                                        target: a.source,
                                        data: l,
                                        type: b.errback
                                    })
                                }
                                continue
                            }
                            function m(c) {
                                if (b.callback) {
                                    e.send({
                                        target: a.source,
                                        data: c,
                                        type: b.callback
                                    })
                                }
                            }
                            try {
                                if (k.callback) {
                                    k.fn(b.data, m, a)
                                } else {
                                    m(k.fn(b.data, a))
                                }
                            } catch (c) {
                                if (b.errback) {
                                    e.send({
                                        target: a.source,
                                        data: c,
                                        type: b.errback
                                    })
                                } else {
                                    throw c
                                }
                            }
                        }
                    }
                }
            };
            e.hash = {
                send: function(b, c) {
                    var d = b.target
                      , f = b.url;
                    if (!f) {
                        return
                    }
                    f = e.hash._url(f);
                    var g, h = e.hash._url(a.location.href);
                    if (a == d.parent) {
                        g = "parent"
                    } else {
                        try {
                            for (var i = 0, j = parent.frames.length; i < j; i++) {
                                var k = parent.frames[i];
                                if (k == a) {
                                    g = i;
                                    break
                                }
                            }
                        } catch (l) {
                            g = a.name
                        }
                    }
                    if (g == null) {
                        return
                    }
                    var m = {
                        "x-requested-with": "postmessage",
                        source: {
                            name: g,
                            url: h
                        },
                        postmessage: c
                    };
                    var n = "#x-postmessage-id=" + e._random();
                    d.location = f + n + encodeURIComponent(sQuery.toJSON(m))
                },
                _regex: /^\#x\-postmessage\-id\=(\w{32})/,
                _regex_len: "#x-postmessage-id=".length + 32,
                _bind: function() {
                    if (!e.data("polling.postmessage")) {
                        setInterval(function() {
                            var b = "" + a.location.hash
                              , c = e.hash._regex.exec(b);
                            if (c) {
                                var d = c[1];
                                if (e.hash._last !== d) {
                                    e.hash._last = d;
                                    e.hash._dispatch(b.substring(e.hash._regex_len))
                                }
                            }
                        }, b.pm.poll || 200);
                        e.data("polling.postmessage", 1)
                    }
                },
                _dispatch: function(b) {
                    if (!b) {
                        return
                    }
                    try {
                        b = sQuery.evalJSON(decodeURIComponent(b));
                        if (!(b["x-requested-with"] === "postmessage" && b.source && b.source.name != null && b.source.url && b.postmessage)) {
                            return
                        }
                    } catch (c) {
                        return
                    }
                    var d = b.postmessage
                      , f = e.data("callbacks.postmessage") || {}
                      , g = f[d.type];
                    if (g) {
                        g(d.data)
                    } else {
                        var h;
                        if (b.source.name === "parent") {
                            h = a.parent
                        } else {
                            h = a.frames[b.source.name]
                        }
                        var i = e.data("listeners.postmessage") || {};
                        var j = i[d.type] || [];
                        for (var k = 0, l = j.length; k < l; k++) {
                            var m = j[k];
                            if (m.origin) {
                                var n = /https?\:\/\/[^\/]*/.exec(b.source.url)[0];
                                if (m.origin !== "*" && n !== m.origin) {
                                    if (d.errback) {
                                        var o = {
                                            message: "postmessage origin mismatch",
                                            origin: [n, m.origin]
                                        };
                                        e.send({
                                            target: h,
                                            data: o,
                                            type: d.errback,
                                            hash: true,
                                            url: b.source.url
                                        })
                                    }
                                    continue
                                }
                            }
                            function p(a) {
                                if (d.callback) {
                                    e.send({
                                        target: h,
                                        data: a,
                                        type: d.callback,
                                        hash: true,
                                        url: b.source.url
                                    })
                                }
                            }
                            try {
                                if (m.callback) {
                                    m.fn(d.data, p)
                                } else {
                                    p(m.fn(d.data))
                                }
                            } catch (c) {
                                if (d.errback) {
                                    e.send({
                                        target: h,
                                        data: c,
                                        type: d.errback,
                                        hash: true,
                                        url: b.source.url
                                    })
                                } else {
                                    throw c
                                }
                            }
                        }
                    }
                },
                _url: function(a) {
                    return ("" + a).replace(/#.*$/, "")
                }
            };
            b.extend(e, {
                defaults: {
                    target: null,
                    url: null,
                    type: null,
                    data: null,
                    success: null,
                    error: null,
                    origin: "*",
                    hash: false
                }
            })
        }
        )(this, typeof sQuery === "undefined" ? NO_JQUERY : sQuery);
        (function(a) {
            a.cookie = function(b, c, d) {
                if (arguments.length > 1 && (!/Object/.test(Object.prototype.toString.call(c)) || c === null || c === undefined)) {
                    d = a.extend({}, d);
                    if (c === null || c === undefined) {
                        d.expires = -1
                    }
                    if (typeof d.expires === "number") {
                        var e = d.expires
                          , f = d.expires = new Date;
                        f.setDate(f.getDate() + e)
                    }
                    c = String(c);
                    return document.cookie = [encodeURIComponent(b), "=", d.raw ? c : encodeURIComponent(c), d.expires ? "; expires=" + d.expires.toUTCString() : "", d.path ? "; path=" + d.path : "", d.domain ? "; domain=" + d.domain : "", d.secure ? "; secure" : ""].join("")
                }
                d = c || {};
                var g = d.raw ? function(a) {
                    return a
                }
                : decodeURIComponent;
                var h = document.cookie.split("; ");
                for (var i = 0, j; j = "undefined" !== typeof h[i] && h[i].split("="); i++) {
                    if (g(j[0]) === b)
                        return g(j[1] || "")
                }
                return null
            }
        }
        )(sQuery);
        (function($) {
            'use strict';
            var escape = /["\\\x00-\x1f\x7f-\x9f]/g
              , meta = {
                '\b': '\\b',
                '\t': '\\t',
                '\n': '\\n',
                '\f': '\\f',
                '\r': '\\r',
                '"': '\\"',
                '\\': '\\\\'
            }
              , hasOwn = Object.prototype.hasOwnProperty;
            $.toJSON = typeof JSON === 'object' && JSON.stringify ? JSON.stringify : function(o) {
                if (o === null) {
                    return 'null';
                }
                var pairs, k, name, val, type = $.type(o);
                if (type === 'undefined') {
                    return undefined;
                }
                if (type === 'number' || type === 'boolean') {
                    return String(o);
                }
                if (type === 'string') {
                    return $.quoteString(o);
                }
                if (typeof o.toJSON === 'function') {
                    return $.toJSON(o.toJSON());
                }
                if (type === 'date') {
                    var month = o.getUTCMonth() + 1
                      , day = o.getUTCDate()
                      , year = o.getUTCFullYear()
                      , hours = o.getUTCHours()
                      , minutes = o.getUTCMinutes()
                      , seconds = o.getUTCSeconds()
                      , milli = o.getUTCMilliseconds();
                    if (month < 10) {
                        month = '0' + month;
                    }
                    if (day < 10) {
                        day = '0' + day;
                    }
                    if (hours < 10) {
                        hours = '0' + hours;
                    }
                    if (minutes < 10) {
                        minutes = '0' + minutes;
                    }
                    if (seconds < 10) {
                        seconds = '0' + seconds;
                    }
                    if (milli < 100) {
                        milli = '0' + milli;
                    }
                    if (milli < 10) {
                        milli = '0' + milli;
                    }
                    return '"' + year + '-' + month + '-' + day + 'T' + hours + ':' + minutes + ':' + seconds + '.' + milli + 'Z"';
                }
                pairs = [];
                if ($.isArray(o)) {
                    for (k = 0; k < o.length; k++) {
                        pairs.push($.toJSON(o[k]) || 'null');
                    }
                    return '[' + pairs.join(',') + ']';
                }
                if (typeof o === 'object') {
                    for (k in o) {
                        if (hasOwn.call(o, k)) {
                            type = typeof k;
                            if (type === 'number') {
                                name = '"' + k + '"';
                            } else if (type === 'string') {
                                name = $.quoteString(k);
                            } else {
                                continue;
                            }
                            type = typeof o[k];
                            if (type !== 'function' && type !== 'undefined') {
                                val = $.toJSON(o[k]);
                                pairs.push(name + ':' + val);
                            }
                        }
                    }
                    return '{' + pairs.join(',') + '}';
                }
            }
            ;
            $.evalJSON = typeof JSON === 'object' && JSON.parse ? JSON.parse : function(str) {
                return eval('(' + str + ')');
            }
            ;
            $.secureEvalJSON = typeof JSON === 'object' && JSON.parse ? JSON.parse : function(str) {
                var filtered = str.replace(/\\["\\\/bfnrtu]/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, '');
                if (/^[\],:{}\s]*$/.test(filtered)) {
                    return eval('(' + str + ')');
                }
                throw new SyntaxError('Error parsing JSON, source is not valid.');
            }
            ;
            $.quoteString = function(str) {
                if (str.match(escape)) {
                    return '"' + str.replace(escape, function(a) {
                        var c = meta[a];
                        if (typeof c === 'string') {
                            return c;
                        }
                        c = a.charCodeAt();
                        return '\\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);
                    }) + '"';
                }
                return '"' + str + '"';
            }
            ;
        }(sQuery));
        (function(s, l, d, t) {
            var m = d(s)
              , q = d(l)
              , a = d.fancybox = function() {
                a.open.apply(this, arguments)
            }
              , u = !1
              , k = l.createTouch !== t
              , o = function(a) {
                return "string" === d.type(a)
            }
              , n = function(b, c) {
                c && o(b) && 0 < b.indexOf("%") && (b = a.getViewport()[c] / 100 * parseInt(b, 10));
                return Math.round(b) + "px"
            };
            d.extend(a, {
                version: "2.0.5",
                defaults: {
                    padding: 15,
                    margin: 20,
                    width: 800,
                    height: 600,
                    minWidth: 100,
                    minHeight: 100,
                    maxWidth: 9999,
                    maxHeight: 9999,
                    autoSize: !0,
                    autoResize: !k,
                    autoCenter: !k,
                    fitToView: !0,
                    aspectRatio: !1,
                    topRatio: 0.5,
                    fixed: !1,
                    scrolling: "auto",
                    wrapCSS: "",
                    arrows: !0,
                    closeBtn: !0,
                    closeClick: !1,
                    nextClick: !1,
                    mouseWheel: !0,
                    autoPlay: !1,
                    playSpeed: 3E3,
                    preload: 3,
                    modal: !1,
                    loop: !0,
                    ajax: {
                        dataType: "html",
                        headers: {
                            "X-fancyBox": !0
                        }
                    },
                    keys: {
                        next: [13, 32, 34, 39, 40],
                        prev: [8, 33, 37, 38],
                        close: [27]
                    },
                    tpl: {
                        wrap: '<div class="sp-fancybox-wrap"><div class="sp-fancybox-skin"><div class="sp-fancybox-outer"><div class="sp-fancybox-inner"></div></div></div></div>',
                        image: '<img class="fancybox-image" src="{href}" alt="" />',
                        iframe: '<iframe class="sp-fancybox-iframe" name="fancybox-frame{rnd}" frameborder="0" hspace="0"' + (d.browser.msie ? ' allowtransparency="true"' : "") + "></iframe>",
                        swf: '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="wmode" value="transparent" /><param name="allowfullscreen" value="true" /><param name="allowscriptaccess" value="always" /><param name="movie" value="{href}" /><embed src="{href}" type="application/x-shockwave-flash" allowfullscreen="true" allowscriptaccess="always" width="100%" height="100%" wmode="transparent"></embed></object>',
                        error: '<p class="sp-fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',
                        closeBtn: '<div title="Close" class="sp-fancybox-item sp-fancybox-close"></div>',
                        next: '<a title="Next" class="sp-fancybox-nav sp-fancybox-next"><span></span></a>',
                        prev: '<a title="Previous" class="sp-fancybox-nav sp-fancybox-prev"><span></span></a>'
                    },
                    openEffect: "fade",
                    openSpeed: 300,
                    openEasing: "swing",
                    openOpacity: !0,
                    openMethod: "zoomIn",
                    closeEffect: "fade",
                    closeSpeed: 300,
                    closeEasing: "swing",
                    closeOpacity: !0,
                    closeMethod: "zoomOut",
                    nextEffect: "elastic",
                    nextSpeed: 300,
                    nextEasing: "swing",
                    nextMethod: "changeIn",
                    prevEffect: "elastic",
                    prevSpeed: 300,
                    prevEasing: "swing",
                    prevMethod: "changeOut",
                    helpers: {
                        overlay: {
                            speedIn: 0,
                            speedOut: 300,
                            opacity: 0.8,
                            css: {
                                cursor: "pointer"
                            },
                            closeClick: !0
                        },
                        title: {
                            type: "float"
                        }
                    }
                },
                group: {},
                opts: {},
                coming: null,
                current: null,
                isOpen: !1,
                isOpened: !1,
                player: {
                    timer: null,
                    isActive: !1
                },
                ajaxLoad: null,
                imgPreload: null,
                transitions: {},
                helpers: {},
                open: function(b, c) {
                    a.close(!0);
                    b && !d.isArray(b) && (b = b instanceof d ? d(b).get() : [b]);
                    a.isActive = !0;
                    a.opts = d.extend(!0, {}, a.defaults, c);
                    d.isPlainObject(c) && c.keys !== t && (a.opts.keys = c.keys ? d.extend({}, a.defaults.keys, c.keys) : !1);
                    a.group = b;
                    a._start(a.opts.index || 0)
                },
                cancel: function() {
                    a.coming && !1 === a.trigger("onCancel") || (a.coming = null,
                    a.hideLoading(),
                    a.ajaxLoad && a.ajaxLoad.abort(),
                    a.ajaxLoad = null,
                    a.imgPreload && (a.imgPreload.onload = a.imgPreload.onabort = a.imgPreload.onerror = null))
                },
                close: function(b) {
                    a.cancel();
                    a.current && !1 !== a.trigger("beforeClose") && (a.unbindEvents(),
                    !a.isOpen || b && !0 === b[0] ? (d(".sp-fancybox-wrap").stop().trigger("onReset").remove(),
                    a._afterZoomOut()) : (a.isOpen = a.isOpened = !1,
                    d(".sp-fancybox-item, .sp-fancybox-nav").remove(),
                    a.wrap.stop(!0).removeClass("sp-fancybox-opened"),
                    a.inner.css("overflow", "hidden"),
                    a.transitions[a.current.closeMethod]()))
                },
                play: function(b) {
                    var c = function() {
                        clearTimeout(a.player.timer)
                    }
                      , e = function() {
                        c();
                        a.current && a.player.isActive && (a.player.timer = setTimeout(a.next, a.current.playSpeed))
                    }
                      , f = function() {
                        c();
                        d("body").unbind(".player");
                        a.player.isActive = !1;
                        a.trigger("onPlayEnd")
                    };
                    if (a.player.isActive || b && !1 === b[0])
                        f();
                    else if (a.current && (a.current.loop || a.current.index < a.group.length - 1))
                        a.player.isActive = !0,
                        d("body").bind({
                            "afterShow.player onUpdate.player": e,
                            "onCancel.player beforeClose.player": f,
                            "beforeLoad.player": c
                        }),
                        e(),
                        a.trigger("onPlayStart")
                },
                next: function() {
                    a.current && a.jumpto(a.current.index + 1)
                },
                prev: function() {
                    a.current && a.jumpto(a.current.index - 1)
                },
                jumpto: function(b) {
                    a.current && (b = parseInt(b, 10),
                    1 < a.group.length && a.current.loop && (b >= a.group.length ? b = 0 : 0 > b && (b = a.group.length - 1)),
                    a.group[b] !== t && (a.cancel(),
                    a._start(b)))
                },
                reposition: function(b, c) {
                    var e;
                    a.isOpen && (e = a._getPosition(c),
                    b && "scroll" === b.type ? (delete e.position,
                    a.wrap.stop(!0, !0).animate(e, 200)) : a.wrap.css(e))
                },
                update: function(b) {
                    a.isOpen && (u || setTimeout(function() {
                        var c = a.current
                          , e = !b || b && "orientationchange" === b.type;
                        if (u && (u = !1,
                        c)) {
                            if (!b || "scroll" !== b.type || e)
                                c.autoSize && "iframe" !== c.type && (a.inner.height("auto"),
                                c.height = a.inner.height()),
                                (c.autoResize || e) && a._setDimension(),
                                c.canGrow && "iframe" !== c.type && a.inner.height("auto");
                            (c.autoCenter || e) && a.reposition(b);
                            a.trigger("onUpdate")
                        }
                    }, 200),
                    u = !0)
                },
                toggle: function() {
                    a.isOpen && (a.current.fitToView = !a.current.fitToView,
                    a.update())
                },
                hideLoading: function() {
                    q.unbind("keypress.fb");
                    d("#sp-fancybox-loading").remove()
                },
                showLoading: function() {
                    a.hideLoading();
                    q.bind("keypress.fb", function(b) {
                        27 === b.keyCode && (b.preventDefault(),
                        a.cancel())
                    });
                    d('<div id="sp-fancybox-loading"><div></div></div>').click(a.cancel).appendTo("body")
                },
                getViewport: function() {
                    return {
                        x: m.scrollLeft(),
                        y: m.scrollTop(),
                        w: k && s.innerWidth ? s.innerWidth : m.width(),
                        h: k && s.innerHeight ? s.innerHeight : m.height()
                    }
                },
                unbindEvents: function() {
                    if (a.wrap != null && typeof a.wrap != "undefined" && typeof a.wrap.unbind != "undefined") {
                        a.wrap.unbind(".fb");
                    }
                },
                bindEvents: function() {
                    var b = a.current
                      , c = b.keys;
                    b && (m.bind("resize.fb orientationchange.fb" + (b.autoCenter && !b.fixed ? " scroll.fb" : ""), a.update),
                    c && q.bind("keydown.fb", function(b) {
                        var f;
                        f = b.target || b.srcElement;
                        if (!b.ctrlKey && !b.altKey && !b.shiftKey && !b.metaKey && (!f || !f.type && !d(f).is("[contenteditable]")))
                            f = b.keyCode,
                            -1 < d.inArray(f, c.close) ? (a.close(),
                            b.preventDefault()) : -1 < d.inArray(f, c.next) ? (a.next(),
                            b.preventDefault()) : -1 < d.inArray(f, c.prev) && (a.prev(),
                            b.preventDefault())
                    }),
                    d.fn.mousewheel && b.mouseWheel && 1 < a.group.length && a.wrap.bind("mousewheel.fb", function(b, c) {
                        var d = b.target || null;
                        if (0 !== c && (!d || 0 === d.clientHeight || d.scrollHeight === d.clientHeight && d.scrollWidth === d.clientWidth))
                            b.preventDefault(),
                            a[0 < c ? "prev" : "next"]()
                    }))
                },
                trigger: function(b, c) {
                    var e, f = c || a[-1 < d.inArray(b, ["onCancel", "beforeLoad", "afterLoad"]) ? "coming" : "current"];
                    if (f) {
                        d.isFunction(f[b]) && (e = f[b].apply(f, Array.prototype.slice.call(arguments, 1)));
                        if (!1 === e)
                            return !1;
                        f.helpers && d.each(f.helpers, function(c, e) {
                            if (e && d.isPlainObject(a.helpers[c]) && d.isFunction(a.helpers[c][b]))
                                a.helpers[c][b](e, f)
                        });
                        d.event.trigger(b + ".fb")
                    }
                },
                isImage: function(a) {
                    return o(a) && a.match(/\.(jpe?g|gif|png|bmp)((\?|#).*)?$/i)
                },
                isSWF: function(a) {
                    return o(a) && a.match(/\.(swf)((\?|#).*)?$/i)
                },
                _start: function(b) {
                    var c = {}, e = a.group[b] || null, f, g, i;
                    if (e && (e.nodeType || e instanceof d))
                        f = !0,
                        d.metadata && (c = d(e).metadata());
                    c = d.extend(!0, {}, a.opts, {
                        index: b,
                        element: e
                    }, d.isPlainObject(e) ? e : c);
                    d.each(["href", "title", "content", "type"], function(b, g) {
                        c[g] = a.opts[g] || f && d(e).attr(g) || c[g] || null
                    });
                    "number" === typeof c.margin && (c.margin = [c.margin, c.margin, c.margin, c.margin]);
                    c.modal && d.extend(!0, c, {
                        closeBtn: !1,
                        closeClick: !1,
                        nextClick: !1,
                        arrows: !1,
                        mouseWheel: !1,
                        keys: null,
                        helpers: {
                            overlay: {
                                css: {
                                    cursor: "auto"
                                },
                                closeClick: !1
                            }
                        }
                    });
                    a.coming = c;
                    if (!1 === a.trigger("beforeLoad"))
                        a.coming = null;
                    else {
                        g = c.type;
                        b = c.href || e;
                        g || (f && (g = d(e).data("sp-fancybox-type"),
                        g || (g = (g = e.className.match(/fancybox\.(\w+)/)) ? g[1] : null)),
                        !g && o(b) && (a.isImage(b) ? g = "image" : a.isSWF(b) ? g = "swf" : b.match(/^#/) && (g = "inline")),
                        g || (g = f ? "inline" : "html"),
                        c.type = g);
                        if ("inline" === g || "html" === g) {
                            if (c.content || (c.content = "inline" === g ? d(o(b) ? b.replace(/.*(?=#[^\s]+$)/, "") : b) : e),
                            !c.content || !c.content.length)
                                g = null
                        } else
                            b || (g = null);
                        "ajax" === g && o(b) && (i = b.split(/\s+/, 2),
                        b = i.shift(),
                        c.selector = i.shift());
                        c.href = b;
                        c.group = a.group;
                        c.isDom = f;
                        switch (g) {
                        case "image":
                            a._loadImage();
                            break;
                        case "ajax":
                            a._loadAjax();
                            break;
                        case "inline":
                        case "iframe":
                        case "swf":
                        case "html":
                            a._afterLoad();
                            break;
                        default:
                            a._error("type")
                        }
                    }
                },
                _error: function(b) {
                    a.hideLoading();
                    d.extend(a.coming, {
                        type: "html",
                        autoSize: !0,
                        minWidth: 0,
                        minHeight: 0,
                        padding: 15,
                        hasError: b,
                        content: a.coming.tpl.error
                    });
                    a._afterLoad()
                },
                _loadImage: function() {
                    var b = a.imgPreload = new Image;
                    b.onload = function() {
                        this.onload = this.onerror = null;
                        a.coming.width = this.width;
                        a.coming.height = this.height;
                        a._afterLoad()
                    }
                    ;
                    b.onerror = function() {
                        this.onload = this.onerror = null;
                        a._error("image")
                    }
                    ;
                    b.src = a.coming.href;
                    (b.complete === t || !b.complete) && a.showLoading()
                },
                _loadAjax: function() {
                    a.showLoading();
                    a.ajaxLoad = d.ajax(d.extend({}, a.coming.ajax, {
                        url: a.coming.href,
                        error: function(b, c) {
                            a.coming && "abort" !== c ? a._error("ajax", b) : a.hideLoading()
                        },
                        success: function(b, c) {
                            "success" === c && (a.coming.content = b,
                            a._afterLoad())
                        }
                    }))
                },
                _preloadImages: function() {
                    var b = a.group, c = a.current, e = b.length, f, g, i, h = Math.min(c.preload, e - 1);
                    if (c.preload && !(2 > b.length))
                        for (i = 1; i <= h; i += 1)
                            if (f = b[(c.index + i) % e],
                            g = f.href || d(f).attr("href") || f,
                            "image" === f.type || a.isImage(g))
                                (new Image).src = g
                },
                _afterLoad: function() {
                    a.hideLoading();
                    !a.coming || !1 === a.trigger("afterLoad", a.current) ? a.coming = !1 : (a.isOpened ? (d(".sp-fancybox-item, .sp-fancybox-nav").remove(),
                    a.wrap.stop(!0).removeClass("sp-fancybox-opened"),
                    a.inner.css("overflow", "hidden"),
                    a.transitions[a.current.prevMethod]()) : (d(".sp-fancybox-wrap").stop().trigger("onReset").remove(),
                    a.trigger("afterClose")),
                    a.unbindEvents(),
                    a.isOpen = !1,
                    a.current = a.coming,
                    a.wrap = d(a.current.tpl.wrap).addClass("fancybox-" + (k ? "mobile" : "desktop") + " fancybox-type-" + a.current.type + " sp-fancybox-tmp " + a.current.wrapCSS).appendTo("body"),
                    a.skin = d(".sp-fancybox-skin", a.wrap).css("padding", n(a.current.padding)),
                    a.outer = d(".sp-fancybox-outer", a.wrap),
                    a.inner = d(".sp-fancybox-inner", a.wrap),
                    a._setContent())
                },
                _setContent: function() {
                    var b = a.current
                      , c = b.content
                      , e = b.type
                      , f = b.minWidth
                      , g = b.minHeight
                      , i = b.maxWidth
                      , h = b.maxHeight;
                    switch (e) {
                    case "inline":
                    case "ajax":
                    case "html":
                        b.selector ? c = d("<div>").html(c).find(b.selector) : c instanceof d && (c.parent().hasClass("sp-fancybox-inner") && c.parents(".sp-fancybox-wrap").unbind("onReset"),
                        c = c.show().detach(),
                        d(a.wrap).bind("onReset", function() {
                            c.appendTo("body").hide()
                        }));
                        b.autoSize && (f = d('<div class="sp-fancybox-wrap ' + a.current.wrapCSS + ' fancybox-tmp"></div>').appendTo("body").css({
                            minWidth: n(f, "w"),
                            minHeight: n(g, "h"),
                            maxWidth: n(i, "w"),
                            maxHeight: n(h, "h")
                        }).append(c),
                        b.width = f.width(),
                        b.height = f.height(),
                        f.width(a.current.width),
                        f.height() > b.height && (f.width(b.width + 1),
                        b.width = f.width(),
                        b.height = f.height()),
                        c = f.contents().detach(),
                        f.remove());
                        break;
                    case "image":
                        c = b.tpl.image.replace("{href}", b.href);
                        b.aspectRatio = !0;
                        break;
                    case "swf":
                        c = b.tpl.swf.replace(/\{width\}/g, b.width).replace(/\{height\}/g, b.height).replace(/\{href\}/g, b.href);
                        break;
                    case "iframe":
                        c = d(b.tpl.iframe.replace("{rnd}", (new Date).getTime())).attr("scrolling", b.scrolling).attr("src", b.href),
                        b.scrolling = k ? "scroll" : "auto"
                    }
                    if ("image" === e || "swf" === e)
                        b.autoSize = !1,
                        b.scrolling = "visible";
                    "iframe" === e && b.autoSize ? (a.showLoading(),
                    a._setDimension(),
                    a.inner.css("overflow", b.scrolling),
                    c.bind({
                        onCancel: function() {
                            d(this).unbind();
                            a._afterZoomOut()
                        },
                        load: function() {
                            a.hideLoading();
                            try {
                                this.contentWindow.document.location && (a.current.height = d(this).contents().find("body").height())
                            } catch (b) {
                                a.current.autoSize = !1
                            }
                            a[a.isOpen ? "_afterZoomIn" : "_beforeShow"]()
                        }
                    }).appendTo(a.inner)) : (a.inner.append(c),
                    a._beforeShow())
                },
                _beforeShow: function() {
                    a.coming = null;
                    a.trigger("beforeShow");
                    a._setDimension();
                    a.wrap.hide().removeClass("sp-fancybox-tmp");
                    a.bindEvents();
                    a._preloadImages();
                    a.transitions[a.isOpened ? a.current.nextMethod : a.current.openMethod]()
                },
                _setDimension: function() {
                    var b = a.wrap, c = a.inner, e = a.current, f = a.getViewport(), g = e.margin, i = 2 * e.padding, h = e.width, j = e.height, r = e.maxWidth + i, k = e.maxHeight + i, l = e.minWidth + i, m = e.minHeight + i, p;
                    f.w -= g[1] + g[3];
                    f.h -= g[0] + g[2];
                    o(h) && 0 < h.indexOf("%") && (h = (f.w - i) * parseFloat(h) / 100);
                    o(j) && 0 < j.indexOf("%") && (j = (f.h - i) * parseFloat(j) / 100);
                    g = h / j;
                    h += i;
                    j += i;
                    e.fitToView && (r = Math.min(f.w, r),
                    k = Math.min(f.h, k));
                    if (e.aspectRatio) {
                        if (h > r && (h = r,
                        j = (h - i) / g + i),
                        j > k && (j = k,
                        h = (j - i) * g + i),
                        h < l && (h = l,
                        j = (h - i) / g + i),
                        j < m)
                            j = m,
                            h = (j - i) * g + i
                    } else
                        h = Math.max(l, Math.min(h, r)),
                        j = Math.max(m, Math.min(j, k));
                    h = Math.round(h);
                    j = Math.round(j);
                    d(b.add(c)).width("auto").height("auto");
                    c.width(h - i).height(j - i);
                    b.width(h);
                    p = b.height();
                    if (h > r || p > k)
                        for (; (h > r || p > k) && h > l && p > m; )
                            j -= 10,
                            e.aspectRatio ? (h = Math.round((j - i) * g + i),
                            h < l && (h = l,
                            j = (h - i) / g + i)) : h -= 10,
                            c.width(h - i).height(j - i),
                            b.width(h),
                            p = b.height();
                    e.dim = {
                        width: n(h),
                        height: n(p)
                    };
                    e.canGrow = e.autoSize && j > m && j < k;
                    e.canShrink = !1;
                    e.canExpand = !1;
                    if (h - i < e.width || j - i < e.height)
                        e.canExpand = !0;
                    else if ((h > f.w || p > f.h) && h > l && j > m)
                        e.canShrink = !0;
                    a.innerSpace = p - i - c.height()
                },
                _getPosition: function(b) {
                    var c = a.current
                      , e = a.getViewport()
                      , f = c.margin
                      , d = a.wrap.width() + f[1] + f[3]
                      , i = a.wrap.height() + f[0] + f[2]
                      , h = {
                        position: "absolute",
                        top: f[0] + e.y,
                        left: f[3] + e.x
                    };
                    c.autoCenter && c.fixed && !b && i <= e.h && d <= e.w && (h = {
                        position: "fixed",
                        top: f[0],
                        left: f[3]
                    });
                    h.top = n(Math.max(h.top, h.top + (e.h - i) * c.topRatio));
                    h.left = n(Math.max(h.left, h.left + 0.5 * (e.w - d)));
                    return h
                },
                _afterZoomIn: function() {
                    var b = a.current
                      , c = b ? b.scrolling : "no";
                    if (b && (a.isOpen = a.isOpened = !0,
                    a.wrap.addClass("sp-fancybox-opened"),
                    a.inner.css("overflow", "yes" === c ? "scroll" : "no" === c ? "hidden" : c),
                    a.trigger("afterShow"),
                    a.update(),
                    (b.closeClick || b.nextClick) && a.inner.css("cursor", "pointer").bind("click.fb", function(c) {
                        if (!d(c.target).is("a") && !d(c.target).parent().is("a"))
                            a[b.closeClick ? "close" : "next"]()
                    }),
                    b.closeBtn && d(b.tpl.closeBtn).appendTo(a.skin).bind("click.fb", a.close),
                    b.arrows && 1 < a.group.length && ((b.loop || 0 < b.index) && d(b.tpl.prev).appendTo(a.outer).bind("click.fb", a.prev),
                    (b.loop || b.index < a.group.length - 1) && d(b.tpl.next).appendTo(a.outer).bind("click.fb", a.next)),
                    a.opts.autoPlay && !a.player.isActive))
                        a.opts.autoPlay = !1,
                        a.play()
                },
                _afterZoomOut: function() {
                    var b = a.current;
                    a.wrap.trigger("onReset").remove();
                    d.extend(a, {
                        group: {},
                        opts: {},
                        current: null,
                        isActive: !1,
                        isOpened: !1,
                        isOpen: !1,
                        wrap: null,
                        skin: null,
                        outer: null,
                        inner: null
                    });
                    a.trigger("afterClose", b)
                }
            });
            a.transitions = {
                getOrigPosition: function() {
                    var b = a.current
                      , c = b.element
                      , e = b.padding
                      , f = d(b.orig)
                      , g = {}
                      , i = 50
                      , h = 50;
                    !f.length && b.isDom && d(c).is(":visible") && (f = d(c).find("img:first"),
                    f.length || (f = d(c)));
                    f.length ? (g = f.offset(),
                    f.is("img") && (i = f.outerWidth(),
                    h = f.outerHeight())) : (b = a.getViewport(),
                    g.top = b.y + 0.5 * (b.h - h),
                    g.left = b.x + 0.5 * (b.w - i));
                    return g = {
                        top: n(g.top - e),
                        left: n(g.left - e),
                        width: n(i + 2 * e),
                        height: n(h + 2 * e)
                    }
                },
                step: function(b, c) {
                    var e = c.prop, d, g;
                    if ("width" === e || "height" === e)
                        d = Math.ceil(b - 2 * a.current.padding),
                        "height" === e && (g = (b - c.start) / (c.end - c.start),
                        c.start > c.end && (g = 1 - g),
                        d -= a.innerSpace * g),
                        a.inner[e](d)
                },
                zoomIn: function() {
                    var b = a.wrap
                      , c = a.current
                      , e = c.openEffect
                      , f = "elastic" === e
                      , g = d.extend({}, c.dim, a._getPosition(f))
                      , i = d.extend({
                        opacity: 1
                    }, g);
                    delete i.position;
                    f ? (g = this.getOrigPosition(),
                    c.openOpacity && (g.opacity = 0),
                    a.outer.add(a.inner).width("auto").height("auto")) : "fade" === e && (g.opacity = 0);
                    b.css(g).show().animate(i, {
                        duration: "none" === e ? 0 : c.openSpeed,
                        easing: c.openEasing,
                        step: f ? this.step : null,
                        complete: a._afterZoomIn
                    })
                },
                zoomOut: function() {
                    var b = a.wrap
                      , c = a.current
                      , d = c.openEffect
                      , f = "elastic" === d
                      , g = {
                        opacity: 0
                    };
                    f && ("fixed" === b.css("position") && b.css(a._getPosition(!0)),
                    g = this.getOrigPosition(),
                    c.closeOpacity && (g.opacity = 0));
                    b.animate(g, {
                        duration: "none" === d ? 0 : c.closeSpeed,
                        easing: c.closeEasing,
                        step: f ? this.step : null,
                        complete: a._afterZoomOut
                    })
                },
                changeIn: function() {
                    var b = a.wrap
                      , c = a.current
                      , d = c.nextEffect
                      , f = "elastic" === d
                      , g = a._getPosition(f)
                      , i = {
                        opacity: 1
                    };
                    g.opacity = 0;
                    f && (g.top = n(parseInt(g.top, 10) - 200),
                    i.top = "+=200px");
                    b.css(g).show().animate(i, {
                        duration: "none" === d ? 0 : c.nextSpeed,
                        easing: c.nextEasing,
                        complete: a._afterZoomIn
                    })
                },
                changeOut: function() {
                    var b = a.wrap
                      , c = a.current
                      , e = c.prevEffect
                      , f = {
                        opacity: 0
                    };
                    b.removeClass("sp-fancybox-opened");
                    "elastic" === e && (f.top = "+=200px");
                    b.animate(f, {
                        duration: "none" === e ? 0 : c.prevSpeed,
                        easing: c.prevEasing,
                        complete: function() {
                            d(this).trigger("onReset").remove()
                        }
                    })
                }
            };
            a.helpers.overlay = {
                overlay: null,
                update: function() {
                    var a, c;
                    this.overlay.width("100%").height("100%");
                    d.browser.msie || k ? (a = Math.max(l.documentElement.scrollWidth, l.body.scrollWidth),
                    c = Math.max(l.documentElement.offsetWidth, l.body.offsetWidth),
                    a = a < c ? m.width() : a) : a = q.width();
                    this.overlay.width(a).height(q.height())
                },
                beforeShow: function(b) {
                    this.overlay || (b = d.extend(!0, {}, a.defaults.helpers.overlay, b),
                    this.overlay = d('<div id="sp-fancybox-overlay"></div>').css(b.css).appendTo("body"),
                    b.closeClick && this.overlay.bind("click.fb", a.close),
                    a.current.fixed && !k ? this.overlay.addClass("overlay-fixed") : (this.update(),
                    this.onUpdate = function() {
                        this.update()
                    }
                    ),
                    this.overlay.fadeTo(b.speedIn, b.opacity))
                },
                afterClose: function(a) {
                    this.overlay && this.overlay.fadeOut(a.speedOut || 0, function() {
                        d(this).remove()
                    });
                    this.overlay = null
                }
            };
            a.helpers.title = {
                beforeShow: function(b) {
                    var c;
                    if (c = a.current.title)
                        c = d('<div class="sp-fancybox-title sp-fancybox-title-' + b.type + '-wrap">' + c + "</div>").appendTo("body"),
                        "float" === b.type && (c.width(c.width()),
                        c.wrapInner('<span class="child"></span>'),
                        a.current.margin[2] += Math.abs(parseInt(c.css("margin-bottom"), 10))),
                        c.appendTo("over" === b.type ? a.inner : "outside" === b.type ? a.wrap : a.skin)
                }
            };
            d.fn.fancybox = function(b) {
                var c = d(this), e = this.selector || "", f, g = function(g) {
                    var h = this, j = f, k;
                    !g.ctrlKey && !g.altKey && !g.shiftKey && !g.metaKey && !d(h).is(".sp-fancybox-wrap") && (g.preventDefault(),
                    g = b.groupAttr || "data-fancybox-group",
                    k = d(h).attr(g),
                    k || (g = "rel",
                    k = h[g]),
                    k && "" !== k && "nofollow" !== k && (h = e.length ? d(e) : c,
                    h = h.filter("[" + g + '="' + k + '"]'),
                    j = h.index(this)),
                    b.index = j,
                    a.open(h, b))
                }, b = b || {};
                f = b.index || 0;
                e ? q.undelegate(e, "click.fb-start").delegate(e, "click.fb-start", g) : c.unbind("click.fb-start").bind("click.fb-start", g);
                return this
            }
            ;
            d(l).ready(function() {
                a.defaults.fixed = d.support.fixedPosition || !(d.browser.msie && 6 >= d.browser.version) && !k
            })
        }
        )(window, document, sQuery);
        (function($) {
            var highlight;
            highlight = $.highlight = {
                conf: {
                    layerId: 'spApiOverlayMask',
                    layerClass: 'sp-highlight-overlay',
                    appendTarget: 'body',
                    highlightedElements: [],
                    closeOnEsc: false,
                    closeOnClick: true,
                    paddingLeft: 0,
                    paddingTop: 0,
                    padding: 0,
                    loadSpeed: 'fast',
                    closeSpeed: 'fast',
                    scroll: false,
                    scrollSpeed: 500,
                    scrollSize: 30,
                    prevBackgroundColor: '',
                    nextBackgroundColor: '',
                    zIndex: 99999998,
                    opacity: 0.8,
                    startOpacity: 0,
                    color: '#000',
                    onLoad: null,
                    onClose: null,
                    onBeforeLoad: null,
                    onBeforeClose: null
                }
            };
            function call(fn) {
                if (fn) {
                    return fn.call($.mask);
                }
            }
            var mask, loaded, config, elements;
            function show(x0, y0, x1, y1, c) {
                var overlay = $('<div class="' + c.layerClass + '"></div>').css({
                    position: 'absolute',
                    background: c.color,
                    opacity: c.opacity,
                    filter: 'alpha(opacity=' + Math.round(c.opacity * 100) + ')',
                    top: parseInt(y0) + 'px',
                    left: parseInt(x0) + 'px',
                    width: (parseInt(x1) - parseInt(x0)) + 'px',
                    height: (parseInt(y1) - parseInt(y0)) + 'px',
                    zIndex: c.zIndex
                }).appendTo($(c.appendTarget));
                $(c.appendTarget).append(overlay);
            }
            $.mask = {
                load: function load(c, el) {
                    if (loaded) {
                        return this;
                    }
                    c = c || c;
                    config = c = $.extend($.extend({}, highlight.conf), c);
                    if (el && el.length) {
                        if (c.highlightedElements.length) {
                            elements = sQuery(c.highlightedElements.join());
                        } else {
                            elements = el;
                        }
                        if (call(c.onBeforeLoad) === false) {
                            return this;
                        }
                        $.mask.init(c, elements);
                        if (c.scroll === true) {
                            $("body, html").animate({
                                scrollTop: $(el).offset().top - c.scrollSize
                            }, c.scrollSpeed);
                        }
                        if (call(c.onLoad) === false) {
                            return this;
                        }
                        loaded = "full";
                    }
                    return this;
                },
                init: function init(c, els) {
                    $.mask.removeOverlay();
                    var padding = c.padding || 0
                      , paddingLeft = c.paddingLeft || 0
                      , paddingTop = c.paddingTop || 0
                      , bounds = []
                      , xValues = [0]
                      , sortedX = [];
                    els.each(function(i, el) {
                        var $el = $(el)
                          , offset = $el.offset()
                          , x0 = offset.left - padding - paddingLeft
                          , y0 = offset.top - padding - paddingTop
                          , x1 = offset.left + $el.outerWidth() + padding + paddingLeft
                          , y1 = offset.top + $el.outerHeight() + padding + paddingTop;
                        bounds.push({
                            topLeft: {
                                x: x0,
                                y: y0
                            },
                            bottomRight: {
                                x: x1,
                                y: y1
                            }
                        });
                        xValues.push(x0);
                        xValues.push(x1);
                    });
                    xValues.push($(document).width());
                    xValues.sort(function(a, b) {
                        return a - b;
                    });
                    var last;
                    var i;
                    var j;
                    var bound;
                    for (i = 0; i < xValues.length; i++) {
                        if (last != xValues[i]) {
                            last = xValues[i];
                            sortedX.push(xValues[i]);
                        }
                    }
                    bounds.sort(function(a, b) {
                        return a.topLeft.y - b.topLeft.y;
                    });
                    for (i = 0; i < sortedX.length - 1; i++) {
                        var x0 = sortedX[i]
                          , x1 = sortedX[i + 1]
                          , intersecting = [];
                        for (j = 0; j < bounds.length; j++) {
                            bound = bounds[j];
                            if (bound.topLeft.x <= x0 && bound.bottomRight.x >= x1) {
                                intersecting.push([bound.topLeft.y, bound.bottomRight.y]);
                            }
                        }
                        var yValues = [0];
                        for (j = 0; j < intersecting.length; j++) {
                            bound = intersecting[j];
                            if (bound[0] > yValues[yValues.length - 1]) {
                                yValues.push(bound[0]);
                                yValues.push(bound[1]);
                            } else {
                                yValues.pop();
                                yValues.push(bound[1]);
                            }
                        }
                        yValues.push($(document).height());
                        for (j = 0; j < yValues.length - 1; j = j + 2) {
                            show(x0, yValues[j], x1, yValues[j + 1], c);
                        }
                    }
                    mask = $('.' + c.layerClass);
                    if (c.closeOnEsc) {
                        $(document).on("keydown.mask", function(e) {
                            if (e.keyCode == 27) {
                                $.mask.close(e);
                            }
                        });
                    }
                    if (c.closeOnClick) {
                        mask.on("click.mask", function(e) {
                            $.mask.close(e);
                        });
                    }
                    $(window).on("resize.mask", function() {
                        $.mask.fit();
                    });
                    $(window).on("scroll.mask", function() {
                        $.mask.fit();
                    });
                },
                close: function close() {
                    if (loaded) {
                        if (call(config.onBeforeClose) === false) {
                            return this;
                        }
                        mask.fadeOut(config.closeSpeed);
                        mask.off("click.mask");
                        $(document).off("keydown.mask");
                        $(window).off("resize.mask");
                        $(window).off("scroll.mask");
                        if (call(config.onClose) === false) {
                            return this;
                        }
                        loaded = false;
                    }
                    return this;
                },
                closeSlient: function() {
                    if (loaded) {
                        mask.fadeOut(config.closeSpeed);
                        mask.off("click.mask");
                        $(document).off("keydown.mask");
                        $(window).off("resize.mask");
                        $(window).off("scroll.mask");
                        loaded = false;
                    }
                    return this;
                },
                fit: function fit() {
                    $.mask.init(config, elements);
                },
                removeOverlay: function removeOverlay() {
                    if (mask) {
                        mask.off("click.mask");
                        $(document).off("keydown.mask");
                        $(window).off("resize.mask");
                        $(window).off("scroll.mask");
                        mask.remove();
                    }
                },
                getMask: function() {
                    return mask;
                },
                isLoaded: function(fully) {
                    return fully ? loaded == 'full' : loaded;
                },
                getConf: function() {
                    return config;
                },
                setConf: function(c) {
                    c = c || c;
                    config = c = $.extend($.extend({}, highlight.conf), c);
                    return c;
                },
                getApparent: function() {
                    return elements;
                }
            };
            $.fn.mask = function(conf) {
                $.mask.load(conf);
                return this;
            }
            ;
            $.fn.highlight = function(conf) {
                $.mask.load(conf, this);
                return this;
            }
            ;
        }
        )(sQuery);
        (function() {
            if (!window.addEventListener) {
                return;
            }
            var self = window.StyleFix = {
                link: function(link) {
                    try {
                        if (link.rel !== 'stylesheet' || link.hasAttribute('data-noprefix')) {
                            return;
                        }
                    } catch (e) {
                        return;
                    }
                    var url = link.href || link.getAttribute('data-href'), base = url.replace(/[^\/]+$/, ''), base_scheme = (/^[a-z]{3,10}:/.exec(base) || [''])[0], base_domain = (/^[a-z]{3,10}:\/\/[^\/]+/.exec(base) || [''])[0], base_query = /^([^?]*)\??/.exec(url)[1], parent = link.parentNode, xhr = new XMLHttpRequest(), process;
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            process();
                        }
                    }
                    ;
                    process = function() {
                        var css = xhr.responseText;
                        if (css && link.parentNode && (!xhr.status || xhr.status < 400 || xhr.status > 600)) {
                            css = self.fix(css, true, link);
                            if (base) {
                                css = css.replace(/url\(\s*?((?:"|')?)(.+?)\1\s*?\)/gi, function($0, quote, url) {
                                    if (/^([a-z]{3,10}:|#)/i.test(url)) {
                                        return $0;
                                    } else if (/^\/\//.test(url)) {
                                        return 'url("' + base_scheme + url + '")';
                                    } else if (/^\//.test(url)) {
                                        return 'url("' + base_domain + url + '")';
                                    } else if (/^\?/.test(url)) {
                                        return 'url("' + base_query + url + '")';
                                    } else {
                                        return 'url("' + base + url + '")';
                                    }
                                });
                                var escaped_base = base.replace(/([\\\^\$*+[\]?{}.=!:(|)])/g, "\\$1");
                                css = css.replace(RegExp('\\b(behavior:\\s*?url\\(\'?"?)' + escaped_base, 'gi'), '$1');
                            }
                            var style = document.createElement('style');
                            style.textContent = css;
                            style.media = link.media;
                            style.disabled = link.disabled;
                            style.setAttribute('data-href', link.getAttribute('href'));
                            parent.insertBefore(style, link);
                            parent.removeChild(link);
                            style.media = link.media;
                        }
                    }
                    ;
                    try {
                        xhr.open('GET', url);
                        xhr.send(null);
                    } catch (e) {
                        if (typeof XDomainRequest != "undefined") {
                            xhr = new XDomainRequest();
                            xhr.onerror = xhr.onprogress = function() {}
                            ;
                            xhr.onload = process;
                            xhr.open("GET", url);
                            xhr.send(null);
                        }
                    }
                    link.setAttribute('data-inprogress', '');
                },
                styleElement: function(style) {
                    if (style.hasAttribute('data-noprefix')) {
                        return;
                    }
                    var disabled = style.disabled;
                    style.textContent = self.fix(style.textContent, true, style);
                    style.disabled = disabled;
                },
                styleAttribute: function(element) {
                    var css = element.getAttribute('style');
                    css = self.fix(css, false, element);
                    element.setAttribute('style', css);
                },
                process: function() {
                    $('link[rel="stylesheet"]:not([data-inprogress])').forEach(StyleFix.link);
                    $('style').forEach(StyleFix.styleElement);
                    $('[style]').forEach(StyleFix.styleAttribute);
                },
                register: function(fixer, index) {
                    (self.fixers = self.fixers || []).splice(index === undefined ? self.fixers.length : index, 0, fixer);
                },
                fix: function(css, raw, element) {
                    for (var i = 0; i < self.fixers.length; i++) {
                        css = self.fixers[i](css, raw, element) || css;
                    }
                    return css;
                },
                camelCase: function(str) {
                    return str.replace(/-([a-z])/g, function($0, $1) {
                        return $1.toUpperCase();
                    }).replace('-', '');
                },
                deCamelCase: function(str) {
                    return str.replace(/[A-Z]/g, function($0) {
                        return '-' + $0.toLowerCase()
                    });
                }
            };
            function $(expr, con) {
                return [].slice.call((con || document).querySelectorAll(expr));
            }
        }
        )();
        (function(root) {
            if (!window.StyleFix || !window.getComputedStyle) {
                return;
            }
            function fix(what, before, after, replacement, css) {
                what = self[what];
                if (what.length) {
                    var regex = RegExp(before + '(' + what.join('|') + ')' + after, 'gi');
                    css = css.replace(regex, replacement);
                }
                return css;
            }
            var self = window.PrefixFree = {
                prefixCSS: function(css, raw, element) {
                    var prefix = self.prefix;
                    if (self.functions.indexOf('linear-gradient') > -1) {
                        css = css.replace(/(\s|:|,)(repeating-)?linear-gradient\(\s*(-?\d*\.?\d*)deg/ig, function($0, delim, repeating, deg) {
                            return delim + (repeating || '') + 'linear-gradient(' + (90 - deg) + 'deg';
                        });
                    }
                    css = fix('functions', '(\\s|:|,)', '\\s*\\(', '$1' + prefix + '$2(', css);
                    css = fix('keywords', '(\\s|:)', '(\\s|;|\\}|$)', '$1' + prefix + '$2$3', css);
                    css = fix('properties', '(^|\\{|\\s|;)', '\\s*:', '$1' + prefix + '$2:', css);
                    if (self.properties.length) {
                        var regex = RegExp('\\b(' + self.properties.join('|') + ')(?!:)', 'gi');
                        css = fix('valueProperties', '\\b', ':(.+?);', function($0) {
                            return $0.replace(regex, prefix + "$1")
                        }, css);
                    }
                    if (raw) {
                        css = fix('selectors', '', '\\b', self.prefixSelector, css);
                        css = fix('atrules', '@', '\\b', '@' + prefix + '$1', css);
                    }
                    css = css.replace(RegExp('-' + prefix, 'g'), '-');
                    css = css.replace(/-\*-(?=[a-z]+)/gi, self.prefix);
                    return css;
                },
                property: function(property) {
                    return (self.properties.indexOf(property) >= 0 ? self.prefix : '') + property;
                },
                value: function(value, property) {
                    value = fix('functions', '(^|\\s|,)', '\\s*\\(', '$1' + self.prefix + '$2(', value);
                    value = fix('keywords', '(^|\\s)', '(\\s|$)', '$1' + self.prefix + '$2$3', value);
                    if (self.valueProperties.indexOf(property) >= 0) {
                        value = fix('properties', '(^|\\s|,)', '($|\\s|,)', '$1' + self.prefix + '$2$3', value);
                    }
                    return value;
                },
                prefixSelector: function(selector) {
                    return selector.replace(/^:{1,2}/, function($0) {
                        return $0 + self.prefix
                    })
                },
                prefixProperty: function(property, camelCase) {
                    var prefixed = self.prefix + property;
                    return camelCase ? StyleFix.camelCase(prefixed) : prefixed;
                }
            };
            (function() {
                var prefixes = {}
                  , properties = []
                  , shorthands = {}
                  , style = getComputedStyle(document.documentElement, null)
                  , dummy = document.createElement('div').style;
                var iterate = function(property) {
                    if (property.charAt(0) === '-') {
                        properties.push(property);
                        var parts = property.split('-')
                          , prefix = parts[1];
                        prefixes[prefix] = ++prefixes[prefix] || 1;
                        while (parts.length > 3) {
                            parts.pop();
                            var shorthand = parts.join('-');
                            if (supported(shorthand) && properties.indexOf(shorthand) === -1) {
                                properties.push(shorthand);
                            }
                        }
                    }
                }
                  , supported = function(property) {
                    return StyleFix.camelCase(property)in dummy;
                };
                if (style.length > 0) {
                    for (var i = 0; i < style.length; i++) {
                        iterate(style[i])
                    }
                } else {
                    for (var property in style) {
                        iterate(StyleFix.deCamelCase(property));
                    }
                }
                var highest = {
                    uses: 0
                };
                for (var prefix in prefixes) {
                    var uses = prefixes[prefix];
                    if (highest.uses < uses) {
                        highest = {
                            prefix: prefix,
                            uses: uses
                        };
                    }
                }
                self.prefix = '-' + highest.prefix + '-';
                self.Prefix = StyleFix.camelCase(self.prefix);
                self.properties = [];
                for (var i = 0; i < properties.length; i++) {
                    var property = properties[i];
                    if (property.indexOf(self.prefix) === 0) {
                        var unprefixed = property.slice(self.prefix.length);
                        if (!supported(unprefixed)) {
                            self.properties.push(unprefixed);
                        }
                    }
                }
                if (self.Prefix == 'Ms' && !('transform'in dummy) && !('MsTransform'in dummy) && ('msTransform'in dummy)) {
                    self.properties.push('transform', 'transform-origin');
                }
                self.properties.sort();
            }
            )();
            (function() {
                var functions = {
                    'linear-gradient': {
                        property: 'backgroundImage',
                        params: 'red, teal'
                    },
                    'calc': {
                        property: 'width',
                        params: '1px + 5%'
                    },
                    'element': {
                        property: 'backgroundImage',
                        params: '#foo'
                    },
                    'cross-fade': {
                        property: 'backgroundImage',
                        params: 'url(a.png), url(b.png), 50%'
                    }
                };
                functions['repeating-linear-gradient'] = functions['repeating-radial-gradient'] = functions['radial-gradient'] = functions['linear-gradient'];
                var keywords = {
                    'initial': 'color',
                    'zoom-in': 'cursor',
                    'zoom-out': 'cursor',
                    'box': 'display',
                    'flexbox': 'display',
                    'inline-flexbox': 'display',
                    'flex': 'display',
                    'inline-flex': 'display',
                    'grid': 'display',
                    'inline-grid': 'display',
                    'min-content': 'width'
                };
                self.functions = [];
                self.keywords = [];
                var style = document.createElement('div').style;
                function supported(value, property) {
                    style[property] = '';
                    style[property] = value;
                    return !!style[property];
                }
                for (var func in functions) {
                    var test = functions[func]
                      , property = test.property
                      , value = func + '(' + test.params + ')';
                    if (!supported(value, property) && supported(self.prefix + value, property)) {
                        self.functions.push(func);
                    }
                }
                for (var keyword in keywords) {
                    var property = keywords[keyword];
                    if (!supported(keyword, property) && supported(self.prefix + keyword, property)) {
                        self.keywords.push(keyword);
                    }
                }
            }
            )();
            (function() {
                var selectors = {
                    ':read-only': null,
                    ':read-write': null,
                    ':any-link': null,
                    '::selection': null
                }
                  , atrules = {
                    'keyframes': 'name',
                    'viewport': null,
                    'document': 'regexp(".")'
                };
                self.selectors = [];
                self.atrules = [];
                var style = root.appendChild(document.createElement('style'));
                function supported(selector) {
                    style.textContent = selector + '{}';
                    return !!style.sheet.cssRules.length;
                }
                for (var selector in selectors) {
                    var test = selector + (selectors[selector] ? '(' + selectors[selector] + ')' : '');
                    if (!supported(test) && supported(self.prefixSelector(test))) {
                        self.selectors.push(selector);
                    }
                }
                for (var atrule in atrules) {
                    var test = atrule + ' ' + (atrules[atrule] || '');
                    if (!supported('@' + test) && supported('@' + self.prefix + test)) {
                        self.atrules.push(atrule);
                    }
                }
                root.removeChild(style);
            }
            )();
            self.valueProperties = ['transition', 'transition-property'];
            root.className += ' ' + self.prefix;
            StyleFix.register(self.prefixCSS);
        }
        )(document.documentElement);
        (function() {
            var animationSupport = false
              , animationString = 'animation'
              , vendorPrefix = prefix = ''
              , domPrefixes = ['Webkit', 'Moz', 'O', 'ms', 'Khtml'];
            var $ = sQuery;
            $(document).ready(function() {
                var style = document.body.style;
                if (style.animationName !== undefined) {
                    animationSupport = true;
                }
                if (animationSupport === false) {
                    for (var i = 0; i < domPrefixes.length; i++) {
                        if (style[domPrefixes[i] + 'AnimationName'] !== undefined) {
                            prefix = domPrefixes[i];
                            animationString = prefix + 'Animation';
                            vendorPrefix = '-' + prefix.toLowerCase() + '-';
                            animationSupport = true;
                            break;
                        }
                    }
                }
            });
            var $createKeyframeStyleTag = function(id, css) {
                return $("<style>" + css + "</style>").attr({
                    "class": "keyframe-style",
                    id: id,
                    type: "text/css"
                }).appendTo("head");
            };
            $.keyframe = {
                getVendorPrefix: function() {
                    return vendorPrefix;
                },
                isSupported: function() {
                    return animationSupport;
                },
                generate: function(frameData) {
                    var frameName = frameData.name || "";
                    var css = "@" + vendorPrefix + "keyframes " + frameName + " {";
                    for (var key in frameData) {
                        if (key !== "name" && key !== "media" && key !== "complete") {
                            css += key + " {";
                            for (var property in frameData[key]) {
                                css += property + ":" + frameData[key][property] + ";";
                            }
                            css += "}";
                        }
                    }
                    css = PrefixFree.prefixCSS(css + "}");
                    if (frameData.media) {
                        css = "@media " + frameData.media + "{" + css + "}";
                    }
                    var $frameStyle = $("style#" + frameData.name);
                    if ($frameStyle.length > 0) {
                        $frameStyle.append(css);
                        var $elems = $("*").filter(function() {
                            return this.style[animationString + "Name"] === frameName;
                        });
                        $elems.each(function() {
                            var $el = $(this);
                            var options = $el.data("keyframeOptions");
                            $el.resetKeyframe(function() {
                                $el.playKeyframe(options);
                            });
                        });
                    } else {
                        $createKeyframeStyleTag(frameName, css);
                    }
                },
                define: function(frameData) {
                    if (frameData.length) {
                        for (var i = 0; i < frameData.length; i++) {
                            var frame = frameData[i];
                            this.generate(frame);
                        }
                    } else {
                        this.generate(frameData);
                    }
                }
            };
            var animationPlayState = "animation-play-state";
            var playStateRunning = "running";
            $.fn.resetKeyframe = function(callback) {
                var $el = $(this).css(vendorPrefix + animationPlayState, playStateRunning).css(vendorPrefix + "animation", "none");
                if (callback) {
                    setTimeout(callback, 1);
                }
            }
            ;
            $.fn.pauseKeyframe = function() {
                $(this).css(vendorPrefix + animationPlayState, "paused");
            }
            ;
            $.fn.resumeKeyframe = function() {
                $(this).css(vendorPrefix + animationPlayState, playStateRunning);
            }
            ;
            $.fn.playKeyframe = function(frameOptions, callback) {
                var animObjToStr = function(obj) {
                    obj = $.extend({
                        duration: '0s',
                        timingFunction: "ease",
                        delay: '0s',
                        iterationCount: 1,
                        direction: "normal",
                        fillMode: "forwards"
                    }, obj);
                    return [obj.name, obj.duration, obj.timingFunction, obj.delay, obj.iterationCount, obj.direction, obj.fillMode].join(" ");
                };
                var animationcss = "";
                if ($.isArray(frameOptions)) {
                    var frameOptionsStrings = [];
                    for (var i = 0; i < frameOptions.length; i++) {
                        if (typeof frameOptions[i] === 'string') {
                            frameOptionsStrings.push(frameOptions[i]);
                        } else {
                            frameOptionsStrings.push(animObjToStr(frameOptions[i]));
                        }
                    }
                    animationcss = frameOptionsStrings.join(", ");
                } else if (typeof frameOptions === 'string') {
                    animationcss = frameOptions;
                } else {
                    animationcss = animObjToStr(frameOptions);
                }
                var animationkey = vendorPrefix + "animation";
                var pfx = ["webkit", "moz", "MS", "o", ""];
                if (!callback && frameOptions.complete) {
                    callback = frameOptions.complete;
                }
                var _prefixEvent = function(element, type, callback) {
                    for (var i = 0; i < pfx.length; i++) {
                        if (!pfx[i]) {
                            type = type.toLowerCase();
                        }
                        var evt = pfx[i] + type;
                        element.off(evt).on(evt, callback);
                    }
                };
                this.each(function() {
                    var $el = $(this).addClass("boostKeyframe").css(vendorPrefix + animationPlayState, playStateRunning).css(animationkey, animationcss).data("keyframeOptions", frameOptions);
                    if (callback) {
                        _prefixEvent($el, 'AnimationIteration', callback);
                        _prefixEvent($el, 'AnimationEnd', callback);
                    }
                });
                return this;
            }
            ;
            $createKeyframeStyleTag("boost-keyframe", " .boostKeyframe{" + vendorPrefix + "transform:scale3d(1,1,1);}");
        }
        ).call(this);
        ;(function($) {
            "use strict";
            var version = '0.1.1';
            var options;
            $.effective = {
                load: function(opt, element) {
                    options = opt = $.extend($.extend({}, $.fn.effective.defaults), opt);
                    options.element = element;
                    if (typeof options.dialog.complete == 'undefined') {
                        options.dialog.complete = function() {
                            $.effective.reset();
                        }
                    }
                    $.keyframe.define([options.keyframe]);
                    element.playKeyframe(options.dialog);
                    options.loaded = true;
                    return this;
                },
                reset: function() {
                    options.element.resetKeyframe();
                },
                getOptions: function() {
                    return options;
                }
            };
            $.fn.effective = function(options) {
                if ($.keyframe.isSupported()) {
                    $.effective.load(options, this);
                } else {
                    $.fn.effective.log('browser does not support CSS3 Keyframes!');
                }
                return this;
            }
            ;
            $.fn.effective.log = function log() {
                if (window.console && console.log) {
                    console.log('[effective] ' + Array.prototype.join.call(arguments, ' '));
                }
            }
            ;
            $.fn.effective.defaults = {
                keyframe: {},
                dialog: {},
                loaded: false,
                element: ''
            };
        }
        )(sQuery);
        sQuery.effects || function(e, t) {
            var i = e.uiBackCompat !== !1
              , s = "ui-effects-";
            e.effects = {
                effect: {}
            },
            function(t, i) {
                function s(e, t, i) {
                    var s = c[t.type] || {};
                    return null == e ? i || !t.def ? null : t.def : (e = s.floor ? ~~e : parseFloat(e),
                    isNaN(e) ? t.def : s.mod ? (e + s.mod) % s.mod : 0 > e ? 0 : e > s.max ? s.max : e)
                }
                function n(e) {
                    var s = u()
                      , n = s._rgba = [];
                    return e = e.toLowerCase(),
                    m(l, function(t, a) {
                        var o, r = a.re.exec(e), h = r && a.parse(r), l = a.space || "rgba";
                        return h ? (o = s[l](h),
                        s[d[l].cache] = o[d[l].cache],
                        n = s._rgba = o._rgba,
                        !1) : i
                    }),
                    n.length ? ("0,0,0,0" === n.join() && t.extend(n, o.transparent),
                    s) : o[e]
                }
                function a(e, t, i) {
                    return i = (i + 1) % 1,
                    1 > 6 * i ? e + 6 * (t - e) * i : 1 > 2 * i ? t : 2 > 3 * i ? e + 6 * (t - e) * (2 / 3 - i) : e
                }
                var o, r = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor".split(" "), h = /^([\-+])=\s*(\d+\.?\d*)/, l = [{
                    re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                    parse: function(e) {
                        return [e[1], e[2], e[3], e[4]]
                    }
                }, {
                    re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                    parse: function(e) {
                        return [2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]]
                    }
                }, {
                    re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
                    parse: function(e) {
                        return [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)]
                    }
                }, {
                    re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
                    parse: function(e) {
                        return [parseInt(e[1] + e[1], 16), parseInt(e[2] + e[2], 16), parseInt(e[3] + e[3], 16)]
                    }
                }, {
                    re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)/,
                    space: "hsla",
                    parse: function(e) {
                        return [e[1], e[2] / 100, e[3] / 100, e[4]]
                    }
                }], u = t.Color = function(e, i, s, n) {
                    return new t.Color.fn.parse(e,i,s,n)
                }
                , d = {
                    rgba: {
                        props: {
                            red: {
                                idx: 0,
                                type: "byte"
                            },
                            green: {
                                idx: 1,
                                type: "byte"
                            },
                            blue: {
                                idx: 2,
                                type: "byte"
                            }
                        }
                    },
                    hsla: {
                        props: {
                            hue: {
                                idx: 0,
                                type: "degrees"
                            },
                            saturation: {
                                idx: 1,
                                type: "percent"
                            },
                            lightness: {
                                idx: 2,
                                type: "percent"
                            }
                        }
                    }
                }, c = {
                    "byte": {
                        floor: !0,
                        max: 255
                    },
                    percent: {
                        max: 1
                    },
                    degrees: {
                        mod: 360,
                        floor: !0
                    }
                }, p = u.support = {}, f = t("<p>")[0], m = t.each;
                f.style.cssText = "background-color:rgba(1,1,1,.5)",
                p.rgba = f.style.backgroundColor.indexOf("rgba") > -1,
                m(d, function(e, t) {
                    t.cache = "_" + e,
                    t.props.alpha = {
                        idx: 3,
                        type: "percent",
                        def: 1
                    }
                }),
                u.fn = t.extend(u.prototype, {
                    parse: function(a, r, h, l) {
                        if (a === i)
                            return this._rgba = [null, null, null, null],
                            this;
                        (a.jquery || a.nodeType) && (a = t(a).css(r),
                        r = i);
                        var c = this
                          , p = t.type(a)
                          , f = this._rgba = [];
                        return r !== i && (a = [a, r, h, l],
                        p = "array"),
                        "string" === p ? this.parse(n(a) || o._default) : "array" === p ? (m(d.rgba.props, function(e, t) {
                            f[t.idx] = s(a[t.idx], t)
                        }),
                        this) : "object" === p ? (a instanceof u ? m(d, function(e, t) {
                            a[t.cache] && (c[t.cache] = a[t.cache].slice())
                        }) : m(d, function(t, i) {
                            var n = i.cache;
                            m(i.props, function(e, t) {
                                if (!c[n] && i.to) {
                                    if ("alpha" === e || null == a[e])
                                        return;
                                    c[n] = i.to(c._rgba)
                                }
                                c[n][t.idx] = s(a[e], t, !0)
                            }),
                            c[n] && 0 > e.inArray(null, c[n].slice(0, 3)) && (c[n][3] = 1,
                            i.from && (c._rgba = i.from(c[n])))
                        }),
                        this) : i
                    },
                    is: function(e) {
                        var t = u(e)
                          , s = !0
                          , n = this;
                        return m(d, function(e, a) {
                            var o, r = t[a.cache];
                            return r && (o = n[a.cache] || a.to && a.to(n._rgba) || [],
                            m(a.props, function(e, t) {
                                return null != r[t.idx] ? s = r[t.idx] === o[t.idx] : i
                            })),
                            s
                        }),
                        s
                    },
                    _space: function() {
                        var e = []
                          , t = this;
                        return m(d, function(i, s) {
                            t[s.cache] && e.push(i)
                        }),
                        e.pop()
                    },
                    transition: function(e, t) {
                        var i = u(e)
                          , n = i._space()
                          , a = d[n]
                          , o = 0 === this.alpha() ? u("transparent") : this
                          , r = o[a.cache] || a.to(o._rgba)
                          , h = r.slice();
                        return i = i[a.cache],
                        m(a.props, function(e, n) {
                            var a = n.idx
                              , o = r[a]
                              , l = i[a]
                              , u = c[n.type] || {};
                            null !== l && (null === o ? h[a] = l : (u.mod && (l - o > u.mod / 2 ? o += u.mod : o - l > u.mod / 2 && (o -= u.mod)),
                            h[a] = s((l - o) * t + o, n)))
                        }),
                        this[n](h)
                    },
                    blend: function(e) {
                        if (1 === this._rgba[3])
                            return this;
                        var i = this._rgba.slice()
                          , s = i.pop()
                          , n = u(e)._rgba;
                        return u(t.map(i, function(e, t) {
                            return (1 - s) * n[t] + s * e
                        }))
                    },
                    toRgbaString: function() {
                        var e = "rgba("
                          , i = t.map(this._rgba, function(e, t) {
                            return null == e ? t > 2 ? 1 : 0 : e
                        });
                        return 1 === i[3] && (i.pop(),
                        e = "rgb("),
                        e + i.join() + ")"
                    },
                    toHslaString: function() {
                        var e = "hsla("
                          , i = t.map(this.hsla(), function(e, t) {
                            return null == e && (e = t > 2 ? 1 : 0),
                            t && 3 > t && (e = Math.round(100 * e) + "%"),
                            e
                        });
                        return 1 === i[3] && (i.pop(),
                        e = "hsl("),
                        e + i.join() + ")"
                    },
                    toHexString: function(e) {
                        var i = this._rgba.slice()
                          , s = i.pop();
                        return e && i.push(~~(255 * s)),
                        "#" + t.map(i, function(e) {
                            return e = (e || 0).toString(16),
                            1 === e.length ? "0" + e : e
                        }).join("")
                    },
                    toString: function() {
                        return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
                    }
                }),
                u.fn.parse.prototype = u.fn,
                d.hsla.to = function(e) {
                    if (null == e[0] || null == e[1] || null == e[2])
                        return [null, null, null, e[3]];
                    var t, i, s = e[0] / 255, n = e[1] / 255, a = e[2] / 255, o = e[3], r = Math.max(s, n, a), h = Math.min(s, n, a), l = r - h, u = r + h, d = .5 * u;
                    return t = h === r ? 0 : s === r ? 60 * (n - a) / l + 360 : n === r ? 60 * (a - s) / l + 120 : 60 * (s - n) / l + 240,
                    i = 0 === d || 1 === d ? d : .5 >= d ? l / u : l / (2 - u),
                    [Math.round(t) % 360, i, d, null == o ? 1 : o]
                }
                ,
                d.hsla.from = function(e) {
                    if (null == e[0] || null == e[1] || null == e[2])
                        return [null, null, null, e[3]];
                    var t = e[0] / 360
                      , i = e[1]
                      , s = e[2]
                      , n = e[3]
                      , o = .5 >= s ? s * (1 + i) : s + i - s * i
                      , r = 2 * s - o;
                    return [Math.round(255 * a(r, o, t + 1 / 3)), Math.round(255 * a(r, o, t)), Math.round(255 * a(r, o, t - 1 / 3)), n]
                }
                ,
                m(d, function(e, n) {
                    var a = n.props
                      , o = n.cache
                      , r = n.to
                      , l = n.from;
                    u.fn[e] = function(e) {
                        if (r && !this[o] && (this[o] = r(this._rgba)),
                        e === i)
                            return this[o].slice();
                        var n, h = t.type(e), d = "array" === h || "object" === h ? e : arguments, c = this[o].slice();
                        return m(a, function(e, t) {
                            var i = d["object" === h ? e : t.idx];
                            null == i && (i = c[t.idx]),
                            c[t.idx] = s(i, t)
                        }),
                        l ? (n = u(l(c)),
                        n[o] = c,
                        n) : u(c)
                    }
                    ,
                    m(a, function(i, s) {
                        u.fn[i] || (u.fn[i] = function(n) {
                            var a, o = t.type(n), r = "alpha" === i ? this._hsla ? "hsla" : "rgba" : e, l = this[r](), u = l[s.idx];
                            return "undefined" === o ? u : ("function" === o && (n = n.call(this, u),
                            o = t.type(n)),
                            null == n && s.empty ? this : ("string" === o && (a = h.exec(n),
                            a && (n = u + parseFloat(a[2]) * ("+" === a[1] ? 1 : -1))),
                            l[s.idx] = n,
                            this[r](l)))
                        }
                        )
                    })
                }),
                m(r, function(e, i) {
                    t.cssHooks[i] = {
                        set: function(e, s) {
                            var a, o, r = "";
                            if ("string" !== t.type(s) || (a = n(s))) {
                                if (s = u(a || s),
                                !p.rgba && 1 !== s._rgba[3]) {
                                    for (o = "backgroundColor" === i ? e.parentNode : e; ("" === r || "transparent" === r) && o && o.style; )
                                        try {
                                            r = t.css(o, "backgroundColor"),
                                            o = o.parentNode
                                        } catch (h) {}
                                    s = s.blend(r && "transparent" !== r ? r : "_default")
                                }
                                s = s.toRgbaString()
                            }
                            try {
                                e.style[i] = s
                            } catch (l) {}
                        }
                    },
                    t.fx.step[i] = function(e) {
                        e.colorInit || (e.start = u(e.elem, i),
                        e.end = u(e.end),
                        e.colorInit = !0),
                        t.cssHooks[i].set(e.elem, e.start.transition(e.end, e.pos))
                    }
                }),
                t.cssHooks.borderColor = {
                    expand: function(e) {
                        var t = {};
                        return m(["Top", "Right", "Bottom", "Left"], function(i, s) {
                            t["border" + s + "Color"] = e
                        }),
                        t
                    }
                },
                o = t.Color.names = {
                    aqua: "#00ffff",
                    black: "#000000",
                    blue: "#0000ff",
                    fuchsia: "#ff00ff",
                    gray: "#808080",
                    green: "#008000",
                    lime: "#00ff00",
                    maroon: "#800000",
                    navy: "#000080",
                    olive: "#808000",
                    purple: "#800080",
                    red: "#ff0000",
                    silver: "#c0c0c0",
                    teal: "#008080",
                    white: "#ffffff",
                    yellow: "#ffff00",
                    transparent: [null, null, null, 0],
                    _default: "#ffffff"
                }
            }(sQuery),
            function() {
                function i() {
                    var t, i, s = this.ownerDocument.defaultView ? this.ownerDocument.defaultView.getComputedStyle(this, null) : this.currentStyle, n = {};
                    if (s && s.length && s[0] && s[s[0]])
                        for (i = s.length; i--; )
                            t = s[i],
                            "string" == typeof s[t] && (n[e.camelCase(t)] = s[t]);
                    else
                        for (t in s)
                            "string" == typeof s[t] && (n[t] = s[t]);
                    return n
                }
                function s(t, i) {
                    var s, n, o = {};
                    for (s in i)
                        n = i[s],
                        t[s] !== n && (a[s] || (e.fx.step[s] || !isNaN(parseFloat(n))) && (o[s] = n));
                    return o
                }
                var n = ["add", "remove", "toggle"]
                  , a = {
                    border: 1,
                    borderBottom: 1,
                    borderColor: 1,
                    borderLeft: 1,
                    borderRight: 1,
                    borderTop: 1,
                    borderWidth: 1,
                    margin: 1,
                    padding: 1
                };
                e.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(t, i) {
                    e.fx.step[i] = function(e) {
                        ("none" !== e.end && !e.setAttr || 1 === e.pos && !e.setAttr) && (sQuery.style(e.elem, i, e.end),
                        e.setAttr = !0)
                    }
                }),
                e.effects.animateClass = function(t, a, o, r) {
                    var h = e.speed(a, o, r);
                    return this.queue(function() {
                        var a, o = e(this), r = o.attr("class") || "", l = h.children ? o.find("*").andSelf() : o;
                        l = l.map(function() {
                            var t = e(this);
                            return {
                                el: t,
                                start: i.call(this)
                            }
                        }),
                        a = function() {
                            e.each(n, function(e, i) {
                                t[i] && o[i + "Class"](t[i])
                            })
                        }
                        ,
                        a(),
                        l = l.map(function() {
                            return this.end = i.call(this.el[0]),
                            this.diff = s(this.start, this.end),
                            this
                        }),
                        o.attr("class", r),
                        l = l.map(function() {
                            var t = this
                              , i = e.Deferred()
                              , s = sQuery.extend({}, h, {
                                queue: !1,
                                complete: function() {
                                    i.resolve(t)
                                }
                            });
                            return this.el.animate(this.diff, s),
                            i.promise()
                        }),
                        e.when.apply(e, l.get()).done(function() {
                            a(),
                            e.each(arguments, function() {
                                var t = this.el;
                                e.each(this.diff, function(e) {
                                    t.css(e, "")
                                })
                            }),
                            h.complete.call(o[0])
                        })
                    })
                }
                ,
                e.fn.extend({
                    _addClass: e.fn.addClass,
                    addClass: function(t, i, s, n) {
                        return i ? e.effects.animateClass.call(this, {
                            add: t
                        }, i, s, n) : this._addClass(t)
                    },
                    _removeClass: e.fn.removeClass,
                    removeClass: function(t, i, s, n) {
                        return i ? e.effects.animateClass.call(this, {
                            remove: t
                        }, i, s, n) : this._removeClass(t)
                    },
                    _toggleClass: e.fn.toggleClass,
                    toggleClass: function(i, s, n, a, o) {
                        return "boolean" == typeof s || s === t ? n ? e.effects.animateClass.call(this, s ? {
                            add: i
                        } : {
                            remove: i
                        }, n, a, o) : this._toggleClass(i, s) : e.effects.animateClass.call(this, {
                            toggle: i
                        }, s, n, a)
                    },
                    switchClass: function(t, i, s, n, a) {
                        return e.effects.animateClass.call(this, {
                            add: i,
                            remove: t
                        }, s, n, a)
                    }
                })
            }(),
            function() {
                function n(t, i, s, n) {
                    return e.isPlainObject(t) && (i = t,
                    t = t.effect),
                    t = {
                        effect: t
                    },
                    null == i && (i = {}),
                    e.isFunction(i) && (n = i,
                    s = null,
                    i = {}),
                    ("number" == typeof i || e.fx.speeds[i]) && (n = s,
                    s = i,
                    i = {}),
                    e.isFunction(s) && (n = s,
                    s = null),
                    i && e.extend(t, i),
                    s = s || i.duration,
                    t.duration = e.fx.off ? 0 : "number" == typeof s ? s : s in e.fx.speeds ? e.fx.speeds[s] : e.fx.speeds._default,
                    t.complete = n || i.complete,
                    t
                }
                function a(t) {
                    return !t || "number" == typeof t || e.fx.speeds[t] ? !0 : "string" != typeof t || e.effects.effect[t] ? !1 : i && e.effects[t] ? !1 : !0
                }
                e.extend(e.effects, {
                    version: "1.9.2",
                    save: function(e, t) {
                        for (var i = 0; t.length > i; i++)
                            null !== t[i] && e.data(s + t[i], e[0].style[t[i]])
                    },
                    restore: function(e, i) {
                        var n, a;
                        for (a = 0; i.length > a; a++)
                            null !== i[a] && (n = e.data(s + i[a]),
                            n === t && (n = ""),
                            e.css(i[a], n))
                    },
                    setMode: function(e, t) {
                        return "toggle" === t && (t = e.is(":hidden") ? "show" : "hide"),
                        t
                    },
                    getBaseline: function(e, t) {
                        var i, s;
                        switch (e[0]) {
                        case "top":
                            i = 0;
                            break;
                        case "middle":
                            i = .5;
                            break;
                        case "bottom":
                            i = 1;
                            break;
                        default:
                            i = e[0] / t.height
                        }
                        switch (e[1]) {
                        case "left":
                            s = 0;
                            break;
                        case "center":
                            s = .5;
                            break;
                        case "right":
                            s = 1;
                            break;
                        default:
                            s = e[1] / t.width
                        }
                        return {
                            x: s,
                            y: i
                        }
                    },
                    createWrapper: function(t) {
                        if (t.parent().is(".ui-effects-wrapper"))
                            return t.parent();
                        var i = {
                            width: t.outerWidth(!0),
                            height: t.outerHeight(!0),
                            "float": t.css("float")
                        }
                          , s = e("<div></div>").addClass("ui-effects-wrapper").css({
                            fontSize: "100%",
                            background: "transparent",
                            border: "none",
                            margin: 0,
                            padding: 0
                        })
                          , n = {
                            width: t.width(),
                            height: t.height()
                        }
                          , a = document.activeElement;
                        try {
                            a.id
                        } catch (o) {
                            a = document.body
                        }
                        return t.wrap(s),
                        (t[0] === a || e.contains(t[0], a)) && e(a).focus(),
                        s = t.parent(),
                        "static" === t.css("position") ? (s.css({
                            position: "relative"
                        }),
                        t.css({
                            position: "relative"
                        })) : (e.extend(i, {
                            position: t.css("position"),
                            zIndex: t.css("z-index")
                        }),
                        e.each(["top", "left", "bottom", "right"], function(e, s) {
                            i[s] = t.css(s),
                            isNaN(parseInt(i[s], 10)) && (i[s] = "auto")
                        }),
                        t.css({
                            position: "relative",
                            top: 0,
                            left: 0,
                            right: "auto",
                            bottom: "auto"
                        })),
                        t.css(n),
                        s.css(i).show()
                    },
                    removeWrapper: function(t) {
                        var i = document.activeElement;
                        return t.parent().is(".ui-effects-wrapper") && (t.parent().replaceWith(t),
                        (t[0] === i || e.contains(t[0], i)) && e(i).focus()),
                        t
                    },
                    setTransition: function(t, i, s, n) {
                        return n = n || {},
                        e.each(i, function(e, i) {
                            var a = t.cssUnit(i);
                            a[0] > 0 && (n[i] = a[0] * s + a[1])
                        }),
                        n
                    }
                }),
                e.fn.extend({
                    effect: function() {
                        function t(t) {
                            function i() {
                                e.isFunction(a) && a.call(n[0]),
                                e.isFunction(t) && t()
                            }
                            var n = e(this)
                              , a = s.complete
                              , o = s.mode;
                            (n.is(":hidden") ? "hide" === o : "show" === o) ? i() : r.call(n[0], s, i)
                        }
                        var s = n.apply(this, arguments)
                          , a = s.mode
                          , o = s.queue
                          , r = e.effects.effect[s.effect]
                          , h = !r && i && e.effects[s.effect];
                        return e.fx.off || !r && !h ? a ? this[a](s.duration, s.complete) : this.each(function() {
                            s.complete && s.complete.call(this)
                        }) : r ? o === !1 ? this.each(t) : this.queue(o || "fx", t) : h.call(this, {
                            options: s,
                            duration: s.duration,
                            callback: s.complete,
                            mode: s.mode
                        })
                    },
                    _show: e.fn.show,
                    show: function(e) {
                        if (a(e))
                            return this._show.apply(this, arguments);
                        var t = n.apply(this, arguments);
                        return t.mode = "show",
                        this.effect.call(this, t)
                    },
                    _hide: e.fn.hide,
                    hide: function(e) {
                        if (a(e))
                            return this._hide.apply(this, arguments);
                        var t = n.apply(this, arguments);
                        return t.mode = "hide",
                        this.effect.call(this, t)
                    },
                    __toggle: e.fn.toggle,
                    toggle: function(t) {
                        if (a(t) || "boolean" == typeof t || e.isFunction(t))
                            return this.__toggle.apply(this, arguments);
                        var i = n.apply(this, arguments);
                        return i.mode = "toggle",
                        this.effect.call(this, i)
                    },
                    cssUnit: function(t) {
                        var i = this.css(t)
                          , s = [];
                        return e.each(["em", "px", "%", "pt"], function(e, t) {
                            i.indexOf(t) > 0 && (s = [parseFloat(i), t])
                        }),
                        s
                    }
                })
            }(),
            function() {
                var t = {};
                e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(e, i) {
                    t[i] = function(t) {
                        return Math.pow(t, e + 2)
                    }
                }),
                e.extend(t, {
                    Sine: function(e) {
                        return 1 - Math.cos(e * Math.PI / 2)
                    },
                    Circ: function(e) {
                        return 1 - Math.sqrt(1 - e * e)
                    },
                    Elastic: function(e) {
                        return 0 === e || 1 === e ? e : -Math.pow(2, 8 * (e - 1)) * Math.sin((80 * (e - 1) - 7.5) * Math.PI / 15)
                    },
                    Back: function(e) {
                        return e * e * (3 * e - 2)
                    },
                    Bounce: function(e) {
                        for (var t, i = 4; ((t = Math.pow(2, --i)) - 1) / 11 > e; )
                            ;
                        return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * t - 2) / 22 - e, 2)
                    }
                }),
                e.each(t, function(t, i) {
                    e.easing["easeIn" + t] = i,
                    e.easing["easeOut" + t] = function(e) {
                        return 1 - i(1 - e)
                    }
                    ,
                    e.easing["easeInOut" + t] = function(e) {
                        return .5 > e ? i(2 * e) / 2 : 1 - i(-2 * e + 2) / 2
                    }
                })
            }()
        }(sQuery);
        (function(e) {
            var t = /up|down|vertical/
              , i = /up|left|vertical|horizontal/;
            e.effects.effect.blind = function(s, n) {
                var a, o, r, l = e(this), h = ["position", "top", "bottom", "left", "right", "height", "width"], u = e.effects.setMode(l, s.mode || "hide"), d = s.direction || "up", c = t.test(d), p = c ? "height" : "width", f = c ? "top" : "left", m = i.test(d), g = {}, v = "show" === u;
                l.parent().is(".ui-effects-wrapper") ? e.effects.save(l.parent(), h) : e.effects.save(l, h),
                l.show(),
                a = e.effects.createWrapper(l).css({
                    overflow: "hidden"
                }),
                o = a[p](),
                r = parseFloat(a.css(f)) || 0,
                g[p] = v ? o : 0,
                m || (l.css(c ? "bottom" : "right", 0).css(c ? "top" : "left", "auto").css({
                    position: "absolute"
                }),
                g[f] = v ? r : o + r),
                v && (a.css(p, 0),
                m || a.css(f, r + o)),
                a.animate(g, {
                    duration: s.duration,
                    easing: s.easing,
                    queue: !1,
                    complete: function() {
                        "hide" === u && l.hide(),
                        e.effects.restore(l, h),
                        e.effects.removeWrapper(l),
                        n()
                    }
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.bounce = function(t, i) {
                var s, n, a, o = e(this), r = ["position", "top", "bottom", "left", "right", "height", "width"], l = e.effects.setMode(o, t.mode || "effect"), h = "hide" === l, u = "show" === l, d = t.direction || "up", c = t.distance, p = t.times || 5, f = 2 * p + (u || h ? 1 : 0), m = t.duration / f, g = t.easing, v = "up" === d || "down" === d ? "top" : "left", y = "up" === d || "left" === d, b = o.queue(), _ = b.length;
                for ((u || h) && r.push("opacity"),
                e.effects.save(o, r),
                o.show(),
                e.effects.createWrapper(o),
                c || (c = o["top" === v ? "outerHeight" : "outerWidth"]() / 3),
                u && (a = {
                    opacity: 1
                },
                a[v] = 0,
                o.css("opacity", 0).css(v, y ? 2 * -c : 2 * c).animate(a, m, g)),
                h && (c /= Math.pow(2, p - 1)),
                a = {},
                a[v] = 0,
                s = 0; p > s; s++)
                    n = {},
                    n[v] = (y ? "-=" : "+=") + c,
                    o.animate(n, m, g).animate(a, m, g),
                    c = h ? 2 * c : c / 2;
                h && (n = {
                    opacity: 0
                },
                n[v] = (y ? "-=" : "+=") + c,
                o.animate(n, m, g)),
                o.queue(function() {
                    h && o.hide(),
                    e.effects.restore(o, r),
                    e.effects.removeWrapper(o),
                    i()
                }),
                _ > 1 && b.splice.apply(b, [1, 0].concat(b.splice(_, f + 1))),
                o.dequeue()
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.clip = function(t, i) {
                var s, n, a, o = e(this), r = ["position", "top", "bottom", "left", "right", "height", "width"], l = e.effects.setMode(o, t.mode || "hide"), h = "show" === l, u = t.direction || "vertical", d = "vertical" === u, c = d ? "height" : "width", p = d ? "top" : "left", f = {};
                e.effects.save(o, r),
                o.show(),
                s = e.effects.createWrapper(o).css({
                    overflow: "hidden"
                }),
                n = "IMG" === o[0].tagName ? s : o,
                a = n[c](),
                h && (n.css(c, 0),
                n.css(p, a / 2)),
                f[c] = h ? a : 0,
                f[p] = h ? 0 : a / 2,
                n.animate(f, {
                    queue: !1,
                    duration: t.duration,
                    easing: t.easing,
                    complete: function() {
                        h || o.hide(),
                        e.effects.restore(o, r),
                        e.effects.removeWrapper(o),
                        i()
                    }
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.drop = function(t, i) {
                var s, n = e(this), a = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"], o = e.effects.setMode(n, t.mode || "hide"), r = "show" === o, l = t.direction || "left", h = "up" === l || "down" === l ? "top" : "left", u = "up" === l || "left" === l ? "pos" : "neg", d = {
                    opacity: r ? 1 : 0
                };
                e.effects.save(n, a),
                n.show(),
                e.effects.createWrapper(n),
                s = t.distance || n["top" === h ? "outerHeight" : "outerWidth"](!0) / 2,
                r && n.css("opacity", 0).css(h, "pos" === u ? -s : s),
                d[h] = (r ? "pos" === u ? "+=" : "-=" : "pos" === u ? "-=" : "+=") + s,
                n.animate(d, {
                    queue: !1,
                    duration: t.duration,
                    easing: t.easing,
                    complete: function() {
                        "hide" === o && n.hide(),
                        e.effects.restore(n, a),
                        e.effects.removeWrapper(n),
                        i()
                    }
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.explode = function(t, i) {
                function s() {
                    b.push(this),
                    b.length === d * c && n()
                }
                function n() {
                    p.css({
                        visibility: "visible"
                    }),
                    e(b).remove(),
                    m || p.hide(),
                    i()
                }
                var a, o, r, l, h, u, d = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3, c = d, p = e(this), f = e.effects.setMode(p, t.mode || "hide"), m = "show" === f, g = p.show().css("visibility", "hidden").offset(), v = Math.ceil(p.outerWidth() / c), y = Math.ceil(p.outerHeight() / d), b = [];
                for (a = 0; d > a; a++)
                    for (l = g.top + a * y,
                    u = a - (d - 1) / 2,
                    o = 0; c > o; o++)
                        r = g.left + o * v,
                        h = o - (c - 1) / 2,
                        p.clone().appendTo("body").wrap("<div></div>").css({
                            position: "absolute",
                            visibility: "visible",
                            left: -o * v,
                            top: -a * y
                        }).parent().addClass("ui-effects-explode").css({
                            position: "absolute",
                            overflow: "hidden",
                            width: v,
                            height: y,
                            left: r + (m ? h * v : 0),
                            top: l + (m ? u * y : 0),
                            opacity: m ? 0 : 1
                        }).animate({
                            left: r + (m ? 0 : h * v),
                            top: l + (m ? 0 : u * y),
                            opacity: m ? 1 : 0
                        }, t.duration || 500, t.easing, s)
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.fade = function(t, i) {
                var s = e(this)
                  , n = e.effects.setMode(s, t.mode || "toggle");
                s.animate({
                    opacity: n
                }, {
                    queue: !1,
                    duration: t.duration,
                    easing: t.easing,
                    complete: i
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.fold = function(t, i) {
                var s, n, a = e(this), o = ["position", "top", "bottom", "left", "right", "height", "width"], r = e.effects.setMode(a, t.mode || "hide"), l = "show" === r, h = "hide" === r, u = t.size || 15, d = /([0-9]+)%/.exec(u), c = !!t.horizFirst, p = l !== c, f = p ? ["width", "height"] : ["height", "width"], m = t.duration / 2, g = {}, v = {};
                e.effects.save(a, o),
                a.show(),
                s = e.effects.createWrapper(a).css({
                    overflow: "hidden"
                }),
                n = p ? [s.width(), s.height()] : [s.height(), s.width()],
                d && (u = parseInt(d[1], 10) / 100 * n[h ? 0 : 1]),
                l && s.css(c ? {
                    height: 0,
                    width: u
                } : {
                    height: u,
                    width: 0
                }),
                g[f[0]] = l ? n[0] : u,
                v[f[1]] = l ? n[1] : 0,
                s.animate(g, m, t.easing).animate(v, m, t.easing, function() {
                    h && a.hide(),
                    e.effects.restore(a, o),
                    e.effects.removeWrapper(a),
                    i()
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.highlight = function(t, i) {
                var s = e(this)
                  , n = ["backgroundImage", "backgroundColor", "opacity"]
                  , a = e.effects.setMode(s, t.mode || "show")
                  , o = {
                    backgroundColor: s.css("backgroundColor")
                };
                "hide" === a && (o.opacity = 0),
                e.effects.save(s, n),
                s.show().css({
                    backgroundImage: "none",
                    backgroundColor: t.color || "#ffff99"
                }).animate(o, {
                    queue: !1,
                    duration: t.duration,
                    easing: t.easing,
                    complete: function() {
                        "hide" === a && s.hide(),
                        e.effects.restore(s, n),
                        i()
                    }
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.pulsate = function(t, i) {
                var s, n = e(this), a = e.effects.setMode(n, t.mode || "show"), o = "show" === a, r = "hide" === a, l = o || "hide" === a, h = 2 * (t.times || 5) + (l ? 1 : 0), u = t.duration / h, d = 0, c = n.queue(), p = c.length;
                for ((o || !n.is(":visible")) && (n.css("opacity", 0).show(),
                d = 1),
                s = 1; h > s; s++)
                    n.animate({
                        opacity: d
                    }, u, t.easing),
                    d = 1 - d;
                n.animate({
                    opacity: d
                }, u, t.easing),
                n.queue(function() {
                    r && n.hide(),
                    i()
                }),
                p > 1 && c.splice.apply(c, [1, 0].concat(c.splice(p, h + 1))),
                n.dequeue()
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.puff = function(t, i) {
                var s = e(this)
                  , n = e.effects.setMode(s, t.mode || "hide")
                  , a = "hide" === n
                  , o = parseInt(t.percent, 10) || 150
                  , r = o / 100
                  , h = {
                    height: s.height(),
                    width: s.width(),
                    outerHeight: s.outerHeight(),
                    outerWidth: s.outerWidth()
                };
                e.extend(t, {
                    effect: "scale",
                    queue: !1,
                    fade: !0,
                    mode: n,
                    complete: i,
                    percent: a ? o : 100,
                    from: a ? h : {
                        height: h.height * r,
                        width: h.width * r,
                        outerHeight: h.outerHeight * r,
                        outerWidth: h.outerWidth * r
                    }
                }),
                s.effect(t)
            }
            ,
            e.effects.effect.scale = function(t, i) {
                var s = e(this)
                  , n = e.extend(!0, {}, t)
                  , a = e.effects.setMode(s, t.mode || "effect")
                  , o = parseInt(t.percent, 10) || (0 === parseInt(t.percent, 10) ? 0 : "hide" === a ? 0 : 100)
                  , r = t.direction || "both"
                  , h = t.origin
                  , l = {
                    height: s.height(),
                    width: s.width(),
                    outerHeight: s.outerHeight(),
                    outerWidth: s.outerWidth()
                }
                  , u = {
                    y: "horizontal" !== r ? o / 100 : 1,
                    x: "vertical" !== r ? o / 100 : 1
                };
                n.effect = "size",
                n.queue = !1,
                n.complete = i,
                "effect" !== a && (n.origin = h || ["middle", "center"],
                n.restore = !0),
                n.from = t.from || ("show" === a ? {
                    height: 0,
                    width: 0,
                    outerHeight: 0,
                    outerWidth: 0
                } : l),
                n.to = {
                    height: l.height * u.y,
                    width: l.width * u.x,
                    outerHeight: l.outerHeight * u.y,
                    outerWidth: l.outerWidth * u.x
                },
                n.fade && ("show" === a && (n.from.opacity = 0,
                n.to.opacity = 1),
                "hide" === a && (n.from.opacity = 1,
                n.to.opacity = 0)),
                s.effect(n)
            }
            ,
            e.effects.effect.size = function(t, i) {
                var s, n, a, o = e(this), r = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"], h = ["position", "top", "bottom", "left", "right", "overflow", "opacity"], l = ["width", "height", "overflow"], u = ["fontSize"], d = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], c = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], p = e.effects.setMode(o, t.mode || "effect"), f = t.restore || "effect" !== p, m = t.scale || "both", g = t.origin || ["middle", "center"], v = o.css("position"), y = f ? r : h, b = {
                    height: 0,
                    width: 0,
                    outerHeight: 0,
                    outerWidth: 0
                };
                "show" === p && o.show(),
                s = {
                    height: o.height(),
                    width: o.width(),
                    outerHeight: o.outerHeight(),
                    outerWidth: o.outerWidth()
                },
                "toggle" === t.mode && "show" === p ? (o.from = t.to || b,
                o.to = t.from || s) : (o.from = t.from || ("show" === p ? b : s),
                o.to = t.to || ("hide" === p ? b : s)),
                a = {
                    from: {
                        y: o.from.height / s.height,
                        x: o.from.width / s.width
                    },
                    to: {
                        y: o.to.height / s.height,
                        x: o.to.width / s.width
                    }
                },
                ("box" === m || "both" === m) && (a.from.y !== a.to.y && (y = y.concat(d),
                o.from = e.effects.setTransition(o, d, a.from.y, o.from),
                o.to = e.effects.setTransition(o, d, a.to.y, o.to)),
                a.from.x !== a.to.x && (y = y.concat(c),
                o.from = e.effects.setTransition(o, c, a.from.x, o.from),
                o.to = e.effects.setTransition(o, c, a.to.x, o.to))),
                ("content" === m || "both" === m) && a.from.y !== a.to.y && (y = y.concat(u).concat(l),
                o.from = e.effects.setTransition(o, u, a.from.y, o.from),
                o.to = e.effects.setTransition(o, u, a.to.y, o.to)),
                e.effects.save(o, y),
                o.show(),
                e.effects.createWrapper(o),
                o.css("overflow", "hidden").css(o.from),
                g && (n = e.effects.getBaseline(g, s),
                o.from.top = (s.outerHeight - o.outerHeight()) * n.y,
                o.from.left = (s.outerWidth - o.outerWidth()) * n.x,
                o.to.top = (s.outerHeight - o.to.outerHeight) * n.y,
                o.to.left = (s.outerWidth - o.to.outerWidth) * n.x),
                o.css(o.from),
                ("content" === m || "both" === m) && (d = d.concat(["marginTop", "marginBottom"]).concat(u),
                c = c.concat(["marginLeft", "marginRight"]),
                l = r.concat(d).concat(c),
                o.find("*[width]").each(function() {
                    var i = e(this)
                      , s = {
                        height: i.height(),
                        width: i.width(),
                        outerHeight: i.outerHeight(),
                        outerWidth: i.outerWidth()
                    };
                    f && e.effects.save(i, l),
                    i.from = {
                        height: s.height * a.from.y,
                        width: s.width * a.from.x,
                        outerHeight: s.outerHeight * a.from.y,
                        outerWidth: s.outerWidth * a.from.x
                    },
                    i.to = {
                        height: s.height * a.to.y,
                        width: s.width * a.to.x,
                        outerHeight: s.height * a.to.y,
                        outerWidth: s.width * a.to.x
                    },
                    a.from.y !== a.to.y && (i.from = e.effects.setTransition(i, d, a.from.y, i.from),
                    i.to = e.effects.setTransition(i, d, a.to.y, i.to)),
                    a.from.x !== a.to.x && (i.from = e.effects.setTransition(i, c, a.from.x, i.from),
                    i.to = e.effects.setTransition(i, c, a.to.x, i.to)),
                    i.css(i.from),
                    i.animate(i.to, t.duration, t.easing, function() {
                        f && e.effects.restore(i, l)
                    })
                })),
                o.animate(o.to, {
                    queue: !1,
                    duration: t.duration,
                    easing: t.easing,
                    complete: function() {
                        0 === o.to.opacity && o.css("opacity", o.from.opacity),
                        "hide" === p && o.hide(),
                        e.effects.restore(o, y),
                        f || ("static" === v ? o.css({
                            position: "relative",
                            top: o.to.top,
                            left: o.to.left
                        }) : e.each(["top", "left"], function(e, t) {
                            o.css(t, function(t, i) {
                                var s = parseInt(i, 10)
                                  , n = e ? o.to.left : o.to.top;
                                return "auto" === i ? n + "px" : s + n + "px"
                            })
                        })),
                        e.effects.removeWrapper(o),
                        i()
                    }
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.shake = function(t, i) {
                var s, n = e(this), a = ["position", "top", "bottom", "left", "right", "height", "width"], o = e.effects.setMode(n, t.mode || "effect"), r = t.direction || "left", h = t.distance || 20, l = t.times || 3, u = 2 * l + 1, d = Math.round(t.duration / u), c = "up" === r || "down" === r ? "top" : "left", p = "up" === r || "left" === r, f = {}, m = {}, g = {}, v = n.queue(), y = v.length;
                for (e.effects.save(n, a),
                n.show(),
                e.effects.createWrapper(n),
                f[c] = (p ? "-=" : "+=") + h,
                m[c] = (p ? "+=" : "-=") + 2 * h,
                g[c] = (p ? "-=" : "+=") + 2 * h,
                n.animate(f, d, t.easing),
                s = 1; l > s; s++)
                    n.animate(m, d, t.easing).animate(g, d, t.easing);
                n.animate(m, d, t.easing).animate(f, d / 2, t.easing).queue(function() {
                    "hide" === o && n.hide(),
                    e.effects.restore(n, a),
                    e.effects.removeWrapper(n),
                    i()
                }),
                y > 1 && v.splice.apply(v, [1, 0].concat(v.splice(y, u + 1))),
                n.dequeue()
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.slide = function(t, i) {
                var s, n = e(this), a = ["position", "top", "bottom", "left", "right", "width", "height"], o = e.effects.setMode(n, t.mode || "show"), r = "show" === o, h = t.direction || "left", l = "up" === h || "down" === h ? "top" : "left", u = "up" === h || "left" === h, d = {};
                e.effects.save(n, a),
                n.show(),
                s = t.distance || n["top" === l ? "outerHeight" : "outerWidth"](!0),
                e.effects.createWrapper(n).css({
                    overflow: "hidden"
                }),
                r && n.css(l, u ? isNaN(s) ? "-" + s : -s : s),
                d[l] = (r ? u ? "+=" : "-=" : u ? "-=" : "+=") + s,
                n.animate(d, {
                    queue: !1,
                    duration: t.duration,
                    easing: t.easing,
                    complete: function() {
                        "hide" === o && n.hide(),
                        e.effects.restore(n, a),
                        e.effects.removeWrapper(n),
                        i()
                    }
                })
            }
        }
        )(sQuery);
        (function(e) {
            e.effects.effect.transfer = function(t, i) {
                var s = e(this)
                  , n = e(t.to)
                  , a = "fixed" === n.css("position")
                  , o = e("body")
                  , r = a ? o.scrollTop() : 0
                  , h = a ? o.scrollLeft() : 0
                  , l = n.offset()
                  , u = {
                    top: l.top - r,
                    left: l.left - h,
                    height: n.innerHeight(),
                    width: n.innerWidth()
                }
                  , d = s.offset()
                  , c = e('<div class="ui-effects-transfer"></div>').appendTo(document.body).addClass(t.className).css({
                    top: d.top - r,
                    left: d.left - h,
                    height: s.innerHeight(),
                    width: s.innerWidth(),
                    position: a ? "fixed" : "absolute"
                }).animate(u, t.duration, t.easing, function() {
                    c.remove(),
                    i()
                })
            }
        }
        )(sQuery);
        (function() {
            var j = false;
            window.JQClass = function() {}
            ;
            JQClass.classes = {};
            JQClass.extend = function extender(f) {
                var g = this.prototype;
                j = true;
                var h = new this();
                j = false;
                for (var i in f) {
                    h[i] = typeof f[i] == 'function' && typeof g[i] == 'function' ? (function(d, e) {
                        return function() {
                            var b = this._super;
                            this._super = function(a) {
                                return g[d].apply(this, a || [])
                            }
                            ;
                            var c = e.apply(this, arguments);
                            this._super = b;
                            return c
                        }
                    }
                    )(i, f[i]) : f[i]
                }
                function JQClass() {
                    if (!j && this._init) {
                        this._init.apply(this, arguments)
                    }
                }
                JQClass.prototype = h;
                JQClass.prototype.constructor = JQClass;
                JQClass.extend = extender;
                return JQClass
            }
        }
        )();
        (function($) {
            JQClass.classes.JQPlugin = JQClass.extend({
                name: 'plugin',
                defaultOptions: {},
                regionalOptions: {},
                _getters: [],
                _getMarker: function() {
                    return 'is-' + this.name
                },
                _init: function() {
                    $.extend(this.defaultOptions, (this.regionalOptions && this.regionalOptions['']) || {});
                    var c = camelCase(this.name);
                    $[c] = this;
                    $.fn[c] = function(a) {
                        var b = Array.prototype.slice.call(arguments, 1);
                        if ($[c]._isNotChained(a, b)) {
                            return $[c][a].apply($[c], [this[0]].concat(b))
                        }
                        return this.each(function() {
                            if (typeof a === 'string') {
                                if (a[0] === '_' || !$[c][a]) {
                                    throw 'Unknown method: ' + a;
                                }
                                $[c][a].apply($[c], [this].concat(b))
                            } else {
                                $[c]._attach(this, a)
                            }
                        })
                    }
                },
                setDefaults: function(a) {
                    $.extend(this.defaultOptions, a || {})
                },
                _isNotChained: function(a, b) {
                    if (a === 'option' && (b.length === 0 || (b.length === 1 && typeof b[0] === 'string'))) {
                        return true
                    }
                    return $.inArray(a, this._getters) > -1
                },
                _attach: function(a, b) {
                    a = $(a);
                    if (a.hasClass(this._getMarker())) {
                        return
                    }
                    a.addClass(this._getMarker());
                    b = $.extend({}, this.defaultOptions, this._getMetadata(a), b || {});
                    var c = $.extend({
                        name: this.name,
                        elem: a,
                        options: b
                    }, this._instSettings(a, b));
                    a.data(this.name, c);
                    this._postAttach(a, c);
                    this.option(a, b)
                },
                _instSettings: function(a, b) {
                    return {}
                },
                _postAttach: function(a, b) {},
                _getMetadata: function(d) {
                    try {
                        var f = d.data(this.name.toLowerCase()) || '';
                        f = f.replace(/'/g, '"');
                        f = f.replace(/([a-zA-Z0-9]+):/g, function(a, b, i) {
                            var c = f.substring(0, i).match(/"/g);
                            return (!c || c.length % 2 === 0 ? '"' + b + '":' : b + ':')
                        });
                        f = $.parseJSON('{' + f + '}');
                        for (var g in f) {
                            var h = f[g];
                            if (typeof h === 'string' && h.match(/^new Date\((.*)\)$/)) {
                                f[g] = eval(h)
                            }
                        }
                        return f
                    } catch (e) {
                        return {}
                    }
                },
                _getInst: function(a) {
                    return $(a).data(this.name) || {}
                },
                option: function(a, b, c) {
                    a = $(a);
                    var d = a.data(this.name);
                    if (!b || (typeof b === 'string' && c == null)) {
                        var e = (d || {}).options;
                        return (e && b ? e[b] : e)
                    }
                    if (!a.hasClass(this._getMarker())) {
                        return
                    }
                    var e = b || {};
                    if (typeof b === 'string') {
                        e = {};
                        e[b] = c
                    }
                    this._optionsChanged(a, d, e);
                    $.extend(d.options, e)
                },
                _optionsChanged: function(a, b, c) {},
                destroy: function(a) {
                    a = $(a);
                    if (!a.hasClass(this._getMarker())) {
                        return
                    }
                    this._preDestroy(a, this._getInst(a));
                    a.removeData(this.name).removeClass(this._getMarker())
                },
                _preDestroy: function(a, b) {}
            });
            function camelCase(c) {
                return c.replace(/-([a-z])/g, function(a, b) {
                    return b.toUpperCase()
                })
            }
            $.JQPlugin = {
                createPlugin: function(a, b) {
                    if (typeof a === 'object') {
                        b = a;
                        a = 'JQPlugin'
                    }
                    a = camelCase(a);
                    var c = camelCase(b.name);
                    JQClass.classes[c] = JQClass.classes[a].extend(b);
                    new JQClass.classes[c]()
                }
            }
        }
        )(sQuery);
        (function($) {
            var w = 'countdown';
            var Y = 0;
            var O = 1;
            var W = 2;
            var D = 3;
            var H = 4;
            var M = 5;
            var S = 6;
            $.JQPlugin.createPlugin({
                name: w,
                defaultOptions: {
                    until: null,
                    since: null,
                    timezone: null,
                    serverSync: null,
                    format: 'dHMS',
                    layout: '',
                    compact: false,
                    padZeroes: false,
                    significant: 0,
                    description: '',
                    expiryUrl: '',
                    expiryText: '',
                    alwaysExpire: false,
                    onExpiry: null,
                    onTick: null,
                    tickInterval: 1
                },
                regionalOptions: {
                    '': {
                        labels: ['Years', 'Months', 'Weeks', 'Days', 'Hours', 'Minutes', 'Seconds'],
                        labels1: ['Year', 'Month', 'Week', 'Day', 'Hour', 'Minute', 'Second'],
                        compactLabels: ['y', 'm', 'w', 'd'],
                        whichLabels: null,
                        digits: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'],
                        timeSeparator: ':',
                        isRTL: false
                    }
                },
                _getters: ['getTimes'],
                _rtlClass: w + '-rtl',
                _sectionClass: w + '-section',
                _amountClass: w + '-amount',
                _periodClass: w + '-period',
                _rowClass: w + '-row',
                _holdingClass: w + '-holding',
                _showClass: w + '-show',
                _descrClass: w + '-descr',
                _timerElems: [],
                _init: function() {
                    var c = this;
                    this._super();
                    this._serverSyncs = [];
                    var d = (typeof Date.now == 'function' ? Date.now : function() {
                        return new Date().getTime()
                    }
                    );
                    var e = (window.performance && typeof window.performance.now == 'function');
                    function timerCallBack(a) {
                        var b = (a < 1e12 ? (e ? (performance.now() + performance.timing.navigationStart) : d()) : a || d());
                        if (b - g >= 1000) {
                            c._updateElems();
                            g = b
                        }
                        f(timerCallBack)
                    }
                    var f = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || null;
                    var g = 0;
                    if (!f || $.noRequestAnimationFrame) {
                        $.noRequestAnimationFrame = null;
                        setInterval(function() {
                            c._updateElems()
                        }, 980)
                    } else {
                        g = window.animationStartTime || window.webkitAnimationStartTime || window.mozAnimationStartTime || window.oAnimationStartTime || window.msAnimationStartTime || d();
                        f(timerCallBack)
                    }
                },
                UTCDate: function(a, b, c, e, f, g, h, i) {
                    if (typeof b == 'object' && b.constructor == Date) {
                        i = b.getMilliseconds();
                        h = b.getSeconds();
                        g = b.getMinutes();
                        f = b.getHours();
                        e = b.getDate();
                        c = b.getMonth();
                        b = b.getFullYear()
                    }
                    var d = new Date();
                    d.setUTCFullYear(b);
                    d.setUTCDate(1);
                    d.setUTCMonth(c || 0);
                    d.setUTCDate(e || 1);
                    d.setUTCHours(f || 0);
                    d.setUTCMinutes((g || 0) - (Math.abs(a) < 30 ? a * 60 : a));
                    d.setUTCSeconds(h || 0);
                    d.setUTCMilliseconds(i || 0);
                    return d
                },
                periodsToSeconds: function(a) {
                    return a[0] * 31557600 + a[1] * 2629800 + a[2] * 604800 + a[3] * 86400 + a[4] * 3600 + a[5] * 60 + a[6]
                },
                _instSettings: function(a, b) {
                    return {
                        _periods: [0, 0, 0, 0, 0, 0, 0]
                    }
                },
                _addElem: function(a) {
                    if (!this._hasElem(a)) {
                        this._timerElems.push(a)
                    }
                },
                _hasElem: function(a) {
                    return ($.inArray(a, this._timerElems) > -1)
                },
                _removeElem: function(b) {
                    this._timerElems = $.map(this._timerElems, function(a) {
                        return (a == b ? null : a)
                    })
                },
                _updateElems: function() {
                    for (var i = this._timerElems.length - 1; i >= 0; i--) {
                        this._updateCountdown(this._timerElems[i])
                    }
                },
                _optionsChanged: function(a, b, c) {
                    if (c.layout) {
                        c.layout = c.layout.replace(/&lt;/g, '<').replace(/&gt;/g, '>')
                    }
                    this._resetExtraLabels(b.options, c);
                    var d = (b.options.timezone != c.timezone);
                    $.extend(b.options, c);
                    this._adjustSettings(a, b, c.until != null || c.since != null || d);
                    var e = new Date();
                    if ((b._since && b._since < e) || (b._until && b._until > e)) {
                        this._addElem(a[0])
                    }
                    this._updateCountdown(a, b)
                },
                _updateCountdown: function(a, b) {
                    a = a.jquery ? a : $(a);
                    b = b || this._getInst(a);
                    if (!b) {
                        return
                    }
                    a.html(this._generateHTML(b)).toggleClass(this._rtlClass, b.options.isRTL);
                    if ($.isFunction(b.options.onTick)) {
                        var c = b._hold != 'lap' ? b._periods : this._calculatePeriods(b, b._show, b.options.significant, new Date());
                        if (b.options.tickInterval == 1 || this.periodsToSeconds(c) % b.options.tickInterval == 0) {
                            b.options.onTick.apply(a[0], [c])
                        }
                    }
                    var d = b._hold != 'pause' && (b._since ? b._now.getTime() < b._since.getTime() : b._now.getTime() >= b._until.getTime());
                    if (d && !b._expiring) {
                        b._expiring = true;
                        if (this._hasElem(a[0]) || b.options.alwaysExpire) {
                            this._removeElem(a[0]);
                            if ($.isFunction(b.options.onExpiry)) {
                                b.options.onExpiry.apply(a[0], [])
                            }
                            if (b.options.expiryText) {
                                var e = b.options.layout;
                                b.options.layout = b.options.expiryText;
                                this._updateCountdown(a[0], b);
                                b.options.layout = e
                            }
                            if (b.options.expiryUrl) {
                                window.location = b.options.expiryUrl
                            }
                        }
                        b._expiring = false
                    } else if (b._hold == 'pause') {
                        this._removeElem(a[0])
                    }
                },
                _resetExtraLabels: function(a, b) {
                    for (var n in b) {
                        if (n.match(/[Ll]abels[02-9]|compactLabels1/)) {
                            a[n] = b[n]
                        }
                    }
                    for (var n in a) {
                        if (n.match(/[Ll]abels[02-9]|compactLabels1/) && typeof b[n] === 'undefined') {
                            a[n] = null
                        }
                    }
                },
                _adjustSettings: function(a, b, c) {
                    var d;
                    var e = 0;
                    var f = null;
                    for (var i = 0; i < this._serverSyncs.length; i++) {
                        if (this._serverSyncs[i][0] == b.options.serverSync) {
                            f = this._serverSyncs[i][1];
                            break
                        }
                    }
                    if (f != null) {
                        e = (b.options.serverSync ? f : 0);
                        d = new Date()
                    } else {
                        var g = ($.isFunction(b.options.serverSync) ? b.options.serverSync.apply(a[0], []) : null);
                        d = new Date();
                        e = (g ? d.getTime() - g.getTime() : 0);
                        this._serverSyncs.push([b.options.serverSync, e])
                    }
                    var h = b.options.timezone;
                    h = (h == null ? -d.getTimezoneOffset() : h);
                    if (c || (!c && b._until == null && b._since == null)) {
                        b._since = b.options.since;
                        if (b._since != null) {
                            b._since = this.UTCDate(h, this._determineTime(b._since, null));
                            if (b._since && e) {
                                b._since.setMilliseconds(b._since.getMilliseconds() + e)
                            }
                        }
                        b._until = this.UTCDate(h, this._determineTime(b.options.until, d));
                        if (e) {
                            b._until.setMilliseconds(b._until.getMilliseconds() + e)
                        }
                    }
                    b._show = this._determineShow(b)
                },
                _preDestroy: function(a, b) {
                    this._removeElem(a[0]);
                    a.empty()
                },
                pause: function(a) {
                    this._hold(a, 'pause')
                },
                lap: function(a) {
                    this._hold(a, 'lap')
                },
                resume: function(a) {
                    this._hold(a, null)
                },
                toggle: function(a) {
                    var b = $.data(a, this.name) || {};
                    this[!b._hold ? 'pause' : 'resume'](a)
                },
                toggleLap: function(a) {
                    var b = $.data(a, this.name) || {};
                    this[!b._hold ? 'lap' : 'resume'](a)
                },
                _hold: function(a, b) {
                    var c = $.data(a, this.name);
                    if (c) {
                        if (c._hold == 'pause' && !b) {
                            c._periods = c._savePeriods;
                            var d = (c._since ? '-' : '+');
                            c[c._since ? '_since' : '_until'] = this._determineTime(d + c._periods[0] + 'y' + d + c._periods[1] + 'o' + d + c._periods[2] + 'w' + d + c._periods[3] + 'd' + d + c._periods[4] + 'h' + d + c._periods[5] + 'm' + d + c._periods[6] + 's');
                            this._addElem(a)
                        }
                        c._hold = b;
                        c._savePeriods = (b == 'pause' ? c._periods : null);
                        $.data(a, this.name, c);
                        this._updateCountdown(a, c)
                    }
                },
                getTimes: function(a) {
                    var b = $.data(a, this.name);
                    return (!b ? null : (b._hold == 'pause' ? b._savePeriods : (!b._hold ? b._periods : this._calculatePeriods(b, b._show, b.options.significant, new Date()))))
                },
                _determineTime: function(k, l) {
                    var m = this;
                    var n = function(a) {
                        var b = new Date();
                        b.setTime(b.getTime() + a * 1000);
                        return b
                    };
                    var o = function(a) {
                        a = a.toLowerCase();
                        var b = new Date();
                        var c = b.getFullYear();
                        var d = b.getMonth();
                        var e = b.getDate();
                        var f = b.getHours();
                        var g = b.getMinutes();
                        var h = b.getSeconds();
                        var i = /([+-]?[0-9]+)\s*(s|m|h|d|w|o|y)?/g;
                        var j = i.exec(a);
                        while (j) {
                            switch (j[2] || 's') {
                            case 's':
                                h += parseInt(j[1], 10);
                                break;
                            case 'm':
                                g += parseInt(j[1], 10);
                                break;
                            case 'h':
                                f += parseInt(j[1], 10);
                                break;
                            case 'd':
                                e += parseInt(j[1], 10);
                                break;
                            case 'w':
                                e += parseInt(j[1], 10) * 7;
                                break;
                            case 'o':
                                d += parseInt(j[1], 10);
                                e = Math.min(e, m._getDaysInMonth(c, d));
                                break;
                            case 'y':
                                c += parseInt(j[1], 10);
                                e = Math.min(e, m._getDaysInMonth(c, d));
                                break
                            }
                            j = i.exec(a)
                        }
                        return new Date(c,d,e,f,g,h,0)
                    };
                    var p = (k == null ? l : (typeof k == 'string' ? o(k) : (typeof k == 'number' ? n(k) : k)));
                    if (p)
                        p.setMilliseconds(0);
                    return p
                },
                _getDaysInMonth: function(a, b) {
                    return 32 - new Date(a,b,32).getDate()
                },
                _normalLabels: function(a) {
                    return a
                },
                _generateHTML: function(c) {
                    var d = this;
                    c._periods = (c._hold ? c._periods : this._calculatePeriods(c, c._show, c.options.significant, new Date()));
                    var e = false;
                    var f = 0;
                    var g = c.options.significant;
                    var h = $.extend({}, c._show);
                    for (var i = Y; i <= S; i++) {
                        e |= (c._show[i] == '?' && c._periods[i] > 0);
                        h[i] = (c._show[i] == '?' && !e ? null : c._show[i]);
                        f += (h[i] ? 1 : 0);
                        g -= (c._periods[i] > 0 ? 1 : 0)
                    }
                    var j = [false, false, false, false, false, false, false];
                    for (var i = S; i >= Y; i--) {
                        if (c._show[i]) {
                            if (c._periods[i]) {
                                j[i] = true
                            } else {
                                j[i] = g > 0;
                                g--
                            }
                        }
                    }
                    var k = (c.options.compact ? c.options.compactLabels : c.options.labels);
                    var l = c.options.whichLabels || this._normalLabels;
                    var m = function(a) {
                        var b = c.options['compactLabels' + l(c._periods[a])];
                        return (h[a] ? d._translateDigits(c, c._periods[a]) + (b ? b[a] : k[a]) + ' ' : '')
                    };
                    var n = (c.options.padZeroes ? 2 : 1);
                    var o = function(a) {
                        var b = c.options['labels' + l(c._periods[a])];
                        return ((!c.options.significant && h[a]) || (c.options.significant && j[a]) ? '<span class="' + d._sectionClass + '">' + '<span class="' + d._amountClass + '">' + d._minDigits(c, c._periods[a], n) + '</span>' + '<span class="' + d._periodClass + '">' + (b ? b[a] : k[a]) + '</span></span>' : '')
                    };
                    return (c.options.layout ? this._buildLayout(c, h, c.options.layout, c.options.compact, c.options.significant, j) : ((c.options.compact ? '<span class="' + this._rowClass + ' ' + this._amountClass + (c._hold ? ' ' + this._holdingClass : '') + '">' + m(Y) + m(O) + m(W) + m(D) + (h[H] ? this._minDigits(c, c._periods[H], 2) : '') + (h[M] ? (h[H] ? c.options.timeSeparator : '') + this._minDigits(c, c._periods[M], 2) : '') + (h[S] ? (h[H] || h[M] ? c.options.timeSeparator : '') + this._minDigits(c, c._periods[S], 2) : '') : '<span class="' + this._rowClass + ' ' + this._showClass + (c.options.significant || f) + (c._hold ? ' ' + this._holdingClass : '') + '">' + o(Y) + o(O) + o(W) + o(D) + o(H) + o(M) + o(S)) + '</span>' + (c.options.description ? '<span class="' + this._rowClass + ' ' + this._descrClass + '">' + c.options.description + '</span>' : '')))
                },
                _buildLayout: function(c, d, e, f, g, h) {
                    var j = c.options[f ? 'compactLabels' : 'labels'];
                    var k = c.options.whichLabels || this._normalLabels;
                    var l = function(a) {
                        return (c.options[(f ? 'compactLabels' : 'labels') + k(c._periods[a])] || j)[a]
                    };
                    var m = function(a, b) {
                        return c.options.digits[Math.floor(a / b) % 10]
                    };
                    var o = {
                        desc: c.options.description,
                        sep: c.options.timeSeparator,
                        yl: l(Y),
                        yn: this._minDigits(c, c._periods[Y], 1),
                        ynn: this._minDigits(c, c._periods[Y], 2),
                        ynnn: this._minDigits(c, c._periods[Y], 3),
                        y1: m(c._periods[Y], 1),
                        y10: m(c._periods[Y], 10),
                        y100: m(c._periods[Y], 100),
                        y1000: m(c._periods[Y], 1000),
                        ol: l(O),
                        on: this._minDigits(c, c._periods[O], 1),
                        onn: this._minDigits(c, c._periods[O], 2),
                        onnn: this._minDigits(c, c._periods[O], 3),
                        o1: m(c._periods[O], 1),
                        o10: m(c._periods[O], 10),
                        o100: m(c._periods[O], 100),
                        o1000: m(c._periods[O], 1000),
                        wl: l(W),
                        wn: this._minDigits(c, c._periods[W], 1),
                        wnn: this._minDigits(c, c._periods[W], 2),
                        wnnn: this._minDigits(c, c._periods[W], 3),
                        w1: m(c._periods[W], 1),
                        w10: m(c._periods[W], 10),
                        w100: m(c._periods[W], 100),
                        w1000: m(c._periods[W], 1000),
                        dl: l(D),
                        dn: this._minDigits(c, c._periods[D], 1),
                        dnn: this._minDigits(c, c._periods[D], 2),
                        dnnn: this._minDigits(c, c._periods[D], 3),
                        d1: m(c._periods[D], 1),
                        d10: m(c._periods[D], 10),
                        d100: m(c._periods[D], 100),
                        d1000: m(c._periods[D], 1000),
                        hl: l(H),
                        hn: this._minDigits(c, c._periods[H], 1),
                        hnn: this._minDigits(c, c._periods[H], 2),
                        hnnn: this._minDigits(c, c._periods[H], 3),
                        h1: m(c._periods[H], 1),
                        h10: m(c._periods[H], 10),
                        h100: m(c._periods[H], 100),
                        h1000: m(c._periods[H], 1000),
                        ml: l(M),
                        mn: this._minDigits(c, c._periods[M], 1),
                        mnn: this._minDigits(c, c._periods[M], 2),
                        mnnn: this._minDigits(c, c._periods[M], 3),
                        m1: m(c._periods[M], 1),
                        m10: m(c._periods[M], 10),
                        m100: m(c._periods[M], 100),
                        m1000: m(c._periods[M], 1000),
                        sl: l(S),
                        sn: this._minDigits(c, c._periods[S], 1),
                        snn: this._minDigits(c, c._periods[S], 2),
                        snnn: this._minDigits(c, c._periods[S], 3),
                        s1: m(c._periods[S], 1),
                        s10: m(c._periods[S], 10),
                        s100: m(c._periods[S], 100),
                        s1000: m(c._periods[S], 1000)
                    };
                    var p = e;
                    for (var i = Y; i <= S; i++) {
                        var q = 'yowdhms'.charAt(i);
                        var r = new RegExp('\\{' + q + '<\\}([\\s\\S]*)\\{' + q + '>\\}','g');
                        p = p.replace(r, ((!g && d[i]) || (g && h[i]) ? '$1' : ''))
                    }
                    $.each(o, function(n, v) {
                        var a = new RegExp('\\{' + n + '\\}','g');
                        p = p.replace(a, v)
                    });
                    return p
                },
                _minDigits: function(a, b, c) {
                    b = '' + b;
                    if (b.length >= c) {
                        return this._translateDigits(a, b)
                    }
                    b = '0000000000' + b;
                    return this._translateDigits(a, b.substr(b.length - c))
                },
                _translateDigits: function(b, c) {
                    return ('' + c).replace(/[0-9]/g, function(a) {
                        return b.options.digits[a]
                    })
                },
                _determineShow: function(a) {
                    var b = a.options.format;
                    var c = [];
                    c[Y] = (b.match('y') ? '?' : (b.match('Y') ? '!' : null));
                    c[O] = (b.match('o') ? '?' : (b.match('O') ? '!' : null));
                    c[W] = (b.match('w') ? '?' : (b.match('W') ? '!' : null));
                    c[D] = (b.match('d') ? '?' : (b.match('D') ? '!' : null));
                    c[H] = (b.match('h') ? '?' : (b.match('H') ? '!' : null));
                    c[M] = (b.match('m') ? '?' : (b.match('M') ? '!' : null));
                    c[S] = (b.match('s') ? '?' : (b.match('S') ? '!' : null));
                    return c
                },
                _calculatePeriods: function(c, d, e, f) {
                    c._now = f;
                    c._now.setMilliseconds(0);
                    var g = new Date(c._now.getTime());
                    if (c._since) {
                        if (f.getTime() < c._since.getTime()) {
                            c._now = f = g
                        } else {
                            f = c._since
                        }
                    } else {
                        g.setTime(c._until.getTime());
                        if (f.getTime() > c._until.getTime()) {
                            c._now = f = g
                        }
                    }
                    var h = [0, 0, 0, 0, 0, 0, 0];
                    if (d[Y] || d[O]) {
                        var i = this._getDaysInMonth(f.getFullYear(), f.getMonth());
                        var j = this._getDaysInMonth(g.getFullYear(), g.getMonth());
                        var k = (g.getDate() == f.getDate() || (g.getDate() >= Math.min(i, j) && f.getDate() >= Math.min(i, j)));
                        var l = function(a) {
                            return (a.getHours() * 60 + a.getMinutes()) * 60 + a.getSeconds()
                        };
                        var m = Math.max(0, (g.getFullYear() - f.getFullYear()) * 12 + g.getMonth() - f.getMonth() + ((g.getDate() < f.getDate() && !k) || (k && l(g) < l(f)) ? -1 : 0));
                        h[Y] = (d[Y] ? Math.floor(m / 12) : 0);
                        h[O] = (d[O] ? m - h[Y] * 12 : 0);
                        f = new Date(f.getTime());
                        var n = (f.getDate() == i);
                        var o = this._getDaysInMonth(f.getFullYear() + h[Y], f.getMonth() + h[O]);
                        if (f.getDate() > o) {
                            f.setDate(o)
                        }
                        f.setFullYear(f.getFullYear() + h[Y]);
                        f.setMonth(f.getMonth() + h[O]);
                        if (n) {
                            f.setDate(o)
                        }
                    }
                    var p = Math.floor((g.getTime() - f.getTime()) / 1000);
                    var q = function(a, b) {
                        h[a] = (d[a] ? Math.floor(p / b) : 0);
                        p -= h[a] * b
                    };
                    q(W, 604800);
                    q(D, 86400);
                    q(H, 3600);
                    q(M, 60);
                    q(S, 1);
                    if (p > 0 && !c._since) {
                        var r = [1, 12, 4.3482, 7, 24, 60, 60];
                        var s = S;
                        var t = 1;
                        for (var u = S; u >= Y; u--) {
                            if (d[u]) {
                                if (h[s] >= t) {
                                    h[s] = 0;
                                    p = 1
                                }
                                if (p > 0) {
                                    h[u]++;
                                    p = 0;
                                    s = u;
                                    t = 1
                                }
                            }
                            t *= r[u]
                        }
                    }
                    if (e) {
                        for (var u = Y; u <= S; u++) {
                            if (e && h[u]) {
                                e--
                            } else if (!e) {
                                h[u] = 0
                            }
                        }
                    }
                    return h
                }
            })
        }
        )(sQuery);
        partnerName = "ikea";
        partner_site = {
            "scheme": "https",
            "host": "www.ikea.com.tr",
            "path": "\/"
        };
        partner_site.host = partner_site.host.replace(/^www\./, '');
        var cookieDomain = "." + partner_site.host;
        var isInIFrame = (window.location != window.top.location);
        var panelEdit = false;
        if (isInIFrame == true) {
            sQuery.cookie('ins-panel', 1, {
                expires: 1,
                path: '/',
                domain: '.' + partner_site.host
            });
            panelEdit = true;
        } else {
            sQuery.cookie('ins-panel', null, {
                expires: -1,
                path: '/',
                domain: '.' + partner_site.host
            });
        }
        if (typeof disabledEdit != 'undefined' && disabledEdit == true) {
            panelEdit = false;
        }
        function loadPanelView() {
            var js = undefined;
            var count = 0;
            pm.bind('apiControl', function() {
                return '1';
            });
            if (panelEdit == true) {
                var checkIframe = setInterval(function() {
                    if (count == 5 && js == undefined) {
                        clearInterval(checkIframe);
                        window.panelEdit = false;
                        panelEdit = false;
                        spApi.init();
                        return false;
                    }
                    count++;
                    pm({
                        target: window.top,
                        type: 'checkIframe',
                        data: {},
                        success: function(result) {
                            if (typeof js === 'object') {
                                clearInterval(checkIframe);
                                return false;
                            }
                            var scriptSource = spApi.apiUrl + 'edit/';
                            var prototypeInterval = setInterval(function() {
                                if (typeof Prototype !== 'undefined' && Prototype.Version < '1.7' && Array.prototype.toJSON) {
                                    delete Array.prototype.toJSON;
                                    delete Array.prototype.toArray;
                                    clearInterval(prototypeInterval);
                                }
                            }, 10);
                            setTimeout(function() {
                                if (typeof prototypeInterval !== 'undefined') {
                                    clearInterval(prototypeInterval);
                                }
                            }, 3000);
                            js = result;
                            if (typeof js === 'object') {
                                window.ActionBuilderSettings = js.config;
                                var appPath = result.config.app.appPath;
                                if (typeof appPath == 'undefined') {
                                    appPath = scriptSource + 'actionbuilder/frame/app.js';
                                }
                                var html_doc = document.getElementsByTagName('head')[0];
                                var scriptElement = document.createElement('script');
                                scriptElement.setAttribute('language', 'javascript');
                                scriptElement.setAttribute('type', 'text/javascript');
                                scriptElement.setAttribute('src', appPath + '?v=' + spApi.genDate);
                                html_doc.appendChild(scriptElement);
                                clearInterval(checkIframe);
                            } else {
                                var scriptElement = document.createElement('script');
                                scriptElement.type = 'text/javascript';
                                scriptElement.src = scriptSource + js + '?' + new Date().getTime();
                                document.getElementsByTagName('head')[0].appendChild(scriptElement);
                                clearInterval(checkIframe);
                            }
                        }
                    });
                }, 100);
            }
        }
        sQuery(document).ready(function() {
            loadPanelView();
        });
        function getAnalytics(callback) {
            esCountAnalytics(callback);
        }
        function esCountAnalytics(callback, campId) {
            if (!spApi.isOnProductPage()) {
                return;
            }
            var uniqueID = (spApi.getCurrentProduct() || {}).id;
            if (typeof window.spPageVisitCount != "undefined" && typeof callback != "undefined") {
                callback(window.spPageVisitCount);
                return;
            }
            if (typeof spApi.analyticsCallbacks == "undefined") {
                spApi.analyticsCallbacks = [];
                if (typeof callback != "undefined")
                    spApi.analyticsCallbacks.push(callback);
            } else {
                if (typeof callback != "undefined")
                    spApi.analyticsCallbacks.push(callback);
                return;
            }
            if (typeof uniqueID === 'undefined' || uniqueID === '') {
                return;
            }
            var instantView = false;
            var dailyView = false;
            var isUniqueView = false;
            sQuery.each(spApi.notifies, function(i, val) {
                if (val.kkbSettings != null) {
                    sQuery.each(val.kkbSettings, function(kkbIndex, kkbVal) {
                        if (kkbIndex == "@instantView") {
                            instantView = true;
                        }
                        if (kkbIndex == "@dailyView") {
                            dailyView = true;
                        }
                    });
                }
            });
            if (dailyView != true && instantView != true)
                return;
            if (isUniqueView) {
                if (spApi.sessionStorageGet(uniqueID)) {
                    isUniqueView = true;
                } else {
                    spApi.sessionStorageSet(uniqueID, uniqueID);
                    isUniqueView = false;
                }
            }
            sQuery.ajax({
                url: "//kkbv2.api.sociaplus.com?t=esCountAnalytics&instantView=" + instantView + "&dailyView=" + dailyView,
                data: {
                    uniqueID: uniqueID,
                    partnerName: "ikea",
                    isUniqueView: isUniqueView,
                    campId: campId,
                    kkbRandomSettings: spApi.notifies[campId].kkbRandomSettings,
                    multiplySettings: (spApi.notifies[campId] || {}).multiplySettings,
                    addToOriginalSettings: (spApi.notifies[campId] || {}).addToOriginalSettings
                },
                type: "get",
                dataType: "jsonp",
                async: spApi.isAjaxAsync,
                jsonpCallback: "parseAnalyticsData",
                success: function(e) {
                    var isDataAvailable = (dailyView && e.count.dailyView > -1) || (instantView && e.count.instantView > -1);
                    if (typeof e == "object" && isDataAvailable) {
                        window.success10 = e.count.dailyView < 10 ? e.count.dailyView * 3 : e.count.dailyView;
                        window.spPageVisitCount = e.count;
                        sQuery.each(spApi.analyticsCallbacks, function(i, funct) {
                            funct(e.count);
                        });
                        spApi.analyticsCallbacks = undefined;
                    }
                }
            });
        }
        function parseAnalyticsData(e) {}
        function esLiveFeed(callback) {
            if (!spApi.isOnProductPage()) {
                return;
            }
            if (typeof window.esFeedData != "undefined" && typeof callback != "undefined") {
                callback(window.esFeedData);
                return;
            }
            if (typeof spApi.historyCallbacks == "undefined") {
                spApi.historyCallbacks = [];
                if (typeof callback != "undefined")
                    spApi.historyCallbacks.push(callback);
            } else {
                if (typeof callback != "undefined")
                    spApi.historyCallbacks.push(callback);
                return;
            }
            var lastPurchaseTime = false;
            var dailyPurchase = false;
            var instantPurchase = false;
            var inBasket = false;
            sQuery.each(spApi.notifies, function(id, notify) {
                if (lastPurchaseTime == false && notify.content.indexOf("@lastPurchasedTime") != -1) {
                    lastPurchaseTime = true;
                }
                if (dailyPurchase == false && notify.content.indexOf("@dailyPurchase") != -1) {
                    dailyPurchase = true;
                }
                if (instantPurchase == false && notify.content.indexOf("@instantPurchase") != -1) {
                    instantPurchase = true;
                }
                if (inBasket == false && notify.content.indexOf("@inBasketCount") != -1) {
                    inBasket = true;
                }
            });
            sQuery.each(spApi.notifies, function(id, notify) {
                if (notify.kkbSettings != null) {
                    sQuery.each(notify.kkbSettings, function(property, value) {
                        if (dailyPurchase == false && property == "@dailyPurchase") {
                            dailyPurchase = true;
                        }
                        if (lastPurchaseTime == false && property == "@lastPurchaseTime") {
                            lastPurchaseTime = true;
                        }
                        if (instantPurchase == false && property == "@instantPurchase") {
                            instantPurchase = true;
                        }
                        if (inBasket == false && property == "@inBasketCount") {
                            inBasket = true;
                        }
                    });
                }
            });
            var uniqueID = (spApi.getCurrentProduct() || {}).id;
            if (typeof uniqueID === 'undefined' || uniqueID === '') {
                return;
            }
            sQuery.ajax({
                url: "//kkbv2.api.sociaplus.com?t=getKksHistory&lastPurchaseTime=" + lastPurchaseTime + "&dailyPurchase=" + dailyPurchase + "&instantPurchase=" + instantPurchase + "&inCartCount=" + inBasket,
                data: {
                    uniqueID: uniqueID,
                    partnerName: "ikea",
                    multiplySettings: (spApi.notifies[window.socialProofVarId] || {}).multiplySettings,
                    addToOriginalSettings: (spApi.notifies[window.socialProofVarId] || {}).addToOriginalSettings,
                    kkbRandomSettings: (spApi.notifies[window.socialProofVarId] || {}).kkbRandomSettings
                },
                type: "get",
                dataType: "jsonp",
                async: spApi.isAjaxAsync,
                jsonpCallback: "parsehistoryData",
                success: function(e) {
                    window.esFeedData = e;
                    sQuery.each(spApi.historyCallbacks, function(i, funct) {
                        funct(e);
                    });
                    spApi.historyCallbacks = undefined;
                }
            });
            function parsehistoryData(e) {}
            function parseCustomPlusData(e) {}
            function parseNotifyData(e) {}
        }
        protocol = 'https://';
        var _json_stringify = JSON.stringify;
        JSON.stringify = function(object, replacer, space) {
            var Prototype = window.Prototype;
            if (typeof Prototype !== 'undefined' && Prototype.Version < '1.7' && Array.prototype.toJSON && Object.toJSON) {
                return Object.toJSON(object)
            }
            return _json_stringify(object, replacer, space);
        }
        sQuery.fn.extend({
            exists: function() {
                return this.length > 0;
            },
            elementLoadComplete: function(callback, customConfig, notFoundCallback) {
                try {
                    var defaults = {
                        t: spApi.elementLoadCompleteConfig.timeout
                    };
                    var config = sQuery.extend(defaults, customConfig);
                    var selector = this.selector;
                    if (typeof selector !== 'string' || typeof callback !== 'function') {
                        return false;
                    }
                    if (sQuery(selector).exists()) {
                        return callback(sQuery(selector));
                    }
                    var index = spApi.elementLoadCompleteConfig.mutableList.push({
                        selector: selector,
                        callback: callback,
                        notFoundCallbackTimeout: setTimeout(function() {
                            if (spApi.elementLoadCompleteConfig.mutableList[index - 1]instanceof Object) {
                                spApi.elementLoadCompleteConfig.mutableList[index - 1].invalid = true;
                            }
                            if (typeof notFoundCallback === 'function') {
                                spApi.logger('warning', 'Selector not found.' + selector);
                                notFoundCallback();
                            }
                        }, config.t)
                    });
                    spApi.elementLoadCompleteConfig.mutationCallback = spApi.debounce(function() {
                        var mutableList = spApi.elementLoadCompleteConfig.mutableList;
                        mutableList.forEach(function(mutableObject, index) {
                            if (sQuery(mutableObject.selector).exists() && typeof mutableObject.invalid === 'undefined') {
                                spApi.logger('info', 'Selector has been found, callback is running.' + mutableObject.selector);
                                clearTimeout(mutableObject.notFoundCallbackTimeout);
                                mutableObject.callback(sQuery(mutableObject.selector));
                                mutableList[index].invalid = false;
                            }
                        });
                    }, 50);
                    if (spApi.elementLoadCompleteConfig.inited) {
                        return false;
                    }
                    spApi.elementLoadCompleteConfig.inited = true;
                    var referenceElement = document.body || document;
                    if (window.MutationObserver && referenceElement) {
                        setTimeout(function() {
                            var observer = new MutationObserver(spApi.elementLoadCompleteConfig.mutationCallback);
                            observer.observe(referenceElement, {
                                childList: true,
                                subtree: true
                            });
                            spApi.elementLoadCompleteConfig.disconnect = observer.disconnect.bind(observer);
                        }, 0);
                    } else {
                        referenceElement.removeEventListener('DOMSubtreeModified', spApi.elementLoadCompleteConfig.mutationCallback);
                        referenceElement.addEventListener('DOMSubtreeModified', spApi.elementLoadCompleteConfig.mutationCallback);
                    }
                    setTimeout(spApi.clearElementLoadComplete, spApi.elementLoadCompleteConfig.timeout || (15 * 1000));
                } catch (error) {
                    spApi.errLog(error, {
                        logType: 'ElementLoadComplete',
                        bugType: 'product'
                    });
                }
                return this;
            }
        });
        function setSessionOnlyCookie(cookieName, cookieValue) {
            if (navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > 0) {
                document.cookie = cookieName + "=" + cookieValue + "; path=/";
            } else {
                document.cookie = cookieName + '=' + cookieValue + ';path=/' + ';expires=' + '0';
            }
        }
        if (typeof spPanelPreview == "undefined" || spPanelPreview != true) {
            var disable_camp = false;
        } else {
            var disable_camp = true;
        }
        spApi = {
            loadScript: spApi.loadScript,
            isAjaxAsync: false,
            globalUserIdIsDisabled: false,
            viewedCustomCamps: [],
            Base64: {
                encode: function(str) {
                    return btoa(unescape(encodeURIComponent(str)));
                },
                decode: function(str) {
                    return decodeURIComponent(escape(atob(str)));
                }
            },
            consoleLog: [],
            salesSesId: 'MA==',
            partnerTimeZone: 'Turkey',
            goalList: [],
            goalObserverStatus: false,
            goalLogs: [],
            dbLog: [],
            hitSend: false,
            errLogActive: true,
            esResultCheck: function(campId, logic, value, aggrName) {
                return spApi.e("(this.gaDimensionQ['" + campId + "_" + aggrName + "'] " + logic + " " + value + ")");
            },
            paaProducts: [32, 39, 47],
            isFirstVersus: false,
            webPushPermission: {
                initialized: false,
                setState: function(pushStorageData) {
                    if (pushStorageData.insdrSubsId) {
                        spApi.storageData('insUserPermissionGranted', {
                            state: true
                        }, {
                            expires: 360
                        });
                    } else if (pushStorageData.pushRequestSent) {
                        spApi.storageData('insUserPermissionGranted', {
                            state: false
                        }, {
                            expires: 360
                        });
                    } else {
                        spApi.storageData('insUserPermissionGranted', {
                            state: null
                        }, {
                            expires: 360
                        });
                    }
                },
                initState: function() {
                    spApi.worker.asyncPM('getPushStorageData', {}, function(pushStorageData) {
                        spApi.webPushPermission.setState(pushStorageData);
                    });
                },
                getState: function() {
                    var storageData = JSON.parse(spApi.storageData('insUserPermissionGranted'));
                    if (storageData) {
                        return storageData.state;
                    }
                    return storageData;
                },
                hasOptedInBefore: false
            },
            highlight: function(element, options) {
                return sQuery(element).highlight(options);
            },
            debounce: function(func, wait) {
                var timeout;
                return function() {
                    clearTimeout(timeout);
                    timeout = setTimeout(func.bind(this), wait);
                }
                ;
            },
            isset: function(value) {
                return typeof value !== 'undefined' && typeof value !== 'unknown';
            },
            mask: sQuery.mask,
            gaDimensionQ: {},
            getBrowser: function(version, lowerCase) {
                var ua = navigator.userAgent, tem, M = ua.match(/(yabrowser|opera|chrome|crios|safari|firefox|msie|edge|maxthon|trident|ubrowser|ucbrowser(?=\/))\/?\s*(\d+)/i) || [];
                var done = false;
                if (/trident/i.test(M[1])) {
                    tem = /\brv[ :]+(\d+)/g.exec(ua) || [];
                    M[0] = 'IE';
                    M[1] = (tem[1] || -1);
                    done = true;
                } else if (M[1] === 'Chrome') {
                    if (ua.match(/\b(Edge)\/(\d+)/) != null) {
                        tem = ua.match(/\b(Edge)\/(\d+)/);
                        done = true;
                        M[0] = 'Edge';
                        M[1] = (tem[2] || -1);
                    } else if (ua.match(/\b(YaBrowser)\/(\d+)/) != null) {
                        tem = ua.match(/\b(YaBrowser)\/(\d+)/);
                        done = true;
                        M[0] = 'Yandex';
                        M[1] = (tem[2] || -1);
                    } else if (ua.match(/\b(OPR)\/(\d+)/) != null) {
                        tem = ua.match(/\b(OPR)\/(\d+)/);
                        done = true;
                        M[0] = 'Opera';
                        M[1] = (tem[2] || -1);
                    } else if (ua.match(/\b(UBrowser)\/(\d+)/) != null) {
                        tem = ua.match(/\b(UBrowser)\/(\d+)/);
                        done = true;
                        M[0] = 'UCBrowser';
                        M[1] = (tem[2] || -1);
                    } else if (ua.match(/\b(SamsungBrowser)\/(\d+)/) != null) {
                        tem = ua.match(/\b(SamsungBrowser)\/(\d+)/);
                        done = true;
                        M[0] = 'Samsung Internet';
                        M[1] = (tem[2] || -1);
                    }
                } else if (ua.match(/\b(CriOS)\/(\d+)/) != null) {
                    tem = ua.match(/\b(CriOS)\/(\d+)/);
                    done = true;
                    M[0] = 'Chrome';
                    M[1] = (tem[2] || -1);
                }
                if (ua.match(/\b(coc_coc_browser)\/(\d+)/) != null || (navigator.vendor && navigator.vendor == 'Coc Coc')) {
                    tem = ua.match(/\b(coc_coc_browser)\/(\d+)/) || '';
                    done = true;
                    M[0] = 'CocCoc';
                    M[1] = (tem[2] || -1);
                }
                if (!done) {
                    M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, -1];
                    if ((tem = ua.match(/version\/(\d+)/i)) != null)
                        M.splice(1, 1, tem[1]);
                }
                if (typeof version !== 'undefined' && version)
                    return M[1] || -1;
                if (M[0] == 'MSIE')
                    M[0] = 'IE';
                if (typeof lowerCase !== 'undefined' && lowerCase)
                    M[0] = M[0].toLowerCase();
                return M[0];
            },
            conTrace: function() {
                if (spApi.debugModeIsOpen() && typeof console.trace !== 'undefined') {
                    console.trace.apply(console, arguments);
                }
            },
            errLog: function(error, data) {
                if (typeof data == "undefined") {
                    data = {
                        logType: 'Bilinmeyen Hata'
                    };
                }
                data.errorName = error.name;
                data.errorMessage = error.message;
                data.errorLineNumber = error.lineNumber || '';
                data.errorStack = error.stack || '';
                data.partnerName = partnerName;
                data.bugType = data.bugType || 'product';
                data.url = window.location.href;
                data.host = window.location.host;
                data.referrer = window.document.referrer;
                data.date = new Date().getTime();
                data.browser = spApi.getBrowser();
                data.browserVersion = spApi.getBrowser(true);
                data.browserLang = navigator.language;
                data.platform = navigator.platform;
                data.userAgent = navigator.userAgent;
                if (typeof spApi.errLogs === 'undefined') {
                    spApi.errLogs = [];
                }
                spApi.errLogs.push(data);
                spApi.conTrace(error, data);
                if (typeof spApi.consoleLog.push === 'function') {
                    spApi.consoleLog.push('ERROR', data);
                }
                var validateIpAddress = function(ipAddress) {
                    var ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
                    return ipRegex.test(ipAddress);
                };
                if (data.logType === 'siteUrlCheckFailed' && data.host.indexOf('local') < 0 && data.host.indexOf('test') < 0 && !validateIpAddress(data.host)) {}
            },
            limitSystemRulesCall: function() {
                var systemRules = ["categorySettings", "getCartCount", "getCategories", "getCurrency", "getCurrentProduct", "getLang", "getLocale", "getOrderId", "getPaidProducts", "getProductCategories", "getSearchKeyWords", "getTotalCartAmount", "isCouponCodeApplied", "isOnAfterPaymentPage", "isOnCartPage", "isOnCategoryPage", "isOnCouponPage", "isOnMainPage", "isOnProductPage", "isOnRegSuccessPage", "isUserLoggedIn", "rsvpLocate", "setEmailToCookie", "sliderSettings", "spAddToCart", "triggerCartButton", "useCouponButton"];
                var handler = function handler(fn, ruleName) {
                    fn.callLimit = fn.callLimit || 0;
                    if (fn.callLimit < 500) {
                        fn.callLimit += 1;
                        return fn.apply(this, arguments);
                    } else {
                        try {
                            fn.callLimit = 0;
                            throw new Error();
                        } catch (error) {
                            spApi.errLog(error, {
                                logType: 'Possible infinite loop on system rule call (' + ruleName + ')',
                                bugType: 'System Rules'
                            });
                        }
                    }
                };
                sQuery.each(systemRules, function(index, ruleName) {
                    spApi[ruleName] = handler.bind(this, spApi[ruleName], ruleName);
                }
                .bind(this));
            },
            isBrowserSupportEnabled: function() {
                try {
                    var browser = spApi.getBrowser();
                    var version = Number(spApi.getBrowser(true));
                    if (browser == "IE" && version <= 10) {
                        return false;
                    }
                    return true;
                } catch (e) {
                    spApi.errLog(e);
                }
            },
            isCookieSupportEnabled: function() {
                try {
                    var data = {
                        key: 'scs',
                        obj: {
                            't': 1
                        },
                        campId: 0
                    };
                    spApi.updateCookie(data);
                    if (sQuery.cookie("scs") != null) {
                        return true
                    } else {
                        return false
                    }
                } catch (e) {
                    spApi.errLog(e)
                }
            },
            bindAutoClose: function(campaign, callback) {},
            isLocalStorageSupport: insIsLocalStorageSupported,
            getParameterFromUrl: function(url, parameter) {
                name = parameter.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
                var regexS = "[\\?&]" + name + "=([^&#]*)";
                var regex = new RegExp(regexS);
                var results = regex.exec(url);
                if (results == null)
                    return "";
                else
                    return decodeURIComponent(results[1]);
            },
            isOptOut: function() {
                return sQuery.cookie('INSOPTOUT') !== null;
            },
            optOutRequestExists: function() {
                return spApi.hasParameter('INSOPTOUT');
            },
            checkOptOut: function() {
                if (spApi.optOutRequestExists() && !spApi.isOptOut()) {
                    spApi.worker.asyncPM('insOptOut');
                    sQuery.cookie('INSOPTOUT', 1, {
                        expires: 360,
                        path: '/',
                        domain: cookieDomain
                    });
                }
                return spApi.isOptOut();
            },
            resetAddCartCount: function() {
                var counter = [];
                localStorage.setItem('addCartCount', counter);
            },
            loaded: false,
            showActiveCamp: function() {
                spApi.activeCamp = spApi.getCampOfThePage(spApi.camps);
                if (spApi.activeCamp) {
                    try {
                        var selectedElement = typeof spApi.notifies[spApi.activeCamp.id] === 'undefined' ? '' : spApi.notifies[spApi.activeCamp.id].locationConfig.selectedElement;
                        if (typeof spApi.notifies[spApi.activeCamp.id] !== 'undefined') {
                            var locationConfig = spApi.notifies[spApi.activeCamp.id].locationConfig;
                            if (locationConfig.selectedElement) {
                                selectedElement = locationConfig.selectedElement;
                            } else if (locationConfig.relativePositioning === 'true' && locationConfig.relativePosition.element) {
                                selectedElement = locationConfig.relativePosition.element;
                            }
                        }
                        var activeCampId = spApi.activeCamp.id;
                        if (selectedElement) {
                            sQuery(selectedElement).elementLoadComplete(function() {
                                spApi.showCamp(spApi.activeCamp);
                            }, {
                                t: 1000
                            }, function() {
                                (spApi.getCamp(activeCampId).camp || {}).invalid = true;
                                spApi.logger('info', 'Campaign reference element not found, next campaign will be showed', activeCampId);
                                spApi.showActiveCamp();
                            });
                        } else {
                            spApi.showCamp(spApi.activeCamp);
                        }
                    } catch (error) {
                        spApi.errLog(error);
                    }
                }
            },
            setCustomTrackClass: function(customCamp, controlGroupID) {
                try {
                    if (customCamp && customCamp.customizationList != null) {
                        sQuery.each(customCamp.customizationList, function(index, cstm) {
                            if (typeof cstm.selectorString != "undefined" && typeof cstm.id != "undefined") {
                                var classSplit = cstm.id.split("-");
                                if (!sQuery(cstm.selectorString).is('[class*="sp-custom-' + controlGroupID + '-' + classSplit[3] + '"]')) {
                                    sQuery(cstm.selectorString).addClass('sp-custom-' + controlGroupID + '-' + classSplit[3]);
                                }
                            }
                        });
                    }
                } catch (err) {
                    spApi.errLog(err);
                }
            },
            isBannerManagementActive: function() {
                return typeof spApi.bannerManagementCamps !== 'undefined' && spApi.bannerManagementCamps.length > 0;
            },
            showCustomCamp: function(customCamp) {
                try {
                    var bmCampaignShowed = false;
                    function setStat(campId) {
                        if (!spApi.spCampCheckStatus(campId, 'step1-displayed')) {
                            cData = {
                                key: 'sp-camp-' + campId,
                                obj: {
                                    'step1-displayed': true
                                },
                                campId: campId
                            };
                            spApi.updateCookie(cData, "nolog");
                            var logData = {
                                campId: campId,
                                customSubId: "N/A",
                                logType: 'impression',
                                ref: window.document.referrer
                            };
                            spApi.worker.SetCustomCampLog(logData);
                        }
                        if (spApi.isBannerManagementActive() && typeof BM !== 'undefined') {
                            bmCampaignShowed = true;
                            spApi.triggerInspectorObserver(campId);
                        }
                    }
                    var isDynamicReOrderCampaign = false;
                    var dynamicReOrderCampaignTypes = ['category', 'dynamic-category', 'dynamic-slider'];
                    if (spApi.isControlCamp(customCamp.id)) {
                        var personalizationId = spApi.getPersonalizationId(customCamp.id);
                        var isFirstVar = true;
                        sQuery.each(spApi.personalizationCamps[personalizationId].variations, function(k, pCamp) {
                            if (pCamp.type != "cg" && isFirstVar) {
                                sQuery.each(spApi.customizationCamps, function(i, camp) {
                                    if (camp.id == pCamp.varId) {
                                        isFirstVar = false;
                                        if (Array.isArray(camp.customizationList)) {
                                            isDynamicReOrderCampaign = camp.customizationList.filter(function(customization) {
                                                return dynamicReOrderCampaignTypes.indexOf(customization.type) > -1;
                                            }).length > 0;
                                            if (isDynamicReOrderCampaign) {
                                                customCamp.customizationList = sQuery.extend({}, camp.customizationList);
                                            }
                                        }
                                        spApi.setCustomTrackClass(camp, customCamp.id);
                                    }
                                });
                            }
                        });
                    }
                    spApi.logger('info', 'CustomPlus kampanyası yükleniyor...', customCamp.id);
                    spApi.triggerInspectorObserver(customCamp.id);
                    if (disable_camp == false && customCamp && (customCamp.customizationList != null || (customCamp.customJs != undefined && customCamp.customJs.length > 0) || (customCamp.customCss != undefined && customCamp.customCss.length > 0))) {
                        var customOrder = 0;
                        function elementNotFoundWarning(element) {
                            spApi.logger('warning', 'Element not found: ' + element, customCamp.id);
                        }
                        function checkElement(elem, cstm, callback) {
                            sQuery(elem).elementLoadComplete(callback, null, function() {
                                elementNotFoundWarning(cstm.selectorString);
                            });
                        }
                        function changeCategory(cstm, catIndex) {
                            if (catIndex != customOrder) {
                                if (!spApi.isControlCamp(customCamp.id)) {
                                    spApi.categorySettings().changeCategory(cstm, parseInt(catIndex), parseInt(customOrder), cstm.logClass);
                                }
                                setStat(customCamp['id']);
                            }
                        }
                        function setTrackClass(elem, id) {
                            var classSplit = id.split("-");
                            var tempId = (classSplit[2].indexOf('c') < 0) ? 'c' + classSplit[2] : classSplit[2].replace(/c/g, '');
                            if (!sQuery(elem).is('[class*="sp-custom-' + classSplit[2] + '"]') && !sQuery(elem).is('[class*="sp-custom-' + tempId + '"]')) {
                                sQuery(elem).addClass(id);
                            }
                        }
                        function insArrayMove(list, pos1, pos2) {
                            var i, tmp;
                            pos1 = parseInt(pos1, 10);
                            pos2 = parseInt(pos2, 10);
                            if (pos1 !== pos2 && 0 <= pos1 && pos1 <= list.length && 0 <= pos2 && pos2 <= list.length) {
                                tmp = list[pos1];
                                if (pos1 < pos2) {
                                    for (i = pos1; i < pos2; i++) {
                                        list[i] = list[i + 1];
                                    }
                                } else {
                                    for (i = pos1; i > pos2; i--) {
                                        list[i] = list[i - 1];
                                    }
                                }
                                list[pos2] = tmp;
                            }
                            return list;
                        }
                        if (customCamp.customCss != undefined && customCamp.customCss.length > 0) {
                            spApi.logger('info', 'CSS Eklendi.', customCamp.id);
                            sQuery('style#insider-custom-css-' + customCamp.id).remove();
                            sQuery('<style />', {
                                "id": "insider-custom-css-" + customCamp.id,
                                "type": "text/css",
                                "class": "insider-custom-style",
                                "text": customCamp.customCss
                            }).appendTo("head");
                            setStat(customCamp["id"]);
                        }
                        if (customCamp.customJs != undefined && customCamp.customJs.length > 0) {
                            try {
                                spApi.logger('info', 'Javascript Çalıştırıldı.', customCamp.id);
                                spApi.e(customCamp.customJs);
                            } catch (err) {
                                spApi.errLog(err, {
                                    logType: 'Custom Js Syntax Error',
                                    bugType: 'partner',
                                    extraData: {
                                        campId: customCamp.id,
                                        customJs: customCamp.customJs
                                    }
                                });
                            }
                            if (!(isDynamicReOrderCampaign && spApi.isControlCamp(customCamp.id))) {
                                setStat(customCamp["id"]);
                            }
                        }
                        var storageDataKey = 'insCEvents';
                        var firstStorageDataKey = 'insFirstCEvent';
                        var recentlyStorageDataKey = 'insLastCEvent';
                        var storageData = JSON.parse(localStorage.getItem(storageDataKey)) || [];
                        if (customCamp.customizationList != null) {
                            try {
                                var categoryList = spApi.categorySettings().getCategoryList();
                            } catch (e) {
                                var categoryList = [];
                            }
                            function getCategoryIndex(categoryText) {
                                var categoryIndex = undefined;
                                sQuery.each(categoryList, function(i, category) {
                                    if (sQuery.trim(category.text) == decodeURIComponent(categoryText)) {
                                        categoryIndex = i;
                                    }
                                });
                                return categoryIndex;
                            }
                            sQuery.each(customCamp.customizationList, function(index, cstm) {
                                var elem = sQuery(cstm.selectorString);
                                customOrder = Number(cstm.order) - 1;
                                if (typeof cstm.parentNodeSelector != "undefined" && sQuery(cstm.parentNodeSelector).length > 0) {
                                    if (sQuery(cstm.parentNodeSelector)[0].innerHTML != "") {
                                        cstm.parentNodeHTML = sQuery(cstm.parentNodeSelector)[0].innerHTML;
                                    } else {
                                        cstm.parentNodeHTML = sQuery(cstm.parentNodeSelector)[0].outerHTML;
                                    }
                                } else {
                                    cstm.parentNodeHTML = '';
                                }
                                spApi.cstmClickHandler = function(clickSelector) {}
                                function captureCategoryClicks() {
                                    sQuery(document).on('clickedElement', function(event, element) {
                                        var classesOfElement = sQuery(element).attr("class");
                                        if (classesOfElement.indexOf('ins-category-sorting') < 0) {
                                            return;
                                        }
                                        if (cstm.type == 'dynamic-category') {
                                            var categoryText = encodeURIComponent(sQuery.trim(spApi.categorySettings().getElementCategoryText(element)));
                                            if (cstm.userType === 'all') {
                                                if (typeof (Storage) !== "undefined") {
                                                    if (cstm.categoryOption == 'mostClicked') {
                                                        var currentStorageData = JSON.parse(localStorage.getItem(storageDataKey)) || [];
                                                        var storageObject = {
                                                            clickDate: new Date().getTime(),
                                                            cat: btoa(categoryText)
                                                        };
                                                        currentStorageData.push(storageObject);
                                                        localStorage.setItem(storageDataKey, JSON.stringify(currentStorageData));
                                                    } else if (cstm.categoryOption == 'recently') {
                                                        localStorage.setItem(recentlyStorageDataKey, btoa(categoryText));
                                                    } else if (cstm.categoryOption == 'first') {
                                                        if (spApi.sessionStorageGet(firstStorageDataKey) == null) {
                                                            spApi.sessionStorageSet(firstStorageDataKey, btoa(categoryText));
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    });
                                }
                                spApi.categoryClickHandler = function(selector) {
                                    if (!sQuery(selector).hasClass('ins-category-sorting')) {
                                        sQuery(selector).addClass('ins-category-sorting');
                                    }
                                    if (spApi._categoryClickHandlerDefined) {
                                        return;
                                    }
                                    spApi._categoryClickHandlerDefined = true;
                                    captureCategoryClicks();
                                }
                                ;
                                if (cstm.type == "html") {
                                    var customElement;
                                    if (typeof cstm.selectorString != "undefined") {
                                        customElement = elem;
                                    }
                                    var selectedElement = cstm.selectedElement;
                                    if (customElement != undefined && customElement.length > 0) {
                                        spApi.logger('info', 'HTML değiştiriliyor', customCamp.id);
                                        try {
                                            switch (cstm.positioningType) {
                                            case "replace":
                                                if (customElement[0]["tagName"] == "IMG" || customElement[0]["tagName"] == "INPUT") {
                                                    var cElem = sQuery(cstm.html);
                                                    if (cElem.length < 1) {
                                                        cstm.html = '<span>' + cstm.html + '</span>';
                                                        var cElem = sQuery(cstm.html);
                                                    }
                                                    setTrackClass(cElem, cstm.id);
                                                    customElement[0].outerHTML = cElem[0].outerHTML;
                                                } else {
                                                    customElement.html("" + cstm.html);
                                                    setTrackClass(customElement, cstm.id);
                                                }
                                                break;
                                            case "positioningInside":
                                                customElement.append("" + cstm.html);
                                                break;
                                            case "positioningAround":
                                                customElement.after("" + cstm.html);
                                                break;
                                            }
                                            if (cstm.onclickJS.length > 0) {
                                                spApi.e(cstm.onclickJS);
                                            }
                                            setStat(customCamp["id"]);
                                        } catch (err) {
                                            spApi.errLog(err);
                                        }
                                    } else {
                                        spApi.logger('warning', 'HTML değiştirmede element bulunamadı.', customCamp.id);
                                    }
                                } else if (cstm.type == "slide") {
                                    spApi.logger('info', 'Slider değiştirme uygulanıyor.', customCamp.id);
                                    var sliderInterval = setInterval(function() {
                                        if (spApi.sliderSettings().getImageList().length > 0) {
                                            clearInterval(sliderInterval);
                                            cstm.originalSliderList = spApi.sliderSettings().getImageList();
                                            var changingList = spApi.sliderSettings().getImageList();
                                            sQuery.each(cstm.slideList, function(index, slide) {
                                                if (slide.type == 'move') {
                                                    changingList = insArrayMove(changingList, slide.oldIndex, slide.newIndex);
                                                } else if (slide.type == 'change') {
                                                    changingList[slide.order].src = slide.src;
                                                    changingList[slide.order].href = slide.href;
                                                }
                                            });
                                            sQuery.each(changingList, function(index, slide) {
                                                if (index < spApi.sliderSettings().getImageList().length) {
                                                    spApi.sliderSettings().changeSlider(slide, index);
                                                }
                                            });
                                        }
                                        setStat(customCamp["id"]);
                                    }, 100);
                                    sQuery(window).load(function() {
                                        setTimeout(function() {
                                            clearInterval(sliderInterval);
                                        }, 1000);
                                    });
                                } else if (cstm.type == 'random') {
                                    var sliderList = spApi.sliderSettings().getImageList();
                                    if (cstm.option == 'all') {
                                        var shuffleSliders = [];
                                        sQuery.each(sliderList, function(i, v) {
                                            shuffleSliders.push(i + 1);
                                        });
                                        setStat(customCamp["id"]);
                                    } else if (cstm.option == 'group') {
                                        var shuffleSliders = cstm.group.replace(/ /g, '').split(",");
                                        setStat(customCamp["id"]);
                                    }
                                    spApi.logger('info', 'Random slider uygulanıyor.', customCamp.id);
                                    var backupSliders = shuffleSliders.slice(0);
                                    sQuery.each(shuffleSliders, function(k, val) {
                                        var copySliders = backupSliders.slice(0);
                                        var copyNumberIndex = copySliders.indexOf(val);
                                        if (copyNumberIndex > -1) {
                                            copySliders.splice(copyNumberIndex, 1);
                                        }
                                        var min = 0;
                                        var max = copySliders.length;
                                        var randomNum = Math.floor(Math.random() * (max - min)) + min;
                                        var slideIndex = val - 1;
                                        var randonIndex = copySliders[randomNum] - 1;
                                        var numIndex = backupSliders.indexOf(copySliders[randomNum]);
                                        if (numIndex > -1) {
                                            backupSliders.splice(numIndex, 1);
                                        }
                                        copySliders.splice(randomNum, 1);
                                        if (sliderList[slideIndex] != undefined) {
                                            spApi.sliderSettings().changeSlider(sliderList[slideIndex], randonIndex);
                                        }
                                    });
                                } else if (cstm.type == 'category') {
                                    if (spApi.categorySettings().getCategoryList().length > 0) {
                                        spApi.logger('info', 'Category değiştirme uygulanıyor.', customCamp.id);
                                        if (!spApi.isControlCamp(customCamp.id)) {
                                            sQuery.each(cstm.categoryList, function(categoryIndex, category) {
                                                if (category.type === 'move') {
                                                    customCamp.customizationList[index].oldIndex = category.oldIndex;
                                                    customCamp.customizationList[index].newIndex = category.newIndex;
                                                    spApi.categorySettings().changeCategory(category, parseInt(category.oldIndex), parseInt(category.newIndex), category.logClass);
                                                }
                                            });
                                        }
                                        setStat(customCamp['id']);
                                    }
                                } else if (cstm.type == 'dynamic-category') {
                                    if (spApi.categorySettings().getCategoryList().length > 0) {
                                        spApi.logger('info', 'Dynamic Category değiştirme uygulanıyor.', customCamp.id);
                                        if (cstm.userType === 'all') {
                                            if (cstm.categoryOption === 'mostClicked') {
                                                var countData = {};
                                                if (storageData.length > 0) {
                                                    sQuery.each(storageData, function(key, value) {
                                                        if (typeof countData[value.cat] === 'undefined') {
                                                            countData[value.cat] = 0;
                                                        }
                                                        countData[value.cat]++;
                                                    });
                                                    var sortedData = [];
                                                    for (var cat in countData) {
                                                        sortedData.push([atob(cat), countData[cat]]);
                                                    }
                                                    sortedData.sort(function(a, b) {
                                                        return b[1] - a[1]
                                                    });
                                                    var catText = sortedData[0][0];
                                                    var catIndex = getCategoryIndex(catText);
                                                    customCamp.customizationList[index].oldIndex = catIndex;
                                                    customCamp.customizationList[index].newIndex = customOrder;
                                                    changeCategory(cstm, catIndex);
                                                }
                                            } else if (cstm.categoryOption === 'recently') {
                                                if (localStorage.getItem(recentlyStorageDataKey) != null) {
                                                    var catText = atob(localStorage.getItem(recentlyStorageDataKey));
                                                    var catIndex = getCategoryIndex(catText);
                                                    customCamp.customizationList[index].oldIndex = catIndex;
                                                    customCamp.customizationList[index].newIndex = customOrder;
                                                    changeCategory(cstm, catIndex);
                                                }
                                            } else if (cstm.categoryOption === 'first') {
                                                if (spApi.sessionStorageGet(firstStorageDataKey) != null) {
                                                    var catText = atob(spApi.sessionStorageGet(firstStorageDataKey));
                                                    var catIndex = getCategoryIndex(catText);
                                                    customCamp.customizationList[index].oldIndex = catIndex;
                                                    customCamp.customizationList[index].newIndex = customOrder;
                                                    changeCategory(cstm, catIndex);
                                                }
                                            }
                                            try {
                                                spApi.categorySettings().triggerClick();
                                            } catch (e) {}
                                        }
                                    }
                                } else if (cstm.type == 'css') {
                                    if (spApi.objKeys(cstm.settings)) {
                                        checkElement(elem, cstm, function(elem) {
                                            spApi.logger('info', 'CSS uygulanıyor. Element: ' + cstm.selectorString, customCamp.id);
                                            sQuery.each(cstm.settings, function(style, vals) {
                                                elem.css(style, vals.value);
                                            });
                                            setTrackClass(cstm.selectorString, cstm.id);
                                            setStat(customCamp["id"]);
                                        });
                                    }
                                } else if (cstm.type == 'track') {
                                    checkElement(elem, cstm, function(elem) {
                                        if (!elem.is('[class*="sp-custom-' + customCamp.id + '"]')) {
                                            spApi.logger('info', 'Click log takibi uygulanıyor. Element: ' + cstm.selectorString, customCamp.id);
                                            setTrackClass(cstm.selectorString, cstm.id);
                                            setStat(customCamp["id"]);
                                        }
                                    });
                                } else if (cstm.type == 'remove') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'Click log takibi uygulanıyor. Element: ' + cstm.selectorString, customCamp.id);
                                        elem.hide();
                                        setStat(customCamp["id"]);
                                    });
                                } else if (cstm.type === 'rearrangeElement') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'Element pozisyonu değiştiriliyor. Element: ' + cstm.selectorString, customCamp.id);
                                        var element = sQuery(cstm.oldPosition.elementSelector);
                                        var newPositionHelper = sQuery(cstm.newPosition.helperSelector);
                                        switch (cstm.newPosition.insertType) {
                                        case 'prepend':
                                            newPositionHelper.prepend(element);
                                            break;
                                        case 'after':
                                            newPositionHelper.after(element);
                                            break;
                                        }
                                        setTrackClass(cstm.newPosition.elementSelector, cstm.id);
                                        setStat(customCamp.id);
                                    });
                                } else if (cstm.type === 'moveElement') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'Element pozisyonu değiştiriliyor. Element: ' + cstm.selectorString, customCamp.id);
                                        elem.css(cstm.newPosition);
                                        setTrackClass(cstm.selectorString, cstm.id);
                                        setStat(customCamp.id);
                                    });
                                } else if (cstm.type === 'changedHTML' || cstm.type === 'changedText') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'HTML değiştirme uygulanıyor. Element: ' + cstm.selectorString, customCamp.id);
                                        if (elem[0].innerHTML != "") {
                                            elem.html(cstm.html);
                                        } else {
                                            elem[0].outerHTML = cstm.html;
                                        }
                                        setTrackClass(cstm.selectorString, cstm.id);
                                        setStat(customCamp["id"]);
                                    });
                                } else if (cstm.type == 'changedImage') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'Resim değiştirme uygulanıyor. Element: ' + cstm.selectorString, customCamp.id);
                                        cstm.oldSource = elem.attr('src');
                                        elem.attr('src', cstm.src);
                                        setTrackClass(cstm.selectorString, cstm.id);
                                        setStat(customCamp["id"]);
                                    });
                                } else if (cstm.type == 'insertedHTML') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'HTML ekleniyor. Element: ' + cstm.selectorString, customCamp.id);
                                        var tempElem = sQuery(cstm.html);
                                        if (tempElem.length > 0 || tempElem.children().length > 0) {
                                            var tempHTML = sQuery(cstm.html).addClass(cstm.id);
                                        } else {
                                            var tempHTML = '<span class="' + cstm.id + '">' + cstm.html + '</span>';
                                        }
                                        if (cstm.insertOption == 'elementAfter') {
                                            elem.after(tempHTML);
                                        } else if (cstm.insertOption == 'elementBefore') {
                                            elem.before(tempHTML);
                                        } else if (cstm.insertOption == 'after') {
                                            if (elem[0].tagName == 'IMG' || elem[0].tagName == 'INPUT') {
                                                elem.after(tempHTML);
                                            } else {
                                                elem.append(tempHTML);
                                            }
                                        } else if (cstm.insertOption == 'before') {
                                            if (elem[0].tagName == 'IMG' || elem[0].tagName == 'INPUT') {
                                                elem.before(tempHTML);
                                            } else {
                                                elem.prepend(tempHTML);
                                            }
                                        }
                                        setStat(customCamp["id"]);
                                    });
                                } else if (cstm.type == 'insertImage') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'Resim ekleniyor. Element: ' + cstm.selectorString, customCamp.id);
                                        var image = document.createElement('img');
                                        sQuery(image).attr('src', cstm.src).addClass(cstm.id);
                                        if (cstm.insertOption == 'elementAfter') {
                                            elem.after(image);
                                        } else if (cstm.insertOption == 'elementBefore') {
                                            elem.before(image);
                                        } else if (cstm.insertOption == 'after') {
                                            if (elem[0].tagName == 'IMG' || elem[0].tagName == 'INPUT') {
                                                elem.after(image);
                                            } else {
                                                elem.append(image);
                                            }
                                        } else if (cstm.insertOption == 'before') {
                                            if (elem[0].tagName == 'IMG' || elem[0].tagName == 'INPUT') {
                                                elem.before(image);
                                            } else {
                                                elem.prepend(image);
                                            }
                                        }
                                        setStat(customCamp["id"]);
                                    });
                                } else if (cstm.type == 'editHyperLink') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'HyperLink değiştirildi. Element: ' + cstm.selectorString, customCamp.id);
                                        if (elem[0].tagName == 'A') {
                                            elem.attr('href', cstm.linkUrl);
                                            if (cstm.newTab == 1) {
                                                elem.attr('target', '_blank');
                                            } else {
                                                elem.attr('target', '');
                                            }
                                            setTrackClass(cstm.selectorString, cstm.id);
                                        } else {
                                            elem.closest('a').attr('href', cstm.linkUrl);
                                            if (cstm.newTab == 1) {
                                                elem.closest('a').attr('target', '_blank');
                                            } else {
                                                elem.closest('a').attr('target', '');
                                            }
                                            setTrackClass(cstm.selectorString, cstm.id);
                                        }
                                        elem.html(cstm.linkText);
                                        setStat(customCamp["id"]);
                                    });
                                } else if (cstm.type == 'makeHyperLink') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'HyperLink ekleniyor. Element: ' + cstm.selectorString, customCamp.id);
                                        var newTab = '';
                                        if (cstm.newTab == 1) {
                                            newTab = '_blank';
                                        }
                                        var newHyperLink = document.createElement('a');
                                        sQuery(newHyperLink).attr('href', cstm.linkUrl).attr('target', newTab).addClass(cstm.id).text(cstm.linkText);
                                        if (elem[0].tagName == 'IMG') {
                                            elem.wrap(newHyperLink);
                                        } else {
                                            elem.html('').append(newHyperLink);
                                        }
                                        setStat(customCamp["id"]);
                                    });
                                } else if (cstm.type == 'elementAttr') {
                                    checkElement(elem, cstm, function(elem) {
                                        spApi.logger('info', 'Element özelliği değiştiriliyor. Element: ' + cstm.selectorString, customCamp.id);
                                        sQuery(cstm.attrs).each(function(i, v) {
                                            if (v.type == 'changed' || v.type == 'added') {
                                                elem.attr(v.key, v.val);
                                            } else if (v.type == 'deleted') {
                                                elem.removeAttr(v.key);
                                            }
                                        });
                                        setTrackClass(cstm.selectorString, cstm.id);
                                        setStat(customCamp["id"]);
                                    });
                                }
                            });
                            spApi.viewedCustomCamps.push(customCamp);
                        }
                        if (spApi.isBannerManagementActive() && typeof BM !== 'undefined' && bmCampaignShowed) {
                            BM.setStorageData();
                        }
                    }
                    spApi.sendGoalEngagementLog(customCamp.id);
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'showCustomCamp',
                        bugType: 'product'
                    });
                }
            },
            clearCustomCamps: function() {
                try {
                    sQuery('.insider-custom-style').remove();
                    if (!(spApi.viewedCustomCamps.length > 0))
                        return false;
                    spApi.showedBMCampOfPage = [];
                    sQuery.each(spApi.viewedCustomCamps, function(key, customCamp) {
                        if (customCamp && customCamp.customizationList != null) {
                            var listLength = customCamp.customizationList.length || Object.keys(customCamp.customizationList).length;
                            for (var i = listLength - 1; i >= 0; i--) {
                                customization = customCamp.customizationList[i];
                                if (customization.type == "html") {
                                    if (customization["positioningType"] == "positioningFix" || customization["positioningType"] == "positioningAround" || customization["positioningType"] == "positioningInside") {
                                        sQuery("." + customization["id"]).remove();
                                    } else {
                                        if (sQuery(customization["selectorString"]).length > 0) {
                                            sQuery(customization["selectorString"]).html(customization["selectedOriginalHTML"]);
                                        }
                                    }
                                } else if (customization.type === 'slide' || customization.type === 'dynamic-slider') {
                                    sQuery.each(customization.originalSliderList, function(index, slide) {
                                        if (index < spApi.sliderSettings().getImageList().length) {
                                            spApi.sliderSettings().changeSlider(slide, index);
                                        }
                                    });
                                } else if (customization.type == 'category') {
                                    for (var i = customization.categoryList.length - 1; i >= 0; i--) {
                                        var slide = customization.categoryList[i];
                                        if (slide.type === 'move') {
                                            spApi.categorySettings().changeCategory(slide, parseInt(slide.newIndex), parseInt(slide.oldIndex), slide.logClass);
                                        }
                                    }
                                } else if (customization.type == 'dynamic-category' && typeof customization.newIndex !== 'undefined' && typeof customization.oldIndex !== 'undefined') {
                                    spApi.categorySettings().changeCategory(customization, parseInt(customization.newIndex), parseInt(customization.oldIndex), customization.logClass);
                                    delete customization.newIndex;
                                    delete customization.oldIndex;
                                } else if (customization.type == 'css') {
                                    if (spApi.objKeys(customization.settings)) {
                                        sQuery.each(customization.settings, function(style, vals) {
                                            if (sQuery(customization.selectorString).length > 0) {
                                                sQuery(customization.selectorString).css(style, vals.defaultVal);
                                            }
                                        });
                                    }
                                } else if (customization.type == "remove") {
                                    if (sQuery(customization.selectorString).length > 0) {
                                        sQuery(customization.selectorString).show();
                                    }
                                } else if (customization.type == 'changedText') {
                                    if (sQuery(customization.parentNodeSelector).length > 0) {
                                        sQuery(customization.parentNodeSelector).html(customization.parentNodeHTML);
                                    }
                                } else if (customization.type == 'changedImage') {
                                    if (sQuery(customization.selectorString).length > 0) {
                                        sQuery(customization.selectorString).attr('src', customization.oldSource);
                                    }
                                } else if (customization.type == 'rearrangeElement') {
                                    var element = sQuery(customization.newPosition.elementSelector);
                                    if (element.length > 0) {
                                        switch (customization.oldPosition.insertType) {
                                        case 'prepend':
                                            sQuery(customization.oldPosition.helperSelector).prepend(element);
                                            break;
                                        case 'insertAfter':
                                            element.insertAfter(sQuery(customization.oldPosition.helperSelector));
                                            break;
                                        }
                                    }
                                } else if (customization.type === 'moveElement') {
                                    var element = sQuery(customization.selectorString);
                                    if (element.length > 0) {
                                        element.css(customization.oldPosition);
                                    }
                                } else if (customization.type == 'insertedHTML') {
                                    if (sQuery(customization.selectorString).length > 0) {
                                        sQuery('.' + customization.id).remove();
                                    }
                                } else if (customization.type == 'insertImage') {
                                    if (sQuery(customization.parentNodeSelector).length > 0) {
                                        sQuery('.' + customization.id).remove();
                                    }
                                } else if (customization.type == 'editHyperLink') {
                                    if (sQuery(customization.selectorString).length > 0) {
                                        if (sQuery(customization.selectorString)[0].tagName == 'A') {
                                            sQuery(customization.selectorString).attr('href', customization.oldUrl);
                                            sQuery(customization.selectorString).attr('target', customization.oldNewTab);
                                        } else {
                                            sQuery(customization.selectorString).closest('a').attr('href', customization.oldUrl);
                                            sQuery(customization.selectorString).closest('a').attr('target', customization.oldNewTab);
                                        }
                                        sQuery(customization.selectorString).html(customization.oldText);
                                    }
                                } else if (customization.type == 'makeHyperLink') {
                                    if (typeof customization.parentNodeSelector != "undefined" && sQuery(customization.parentNodeSelector).length > 0) {
                                        sQuery('.' + customization.id).remove();
                                    } else if (sQuery(customization.selectorString).length > 0) {
                                        sQuery(customization.selectorString).html(customization.oldText);
                                    }
                                }
                            }
                            ;
                        }
                    });
                } catch (err) {
                    spApi.errLog(err);
                }
                sQuery.each(spApi.customizationCamps, function(key, customCamp) {
                    spApi.customizationCamps[key].dontCheck = false;
                });
            },
            initCustomCamps: function(docReady) {
                try {
                    if (!(spApi.customizationCamps.length > 0))
                        return false;
                    if (docReady === false) {
                        sQuery(document).on('clickedElement', function(event, element) {
                            var classArray = sQuery(element).attr("class").split(" ");
                            var spCustomSelector = sQuery.grep(classArray, function(value) {
                                return value.indexOf('sp-custom-') > -1;
                            });
                            sQuery.each(spCustomSelector, function(i, className) {
                                classSplit = className.split('-');
                                if (typeof classSplit[2] != "undefined") {
                                    var exactId = parseInt(classSplit[2].replace('c', ''));
                                    if (exactId > 0) {
                                        var other = '';
                                        if (sQuery(element).data('sliderHref') !== undefined) {
                                            other = sQuery(element).data('sliderHref');
                                        }
                                        var logData = {
                                            campId: classSplit[2],
                                            customSubId: classSplit[3],
                                            logType: 'joined',
                                            ref: window.document.referrer,
                                            other: other
                                        };
                                        spApi.worker.SetCustomCampLog(logData);
                                    }
                                }
                            });
                        });
                        var docReadyResult = sQuery.grep(Object.keys(spApi.rules), function(i) {
                            return spApi.rules[i].docReadyOption == '1';
                        });
                        if (docReadyResult.length == 0) {
                            spApi.removePageOpacity();
                            return false;
                        }
                    }
                    sQuery.each(spApi.customizationCamps, function(key, customCamp) {
                        var builderID = spApi.getBuilderIdFromPersonalizations(customCamp.id);
                        var isCampaignNotInActiveList = spApi.activeBannerManagementCamps.filter(function(campaign) {
                            return campaign.builderID == builderID;
                        }).length === 0;
                        if (spApi.isCurrentCampBM(builderID) && isCampaignNotInActiveList) {
                            customVariation = spApi.getCampOfThePage([customCamp]);
                            if (customVariation || (customCamp.isTest == 1 && spApi.checkPersonalizationTestByVariation(builderID, customCamp.id))) {
                                spApi.activeBannerManagementCamps.push(spApi.getBMPersonalization(builderID));
                            }
                        }
                    });
                    sQuery.each(spApi.customizationCamps, function(key, customCamp) {
                        if (docReady === false) {
                            if (customCamp.runDocReady === '1') {
                                var tempCamp = [];
                                tempCamp.push(customCamp);
                                customCamp = spApi.getCampOfThePage(tempCamp);
                                if (customCamp) {
                                    spApi.customizationCamps[key].dontCheck = true;
                                    var campReady = false;
                                    if (customCamp.customizationList == null) {
                                        spApi.showCustomCamp(customCamp);
                                    } else {
                                        var selectorCount = 0;
                                        var selectorCountControl = [];
                                        sQuery.each(customCamp.customizationList, function(k, customization) {
                                            if (typeof customization.selectorString != "undefined") {
                                                selectorCount++;
                                            }
                                        });
                                        if (selectorCount == 0) {
                                            spApi.showCustomCamp(customCamp);
                                        } else {
                                            var timeoutLoop = function() {
                                                setTimeout(function() {
                                                    sQuery.each(customCamp.customizationList, function(k, customization) {
                                                        if (typeof customization.selectorString != "undefined" && selectorCountControl[k] == undefined && sQuery(customization.selectorString).length > 0) {
                                                            selectorCountControl[k] = customization.selectorString;
                                                        }
                                                    });
                                                    if (selectorCount == selectorCountControl.length) {
                                                        spApi.showCustomCamp(customCamp);
                                                        campReady = true;
                                                        spApi.removePageOpacity();
                                                    } else if (spApi.inited === true && campReady === false) {
                                                        spApi.showCustomCamp(customCamp);
                                                        campReady = true;
                                                        spApi.removePageOpacity();
                                                    } else if (spApi.inited === false) {
                                                        timeoutLoop();
                                                    }
                                                }, 10);
                                            };
                                            timeoutLoop();
                                        }
                                    }
                                }
                            }
                        } else {
                            if (typeof customCamp.dontCheck === "undefined" || customCamp.dontCheck === false) {
                                var tempCamp = [];
                                tempCamp.push(customCamp);
                                customCamp = spApi.getCampOfThePage(tempCamp);
                                if (customCamp) {
                                    spApi.showCustomCamp(customCamp);
                                }
                            }
                        }
                    });
                } catch (err) {
                    spApi.errLog(err);
                }
            },
            setCampSalesSesId: function() {
                if (spApi.salesSesId == false) {
                    spApi.errLog({
                        name: 'Error',
                        message: 'salesSessionIdNotExists'
                    }, {
                        logType: 'salesSesId',
                        bugType: 'product',
                        extraData: {
                            salesSesId: spApi.salesSesId
                        }
                    });
                    return;
                }
                var currentCookie = '';
                try {
                    var pairs = spApi.allStorageData();
                    sQuery.each(pairs, function(i, obj) {
                        var key = obj.key;
                        var value = obj.value;
                        if (key.indexOf("sp-camp-") != -1) {
                            currentCookie = obj;
                            if (typeof value !== "undefined") {
                                var campId = (key.replace('sp-camp-', '')).replace(/^\s+|\s+$/gm, '');
                                var objData = JSON.parse(unescape(value));
                                var sesExpireTime = 30 * 60;
                                if (value.indexOf("salesSesId") == -1) {
                                    objData.salesSesId = spApi.Base64.decode(spApi.salesSesId);
                                    objData.salesSesTime = spApi.getTime();
                                    var data = {
                                        key: 'sp-camp-' + campId,
                                        obj: objData,
                                        campId: campId
                                    };
                                    spApi.updateCookie(data, 'nolog');
                                } else if ((parseInt(objData.salesSesTime) + sesExpireTime) >= spApi.getTime() && objData.salesSesId == spApi.Base64.decode(spApi.salesSesId)) {
                                    objData.salesSesTime = spApi.getTime();
                                    var data = {
                                        key: 'sp-camp-' + campId,
                                        obj: objData,
                                        campId: campId
                                    };
                                    spApi.updateCookie(data, 'nolog');
                                }
                            }
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setCampSalesSesId',
                        bugType: 'product',
                        extraData: {
                            Cookie: currentCookie,
                            salesSesId: spApi.salesSesId
                        }
                    });
                }
            },
            setPushJoinLog: function() {
                try {
                    var parameter = 'webPushId';
                    var isJourneyPush = spApi.hasParameter('journeyId');
                    var webPushRedirectorId = sQuery.cookie('webPushRedirectorId');
                    var encodedId = null;
                    var primaryAction;
                    var secondaryAction;
                    if (spApi.hasParameter(parameter)) {
                        encodedId = spApi.getParameter(parameter);
                        primaryAction = spApi.hasParameter('insider-primary-action');
                        secondaryAction = spApi.hasParameter('insider-secondary-action');
                    } else if (webPushRedirectorId != null) {
                        var urlRedirectionId = webPushRedirectorId.split('|');
                        encodedId = urlRedirectionId[0];
                        primaryAction = urlRedirectionId[1] === 'primary';
                        secondaryAction = urlRedirectionId[1] === 'secondary';
                    }
                    if (encodedId != null) {
                        var campId = spApi.Base64.decode(decodeURIComponent(encodedId));
                        if (campId != null && !isNaN(campId)) {
                            var insWp = spApi.storageData('ins-wp-' + campId);
                            if (insWp == null || isJourneyPush) {
                                spApi.updateCookie({
                                    key: 'ins-wp-' + campId,
                                    obj: {
                                        joDa: spApi.getTime(),
                                        sId: spApi.getGAStyleSesId()
                                    },
                                    campId: campId
                                }, 'nolog');
                                spApi.worker.asyncPM('delete-webPushRedirectorId', {}, function() {
                                    sQuery.cookie('webPushRedirectorId', null, {
                                        expires: -1,
                                        path: '/',
                                        domain: cookieDomain
                                    });
                                });
                                spApi.worker.send('do-logging', {
                                    type: 'webPush',
                                    campId: campId,
                                    logType: 'camp-join',
                                    browser: spApi.getBrowser(),
                                    isMobile: spApi.isMobileBrowser(),
                                    referer: spApi.urlencode(window.location.href),
                                    primaryAction: primaryAction,
                                    secondaryAction: secondaryAction
                                });
                            } else {
                                if (typeof spApi.webPushes[campId] === 'undefined') {
                                    return false;
                                }
                                insWp = JSON.parse(insWp);
                                var webPush = spApi.webPushes[campId];
                                var dynamicPushTitle = spApi.parseDynamicPushContent(webPush.title);
                                var dynamicPushDescription = spApi.parseDynamicPushContent(webPush.description);
                                var dynamicContentExist = dynamicPushTitle.customAttributeExist || dynamicPushDescription.customAttributeExist;
                                if (typeof insWp.joDa === "undefined") {
                                    insWp.joDa = spApi.getTime();
                                    insWp.sId = spApi.getGAStyleSesId();
                                    spApi.updateCookie({
                                        key: 'ins-wp-' + campId,
                                        obj: insWp,
                                        campId: campId
                                    }, 'nolog');
                                    spApi.worker.send('do-logging', {
                                        type: 'webPush',
                                        campId: campId,
                                        logType: 'camp-join',
                                        browser: spApi.getBrowser(),
                                        isMobile: spApi.isMobileBrowser(),
                                        referer: spApi.urlencode(window.location.href),
                                        dynamicContentExist: dynamicContentExist,
                                        primaryAction: spApi.hasParameter('insider-primary-action'),
                                        secondaryAction: spApi.hasParameter('insider-secondary-action')
                                    });
                                }
                            }
                        }
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setPushJoinLog',
                        bugType: 'product'
                    });
                }
            },
            setJourneyEmailJoinStorage: function() {
                try {
                    if (!spApi.hasParameter('journeyId')) {
                        return;
                    }
                    var decodedUrl = decodeURIComponent(location.href);
                    var getParameterValue = function(key) {
                        return spApi.getParameterFromUrl(decodedUrl, key)
                    }
                    var eventCode = getParameterValue('event[code]');
                    var eventId = getParameterValue('event[id]');
                    if (eventCode === 'EM') {
                        spApi.storageData('ins-journey-email-join-' + eventId, {
                            userId: spApi.storageData('spUID'),
                            journeyId: Number(getParameterValue('journeyId')),
                            campaignId: Number(eventId),
                            eventCode: eventCode + ':' + eventId,
                            currentState: getParameterValue('currentState')
                        }, {
                            expires: 14
                        });
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setJourneyEmailJoinStorage',
                        bugType: 'product'
                    });
                }
            },
            sendJourneyEmailJoinLog: function() {
                try {
                    var SALE_LOG_TYPE = 5;
                    var logStash = [];
                    spApi.allStorageData().forEach(function(storageData) {
                        if (storageData.key.indexOf('ins-journey-email-join') > -1) {
                            logStash.push(sQuery.extend({
                                partnerName: partnerName,
                                actionCode: SALE_LOG_TYPE,
                                date: (function() {
                                    var date = new Date();
                                    return date.toISOString().slice(0, 10) + ' ' + date.toLocaleTimeString([], {
                                        hour12: false
                                    });
                                }())
                            }, JSON.parse(storageData.value)));
                        }
                    });
                    if (logStash.length > 0) {
                        sQuery.ajax({
                            url: 'https://collector.api.useinsider.com/store',
                            type: 'POST',
                            data: JSON.stringify(logStash)
                        });
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'sendJourneyEmailJoinLog',
                        bugType: 'product'
                    });
                }
            },
            sendJourneySalesLog: function() {
                try {
                    spApi.allStorageData().forEach(function(storageData) {
                        if (storageData.key.indexOf('ins-journey-camp-') > -1) {
                            var journeyData = JSON.parse(storageData.value);
                            spApi.worker.send('do-logging', {
                                type: 'journeyLog',
                                journeyId: journeyData.journeyId,
                                campaignId: journeyData.campaignId,
                                logType: 'variation-sales',
                                amount: sQuery.cookie('total-cart-amount') || 0
                            });
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'sendJourneySalesLog',
                        bugType: 'product'
                    });
                }
            },
            setPushSalesLog: function(orderID) {
                try {
                    var pairs = spApi.allStorageData();
                    sQuery.each(pairs, function(i, obj) {
                        var key = sQuery.trim(obj.key);
                        if (key.indexOf("ins-wp-") != -1) {
                            var wpCookie = JSON.parse(unescape(obj.value));
                            if (typeof wpCookie !== 'undefined' && wpCookie != null && wpCookie.sId == spApi.getGAStyleSesId()) {
                                var campId = key.split("-")[2];
                                spApi.worker.send('do-logging', {
                                    type: 'webPush',
                                    campId: campId,
                                    logType: 'sales-from-click',
                                    referer: spApi.urlencode(window.location.href),
                                    otherProperties: {
                                        sessionId: spApi.getGAStyleSesId(),
                                        orderId: orderID,
                                        paidProducts: (spApi.storageData('paid-products') != null) ? spApi.storageData('paid-products') : '',
                                        originalPrice: spApi.getExchangeRate(spApi.preferredCurrency, sQuery.cookie('current-currency'), sQuery.cookie('total-cart-amount'), 'price'),
                                        originalCurrency: (sQuery.cookie('current-currency') != null) ? sQuery.cookie('current-currency') : '',
                                        convertedCurrency: spApi.preferredCurrency,
                                        convertedPrice: (sQuery.cookie('total-cart-amount') != null) ? sQuery.cookie('total-cart-amount') : ''
                                    }
                                });
                            }
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setPushSalesLog',
                        bugType: 'product',
                        extraData: {
                            orderID: orderID
                        }
                    });
                }
            },
            removePageOpacity: function() {
                if (typeof window['insPageShow'] === 'function') {
                    window['insPageShow']();
                }
            },
            getDataFromDataLayer: function(property, additionalCondition, fallback) {
                var fb = typeof fallback !== 'undefined' ? fallback : '';
                var checkCondition = (typeof additionalCondition !== 'undefined' && typeof additionalCondition === 'function') ? additionalCondition : function() {
                    return true;
                }
                ;
                return ((typeof dataLayer !== 'undefined' ? dataLayer : []).filter(function(index) {
                    return typeof index[property] !== 'undefined' && checkCondition(index);
                })[0] || {})[property] || fb;
            },
            getDataFromIO: function(type, property, fallback) {
                var fb = typeof fallback !== 'undefined' ? fallback : '';
                return (typeof insider_object !== 'undefined' && typeof insider_object[type] !== 'undefined' && typeof insider_object[type][property] !== 'undefined') ? insider_object[type][property] : fb;
            },
            generateProductId: function(parameter) {
                var id = (parameter || location.href).toString().replace(/(<=&|\?)utm_.*/g, '').replace(location.origin, '');
                return 'ins' + spApi.Base64.encode(id).substring(0, 5) + spApi.hashCode(id).toString().substring(0, 5);
            },
            pluralForm: {
                get: function(lang, count, form1, form2, form3, form4) {
                    if (typeof spApi.pluralForm[lang] === 'undefined') {
                        return form1;
                    }
                    return spApi.pluralForm[lang](count, form1, form2, form3, form4);
                },
                en_US: function(count, form1, form2) {
                    return Math.abs(count) == 1 ? form1 : form2;
                },
            },
            translations: {
                "en_US": {
                    "date": {
                        "form1": {
                            "day": "Day",
                            "hour": "Hour",
                            "minute": "Minute",
                            "second": "Second"
                        },
                        "form2": {
                            "day": "Days",
                            "hour": "Hours",
                            "minute": "Minutes",
                            "second": "Seconds"
                        }
                    }
                },
                "tr_TR": {
                    "date": {
                        "form1": {
                            "day": "G\u00fcn",
                            "hour": "Saat",
                            "minute": "Dakika",
                            "second": "Saniye"
                        }
                    }
                }
            },
            isSiteUrlCheckFailed: function() {
                if (typeof spApi.isSiteUrlFailedLogSent !== 'undefined') {
                    return true;
                }
                if (partnerName === 'loadactionbuilder' && spApi.isOnPanel()) {
                    return false;
                }
                if (window.location.href.indexOf(partner_site.host) < 0) {
                    spApi.logger('warning', 'Check your site information!');
                    disable_camp = true;
                    spApi.isSiteUrlFailedLogSent = true;
                    spApi.errLog({
                        name: 'siteUrlCheckFailed'
                    }, {
                        logType: 'siteUrlCheckFailed',
                        bugType: 'partner',
                        extraData: {
                            partnerSiteHost: partner_site.host,
                            scriptUrl: spApi.apiUrl
                        }
                    });
                    return true;
                }
                return false;
            },
            inited: false,
            init: function(noLog) {
                try {
                    if (!panelEdit) {
                        spApi.limitSystemRulesCall();
                    }
                    if (spApi.checkOptOut()) {
                        spApi.logger('info', 'Opt Out');
                        return false;
                    }
                    spApi.logger('info', 'Insider API initializing..');
                    if (!spApi.isBrowserSupportEnabled()) {
                        return false;
                    }
                    if (!spApi.isLocalStorageSupport()) {
                        spApi.logger('info', 'LocalStorage Support Disabled...');
                        return false;
                    }
                    if (spApi.isSiteUrlCheckFailed()) {
                        return false;
                    }
                    if (!spApi.isCookieSupportEnabled()) {
                        spApi.logger('info', 'Cookie Support Disabled...');
                        return false;
                    }
                    if (panelEdit === true) {
                        return false;
                    }
                    if (spApi.shouldShowPushPermissionDialog()) {
                        spApi.webPushPermission.hasOptedInBefore = spApi.webPushPermission.getState();
                        spApi.webPushPermission.initState();
                        spApi.nativeOptInSDKCustomPath = false;
                        function showPushNotificationPermissionDialog() {
                            var options = {
                                excludedURIs: [],
                                mobileSupport: true,
                                partnerName: 'ikea',
                                language: spApi.getLang(),
                                safariSupport: false,
                                dataCollectIsActive: true
                            };
                            var OptInModule = {
                                config: {
                                    isIncognitoMode: false,
                                    browserSupport: false,
                                    language: false,
                                    mobileSupport: false,
                                    partnerName: false,
                                    pushSupport: false,
                                    isLoadedOnFrame: false
                                },
                                userAgent: {
                                    browser: null,
                                    browserVersion: 0
                                },
                                init: function(options) {
                                    return new Promise(function(resolve) {
                                        this.detectIncognitoMode().then(function() {
                                            this.setUserPermissionState();
                                            this.disableOptInByExcludedURI(options.excludedURIs);
                                            this.disableOptInByCookieData();
                                            this.setBrowserSupport();
                                            this.setMobileBrowserSupport(options.mobileSupport);
                                            this.setPartnerName(options.partnerName);
                                            this.setLanguage(options.language);
                                            this.frameControl();
                                            this.setPushNotificationSupport(this.config);
                                            resolve();
                                        }
                                        .bind(this));
                                    }
                                    .bind(this));
                                },
                                setUserPermissionState: function() {
                                    pm.bind('setUserPermissionGranted', function(storageData) {
                                        spApi.webPushPermission.setState(storageData);
                                    });
                                },
                                getConfig: function(configKey) {
                                    return this.config[configKey];
                                },
                                setPushNotificationSupport: function(config) {
                                    this.config.pushSupport = (!config.isIncognitoMode && config.browserSupport && config.mobileSupport && !config.isLoadedOnFrame);
                                },
                                setPartnerName: function(partnerName) {
                                    this.config.partnerName = partnerName;
                                },
                                frameControl: function() {
                                    if (!Object.is(location.ancestorOrigins, undefined) && location.ancestorOrigins.length !== 0) {
                                        if (document.referrer === '' || document.referrer.split('?')[0].indexOf(partner_site.host) !== -1) {
                                            this.config.isLoadedOnFrame = true;
                                        }
                                    }
                                },
                                storeLogViaAjax: function(type, logType, referrer, userID) {
                                    sQuery.ajax({
                                        url: spApi.apiUrl + 'ajax.php?t=storeLog',
                                        type: 'GET',
                                        dataType: 'jsonp',
                                        data: {
                                            type: type,
                                            logType: logType,
                                            referer: referrer,
                                            userID: userID,
                                            browser: spApi.getBrowser(),
                                            isMobile: spApi.isMobileBrowser()
                                        }
                                    });
                                },
                                setLanguage: function(language) {
                                    this.config.language = language;
                                },
                                setBrowserSupport: function() {
                                    this.userAgent.browser = spApi.getBrowser();
                                    this.userAgent.browserVersion = Number(spApi.getBrowser(true));
                                    var isMobile = (spApi.isMobileBrowser && spApi.isMobileBrowser());
                                    this.config.browserSupport = ((this.isBrowser('Chrome') && this.userAgent.browserVersion >= 50) || (this.isBrowser('Opera') && ((isMobile && this.userAgent.browserVersion >= 46) || (!isMobile && this.userAgent.browserVersion >= 42))) || (this.isBrowser('Yandex') && this.userAgent.browserVersion >= 14) || (this.isBrowser('Firefox') && this.userAgent.browserVersion >= 50) || (this.isBrowser('Samsung Internet')) || (this.isBrowser('Safari') && this.userAgent.browserVersion >= 10 && options.safariSupport));
                                },
                                setMobileBrowserSupport: function(mobileBrowserSupport) {
                                    this.config.mobileSupport = ((spApi.isMobileBrowser && this.androidBrowserSupport(mobileBrowserSupport)) || (!spApi.isMobileBrowser()));
                                },
                                androidBrowserSupport: function(mobileBrowserSupport) {
                                    return /Android/i.test(navigator.userAgent) && mobileBrowserSupport;
                                },
                                disableOptInByExcludedURI: function(excludedURIs) {
                                    return new Promise(function(resolve) {
                                        excludedURIs.forEach(function(value) {
                                            if (window.location.href.indexOf(value) > -1) {
                                                spApi.disableOptInNotification = true;
                                            }
                                        });
                                        resolve();
                                    }
                                    );
                                },
                                disableOptInByCookieData: function() {
                                    if (sQuery.cookie('closeInsider') !== null) {
                                        spApi.disableOptInNotification = true;
                                    }
                                },
                                checkPermissionState: function(permissionData, state) {
                                    return permissionData.permission === state;
                                },
                                detectIncognitoMode: function() {
                                    return new Promise(function(resolve, reject) {
                                        if (OptInModule.isBrowser('Firefox')) {
                                            OptInModule.setIncognitoMode(!navigator.serviceWorker);
                                            resolve();
                                        } else if (OptInModule.isBrowser('Safari')) {
                                            OptInModule.setIncognitoMode(!localStorage.length);
                                            resolve();
                                        } else {
                                            var fs = window.RequestFileSystem || window.webkitRequestFileSystem;
                                            if (fs) {
                                                fs(window.TEMPORARY, 1, function(fs) {
                                                    OptInModule.setIncognitoMode(false);
                                                    resolve();
                                                }, function(err) {
                                                    OptInModule.setIncognitoMode(true);
                                                    resolve();
                                                });
                                            } else {
                                                reject();
                                            }
                                        }
                                    }
                                    );
                                },
                                isBrowser: function(browserName) {
                                    return [browserName].indexOf(spApi.getBrowser()) !== -1;
                                },
                                isBrowserSafari: function() {
                                    return OptInModule.isBrowser('Safari');
                                },
                                setIncognitoMode: function(status) {
                                    this.config.isIncognitoMode = status;
                                }
                            };
                            var permissionLanguages = [];
                            var isRuleChecked = eval("!0");
                            var overlayIsActive = false;
                            var overlayMessageIsActive = false;
                            var overlayCloseOnClick = false;
                            var nativeOptInCookieSettings = {
                                "permissionAbandonExpireDay": "1",
                                "permissionBlockExpireDay": "45",
                                "permissionAllowExpireDay": "7",
                                "permanentPermission": 0
                            };
                            var safariSupport = false;
                            (function NativeModule(OptInModule, options, isRuleChecked, overlayIsActive, overlayMessageIsActive, permissionLanguages, nativeOptInCookieSettings, overlayCloseOnClick, safariSupport, scope) {
                                scope.nativeOptInDefaultSWName = 'insider-sw-sdk';
                                scope.isRuleChecked = false;
                                scope.permissionLanguages = false;
                                scope.languageControl = true;
                                scope.languageElements = ['title'];
                                scope.cookies = {};
                                scope.ONE_DAY_AS_MILLISECONDS = 86400000;
                                this.nativeOptInCookieSettings = false;
                                scope.initPermissionDialog = function() {
                                    if (scope.isPermissionDialogRulesValid()) {
                                        scope.triggerWorker();
                                    }
                                }
                                ;
                                scope.setPermissionLanguages = function(permissionLanguages) {
                                    scope.permissionLanguages = JSON.parse(permissionLanguages[OptInModule.getConfig('language')] || "[]");
                                }
                                ;
                                scope.isPermissionLanguagesValid = function() {
                                    if (typeof scope.permissionLanguages !== 'undefined' && Object.keys(scope.permissionLanguages).length > 0) {
                                        sQuery.each(scope.languageElements, function(property, value) {
                                            if (typeof scope.permissionLanguages[value] === 'undefined' || scope.permissionLanguages[value] === '') {
                                                scope.languageControl = false;
                                            }
                                        });
                                    } else {
                                        scope.languageControl = true;
                                    }
                                }
                                ;
                                scope.appendStyleSheet = function() {
                                    sQuery('<link/>', {
                                        rel: 'stylesheet',
                                        href: '//static.api.useinsider.com/css/web-push-popup.css?v=1.0',
                                        id: 'insider-web-push-popup-css'
                                    }).appendTo('head').load(scope.setOverlayParameters);
                                }
                                ;
                                scope.setOverlayParameters = function() {
                                    window.insiderOptInOverlayIsActive = !!overlayIsActive;
                                    window.insiderOptInOverlayMessage = scope.permissionLanguages.title;
                                    window.insiderOverlayCloseOnClick = overlayCloseOnClick;
                                }
                                ;
                                scope.isPermissionDialogRulesValid = function() {
                                    return OptInModule.getConfig('pushSupport') && scope.checkProtocol() && scope.isRuleChecked && scope.languageControl && !spApi.webPushPermission.initialized;
                                }
                                ;
                                scope.checkProtocol = function() {
                                    return window.location.protocol.indexOf('https') !== -1;
                                }
                                ;
                                scope.triggerWorker = function() {
                                    var permissionInterval = setInterval(function() {
                                        if (spApi.worker.ready) {
                                            scope.insGetCookiesFromWorker();
                                            scope.sendPostMessageToWorker();
                                            clearInterval(permissionInterval);
                                        }
                                    }, 100);
                                }
                                ;
                                scope.sendPostMessageToWorker = function() {
                                    pm({
                                        type: 'getPushStorageData',
                                        target: sQuery('#spWorker')[0].contentWindow,
                                        success: scope.promptPermissionDialog
                                    });
                                }
                                ;
                                scope.sdkPathHasChanged = function() {
                                    return spApi.nativeOptInSDKCustomPath && (scope.getMigratedSDK() !== spApi.nativeOptInSDKCustomPath);
                                }
                                ;
                                scope.getMigratedSDK = function() {
                                    return scope.getCookie('migratedSDK') || scope.nativeOptInDefaultSWName;
                                }
                                ;
                                scope.getCookie = function(name) {
                                    return scope.cookies[name];
                                }
                                ;
                                scope.insGetCookiesFromWorker = function() {
                                    pm({
                                        target: sQuery('#spWorker')[0].contentWindow,
                                        type: 'initializePushStateCookies',
                                        success: function(data) {
                                            scope.cookies = data;
                                        }
                                    });
                                }
                                ;
                                scope.promptPermissionDialog = function(storageData) {
                                    var cookieStatus = Boolean(storageData.cookieStatus);
                                    var insdrSubsId = storageData.insdrSubsId;
                                    var permissionDefault = Notification.permission === 'default';
                                    var permissionNotDenied = Notification.permission !== 'denied';
                                    var requestIsSent = Boolean(storageData.pushRequestSent);
                                    var nativePermissionImpression = Boolean(storageData.nativePermissionImpression);
                                    var sdkPathCondition = scope.sdkPathHasChanged() && insdrSubsId && nativePermissionImpression;
                                    var daysPastSinceTokenWasGenerated = (new Date().getTime() - parseInt(scope.cookies.insdrSubsIdCreateDate)) / scope.ONE_DAY_AS_MILLISECONDS;
                                    if (daysPastSinceTokenWasGenerated >= parseInt(nativeOptInCookieSettings.permissionAllowExpireDay)) {
                                        spApi.logger('info', 'Web Push token permission allow expire day past, regenerating token.');
                                        insdrSubsId = false;
                                    }
                                    if ((cookieStatus && permissionNotDenied) && (!insdrSubsId || ((!scope.sdkPathHasChanged() && !insdrSubsId) || sdkPathCondition))) {
                                        scope.unRegisterPreviousWorkerIfNeeded();
                                        if (Number(nativeOptInCookieSettings.permanentPermission) !== 1 && requestIsSent) {
                                            return false;
                                        }
                                        if (permissionDefault) {
                                            scope.appendStyleSheet();
                                        }
                                        sQuery('<link/>', {
                                            rel: 'manifest',
                                            href: 'https://' + OptInModule.getConfig('partnerName') + '.api.useinsider.com/views/push/manifest/'
                                        }).appendTo('head');
                                        scope.parsePermissionDialogTemplate();
                                    }
                                }
                                ;
                                scope.parsePermissionDialogTemplate = function() {
                                    spApi.logger('info', 'Webpush dialog prompted!');
                                    sQuery.getScript('https://' + OptInModule.getConfig('partnerName') + '.api.useinsider.com/views/push/js/sdk/insider-push-native-sdk.js', function() {
                                        pm({
                                            target: sQuery('#spWorker')[0].contentWindow,
                                            type: 'setCookie',
                                            data: {
                                                name: 'push-request-sent',
                                                value: true,
                                                options: {
                                                    domain: OptInModule.getConfig('partnerName') + '.api.useinsider.com',
                                                    path: '/',
                                                    expires: Number(nativeOptInCookieSettings.permissionAbandonExpireDay)
                                                }
                                            }
                                        });
                                        spApi.webPushPermission.initialized = true;
                                    });
                                }
                                ;
                                scope.unRegisterPreviousWorkerIfNeeded = function() {
                                    if (spApi.nativeOptInSDKCustomPath && scope.sdkPathHasChanged()) {
                                        scope.unRegisterServiceWorker(scope.getMigratedSDK());
                                    }
                                }
                                ;
                                scope.unRegisterServiceWorker = function(workerScope) {
                                    navigator.serviceWorker.getRegistrations().then(function(registrations) {
                                        registrations.forEach(function(registration) {
                                            if (registration.active.scriptURL.indexOf(workerScope) !== -1) {
                                                registration.unregister();
                                            }
                                        })
                                    });
                                }
                                ;
                                scope.__construct = function() {
                                    if (typeof Promise === "function") {
                                        options.safariSupport = safariSupport;
                                        OptInModule.init(options).then(function() {
                                            scope.setPermissionLanguages(permissionLanguages);
                                            scope.isRuleChecked = isRuleChecked;
                                            scope.isPermissionLanguagesValid();
                                            scope.initPermissionDialog();
                                            this.nativeOptInCookieSettings = nativeOptInCookieSettings;
                                        });
                                    }
                                }
                                ;
                                return (scope.__construct());
                            }(OptInModule, options, isRuleChecked, overlayIsActive, overlayMessageIsActive, permissionLanguages, nativeOptInCookieSettings, overlayCloseOnClick, safariSupport, {}));
                        }
                        showPushNotificationPermissionDialog();
                    }
                    if (spApi.localStorageGet('inLanding') == null)
                        spApi.storageData('inLanding', window.location.href, {
                            path: '/',
                            domain: cookieDomain
                        });
                    spApi.bounceCamp = undefined;
                    spApi.activeCamps = [];
                    spApi.activeWebPushes = [];
                    spApi.activeConversionPushes = {
                        'set': [],
                        'update': [],
                        reset: []
                    };
                    spApi.conditionCheckList = [];
                    spApi.campCallbacks = [];
                    spApi.userBounced = false;
                    spApi.setAddCartCountFired = false;
                    window.spPageVisitCount = undefined;
                    window.esFeedData = undefined;
                    if (noLog !== undefined) {
                        spApi.baseInit(noLog);
                    } else if (spApi.inited === false) {
                        function checkClickCapturingClasses(classList) {
                            return typeof classList === 'string' && (classList.indexOf('ins-category-sorting') > -1 || classList.indexOf('sp-custom-') > -1 || classList.indexOf('sp-goal-') > -1 || classList.indexOf('insdr-insight-') > -1 || classList.indexOf('ins-init-condition-tracking') > -1);
                        }
                        document.addEventListener('click', function(event) {
                            for (var element = event.target; element; ) {
                                var classes = element.className;
                                if (checkClickCapturingClasses(classes)) {
                                    sQuery(document).trigger('clickedElement', element);
                                }
                                element = element.parentElement;
                            }
                        }, !0);
                        spApi.initCustomCamps(false);
                    }
                    if (spApi.customizationCamps.length === 0) {
                        spApi.removePageOpacity();
                    }
                    function completed() {
                        document.removeEventListener('DOMContentLoaded', completed);
                        window.removeEventListener('load', completed);
                        sQuery.ready();
                    }
                    if (document.readyState === 'complete' || (document.readyState !== 'loading' && !document.documentElement.doScroll)) {
                        window.setTimeout(sQuery.ready);
                    } else {
                        document.addEventListener('DOMContentLoaded', completed);
                        window.addEventListener('load', completed);
                    }
                    sQuery(document).ready(function() {
                        if (spApi.inited === true)
                            return false;
                        spApi.inited = true;
                        setTimeout(function() {
                            spApi.baseInit(noLog);
                        }, 0);
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'init',
                        bugType: 'product',
                        extraData: {
                            param1: noLog
                        }
                    });
                }
            },
            shouldInitializeWebPush: function() {
                return typeof spApi.getWebPushOfThePage === 'function' && spApi.isWebPushInitialized !== true && spApi.getBrowser() !== 'Safari';
            },
            baseInit: function(noLog) {
                try {
                    window.sendEsReq = true;
                    if (typeof noLog === 'undefined')
                        window.noLog = true;
                    else
                        window.noLog = noLog
                    spApi.couponAsistanceShow = function(callback) {
                        if (typeof callback != "undefined") {
                            if (!Boolean(spApi.couponAsistanceShowEvents))
                                spApi.couponAsistanceShowEvents = [];
                            spApi.couponAsistanceShowEvents.push(callback);
                        }
                        return this;
                    }
                    var freeJs = "\nvar lastAddedProductInfo={};if(spApi.isOnProductPage()){sQuery(document).on('click','.btn.addToBasket.addToCart, .product-detail .btn.btn-primary.btn-basket',function(){lastAddedProductInfo.name=spApi.getCurrentProduct().name;var imageUrl=spApi.getCurrentProduct().img;if(imageUrl!==''){lastAddedProductInfo.img='https:'+imageUrl;}\nlastAddedProductInfo.url=spApi.getCurrentProduct().url;spApi.storageData('ins-last-added-product-info',JSON.stringify(lastAddedProductInfo));});}\nspApi.customGoal=function(builderId,goalId){var goalOfCamp=spApi.personalizationCamps[builderId]['goalBuilderList'][goalId];if(typeof goalOfCamp==='undefined'){return false;}\nif(goalOfCamp.type==='rules'){goalOfCamp.goalList[0]['selectorString']='true';spApi.addGoalTracking(true);}};spApi.getPageVisitCount=function(pageUrl){var self={};var storageName='ins-page-visit-counter';var storageExpireTime=90;var pageData=JSON.parse(spApi.storageData(storageName)||'{}');self.init=function(){if(spApi.hasParameter('\/urun-katalogu\/')&&spApi.hasParameter(pageUrl)){self.setVisitCount();}else if(spApi.hasParameter('\/internet-magazasi\/')&&spApi.hasParameter(pageUrl)){self.setVisitCount();}\nreturn pageData[pageUrl]||0;};self.setVisitCount=function(){pageData[pageUrl]=(pageData[pageUrl]||0)+1;spApi.storageData(storageName,pageData);};return self.init();};spApi.setCustomCookie=function(name,value,expires){sQuery.cookie(name,value,{path:'\/',expires:expires,domain:'.'+partner_site.host});};spApi.listenAjaxCalls=function(callback){var originalOpenFunction=XMLHttpRequest.prototype.open;XMLHttpRequest.prototype.open=function(method,url){originalOpenFunction.apply(this,arguments);this.addEventListener('readystatechange',function(){if(this.readyState===4&&this.status===200){callback(url,this.responseText,method);}});};};spApi.conLog('free js is loaded');";
                    try {
                        spApi.logger('info', 'Partner Javascript ayarları ekleniyor...');
                        spApi.e('(function(){' + freeJs + '})()');
                    } catch (err) {
                        spApi.errLog(err, {
                            logType: 'Free Js Syntax Error',
                            bugType: 'partner',
                            extraData: {
                                freeJs: freeJs
                            }
                        });
                    }
                    spApi.excludeJourneyControlGroups();
                    spApi.triggerCartButton();
                    spApi.initCustomCamps();
                    spApi.worker.asyncPM('get-webPushRedirectorId', {}, function(data) {
                        var minutes = 60 * 30 * 1000;
                        var date = new Date();
                        date.setTime(date.getTime() + minutes);
                        sQuery.cookie('webPushRedirectorId', data, {
                            expires: date,
                            path: '/',
                            domain: cookieDomain
                        });
                        spApi.setPushJoinLog();
                    });
                    spApi.setJourneyEmailJoinStorage();
                    spApi.setESData();
                    if (spApi.isOnCartPage()) {
                        var initialCartAmount = spApi.getTotalCartAmount() || 0;
                        var checkAndUpdateCartCookie = function() {
                            var changedCartAmount = spApi.getTotalCartAmount() || 0;
                            var compareWithCookie = changedCartAmount != parseFloat(sQuery.cookie('total-cart-amount') || '0');
                            if ((initialCartAmount != changedCartAmount || compareWithCookie) && spApi.isOnCartPage()) {
                                spApi.updateCartCookies();
                                initialCartAmount = changedCartAmount;
                                sQuery(document).trigger('cartAmountUpdated');
                                if (typeof spApi.cartAbandonmentEmail === 'object') {
                                    for (var provider in spApi.emailProviders) {
                                        if (spApi.emailProviders.hasOwnProperty(provider) && spApi.emailProviders[provider] === true) {
                                            spApi.cartAbandonmentEmail.set(provider);
                                        }
                                    }
                                }
                                spApi.conLog("Cart parameters have changed, updating...");
                                spApi.conLog("Updated cart amount is: " + changedCartAmount);
                            }
                        };
                        checkAndUpdateCartCookie();
                        var insdrCartInterval = setInterval(checkAndUpdateCartCookie, 1000);
                        var pProd = spApi.getPaidProducts();
                        var encodedProducts = JSON.stringify(pProd);
                        var date = new Date();
                        var minutes = 30;
                        date.setTime(date.getTime() + (minutes * 60 * 1000));
                        spApi.storageData('paid-products', encodedProducts, {
                            expires: date,
                            path: '/',
                            domain: cookieDomain
                        });
                        spApi.updateCartCount(spApi.getCartCount());
                    }
                    spApi.showActiveCamp();
                    if (typeof spApi.getInsightOfThePage == 'function') {
                        spApi.getInsightOfThePage();
                    }
                    if (spApi.camps.length > 0 || sQuery.cookie('sp-notes') != null) {
                        if (sQuery('#spStyleCss').length == 0) {
                            var styleLink = "<link id='spStyleCss' rel='stylesheet' href='//ikea.api.useinsider.com/css/sp-style.css?v=0.1' type='text/css' media='screen'>";
                            if (sQuery("head link[rel='stylesheet']")[0]) {
                                sQuery("head link[rel='stylesheet']").last().after(styleLink);
                            } else {
                                sQuery('head').append(styleLink);
                            }
                        }
                    }
                    spApi.noteTimer();
                    spApi.setCouponAsistant();
                    if (spApi.isOnAfterPaymentPage()) {
                        spApi.resetAddCartCount();
                        var spRSStatus = JSON.parse(spApi.sessionStorageGet("spRSStatus"));
                        if (spRSStatus !== null && spRSStatus != '\"\"' && spRSStatus != '' && spRSStatus !== false) {
                            sQuery.post(spApi.apiUrl + "ajax.php?t=storeLog&ff", spRSStatus, function(e) {
                                spApi.sessionStorageSet("spRSStatus", JSON.stringify(false));
                            }).done(function() {
                                spApi.sessionStorageSet("spRSStatus", JSON.stringify(false));
                            });
                        }
                    }
                    var useCouponButton = spApi.useCouponButton();
                    if (useCouponButton.button.length > 0 && useCouponButton.button.length > 0) {
                        sQuery(useCouponButton.button).live("click", function() {
                            saveEnteredCoupon(spApi.e(useCouponButton.couponInputText));
                        });
                    }
                    function saveEnteredCoupon(enteredCoupon) {
                        var spNotes = sQuery.cookie('sp-notes');
                        var amount = sQuery.cookie('total-cart-amount');
                        enteredCoupon = sQuery.trim(enteredCoupon);
                        if (spNotes != null) {
                            spNotes = spNotes.split("|");
                            notes = JSON.parse(spNotes[1]);
                            if (notes[enteredCoupon] != undefined && notes[enteredCoupon].length > 0) {
                                var data = {};
                                data.type = "real-sales-log";
                                data.campId = "0";
                                data.referer = enteredCoupon + "%7C-%7C" + amount;
                                data.ref = window.document.referrer;
                                spApi.sessionStorageSet("spRSStatus", JSON.stringify(data));
                            }
                        }
                    }
                    if (spApi.isOnCartPage()) {
                        total = spApi.getTotalCartAmount();
                        var encodedProducts = sQuery.toJSON(spApi.getPaidProducts());
                        sQuery.cookie('total-cart-amount', total, {
                            expires: 1,
                            path: '/',
                            domain: cookieDomain
                        });
                    }
                    if (spApi.isOnAfterPaymentPage()) {
                        spApi.setSaLog();
                    }
                    if (spApi.isOnProductPage()) {
                        spApi.spAddToCart();
                        spApi.populateVersusWeb();
                        sQuery.cookie('ins-product-id', (spApi.getCurrentProduct() || {}).id, {
                            expires: 365,
                            path: '/',
                            domain: '.' + partner_site.host
                        });
                    }
                    if (spApi.isOnProductPage() || spApi.isOnCartPage()) {
                        sQuery.cookie('current-currency', spApi.getCurrency(), {
                            expires: 1,
                            path: '/',
                            domain: cookieDomain
                        });
                    }
                    var uVDate = [];
                    if (spApi.isLocalStorageExist('uVDate'))
                        uVDate = spApi.getLocalStorage('uVDate');
                    if (uVDate.length == 0 || spApi.spGetTime() - uVDate[uVDate.length - 1] > 1800) {
                        uVDate.push(spApi.spGetTime());
                        spApi.setLocalStorage('uVDate', uVDate);
                    }
                    if (spApi.isOnProductPage()) {
                        spApi.spAddToCart();
                    }
                    spApi.setPageDateVisit();
                    spApi.setPageVisit();
                    setTimeout(function() {
                        var turn = 0;
                        var intervalId = setInterval(function() {
                            if (spApi.existsStorageData('sp-camp') || turn >= 10) {
                                clearInterval(intervalId);
                                spApi.addGoalTracking(true);
                            }
                            turn++;
                        }, 500);
                    }, 500);
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'baseInit',
                        bugType: 'partner',
                        extraData: {
                            noLog: noLog
                        }
                    });
                }
            },
            sendAdAudience: function(camp) {
                if (camp.productType != 32 && camp.productType != 39 && camp.productType != 47) {
                    return;
                }
                var roiProofGroup = '';
                if (camp.productType == 32 || camp.productType == 39) {
                    if (['ins-roi-experiment-impression', 'ins-roi-control-impression'].indexOf(spApi.storageData('paaGroup')) === -1) {
                        roiProofGroup = Math.floor(Math.random() * 100) <= 5 ? 'ins-roi-control-impression' : 'ins-roi-experiment-impression';
                        sQuery.ajax({
                            type: 'get',
                            url: spApi.apiUrl + 'ajax.php?t=storeLog',
                            data: {
                                type: 'predictiveRoiProof',
                                predictiveRoiLogType: roiProofGroup,
                                campId: camp.id,
                                userID: spApi.storageData('spUID')
                            }
                        });
                    } else {
                        roiProofGroup = spApi.storageData('paaGroup');
                        spApi.conLog('PAA dashboard event already sent for 7 days interval');
                    }
                    spApi.storageData('paaGroup', roiProofGroup, {
                        path: '/',
                        expires: 7,
                        domain: cookieDomain
                    });
                }
                var configuration = {
                    callback: 'fbSend',
                    callbackParams: {
                        campId: camp.id
                    },
                    cookieType: 'facebookAds',
                    logMessage: 'For this facebook ads campaign fbsend operation already executed. LS Info: '
                };
                if (camp.productType == 32) {
                    configuration = {
                        callback: 'gaSend',
                        callbackParams: {
                            type: 'sendAdAudience',
                            campId: camp.id
                        },
                        cookieType: 'adaudience',
                        logMessage: 'For this Google Adwords campaign gaSend operation already executed. LS Info: '
                    };
                }
                var checkAudienceStatus = JSON.parse(spApi.storageData('sp-camp-' + camp.id));
                if (checkAudienceStatus) {
                    spApi.logger('warning', configuration.logMessage + JSON.stringify(checkAudienceStatus), camp.id);
                } else {
                    var adAudienceLSData = {
                        key: 'sp-camp-' + camp.id,
                        obj: {
                            'step1-displayed': true
                        },
                        campId: camp.id
                    };
                    if (roiProofGroup) {
                        adAudienceLSData.obj.paaRoiSalesLogType = roiProofGroup === 'ins-roi-experiment-impression' ? 'ins-roi-experiment-sale' : 'ins-roi-control-sale';
                    }
                    spApi.updateCookie(adAudienceLSData, configuration.cookieType);
                    if (roiProofGroup !== 'ins-roi-control-impression') {
                        spApi[configuration.callback](configuration.callbackParams);
                    }
                }
            },
            checkCondition: function(randomKey) {
                var exists = false;
                sQuery.each(spApi.conditionCheckList, function(i, obj) {
                    if (obj['key'] == randomKey) {
                        exists = true;
                    }
                });
                if (exists) {
                    return false;
                } else {
                    var obj = [];
                    obj['key'] = randomKey;
                    spApi.conditionCheckList.push(obj);
                    return true;
                }
            },
            setConditionCallback: function(camp, callback) {
                if (typeof camp === 'undefined' || camp == null) {
                    return false;
                }
                spApi.campCallbacks[camp.id] = [];
                spApi.campCallbacks[camp.id]['callback'] = callback;
                if (typeof camp.conditionNeeds.bounce !== 'undefined' && camp.conditionNeeds.bounce == '1') {
                    if (spApi.isMobileBrowser() && Array.isArray(camp.targetingConditionAlias)) {
                        if (camp.targetingConditionAlias.indexOf('mobileBounceFastScroll') > -1) {
                            spApi.bounceOnFastScrollUp();
                        }
                        var mobileBounceByValueAliases = ['mobileBounceByPercentage', 'mobileBounceByPixel', 'mobileBounceByScrollDownAndUp', 'mobileBounceCertainElement', 'mobileBounceScrollDownGoTop'];
                        sQuery.each(mobileBounceByValueAliases, function(index, alias) {
                            if (camp.targetingConditionAlias.indexOf(alias) > -1) {
                                spApi.bounceOnScrollByValueTrigger(camp);
                                return false;
                            }
                        });
                        if (camp.targetingConditionAlias.indexOf('mobileBounceScreenSizeChange') > -1) {
                            spApi.bounceOnScreenChange(camp);
                        }
                    } else {
                        spApi.bounceCampTrigger(camp);
                    }
                }
                if (typeof camp.conditionNeeds.scroll !== 'undefined' && camp.conditionNeeds.scroll == '1') {
                    spApi.scrollCampTrigger(camp);
                }
            },
            bounceCampTrigger: function(camp) {
                var lastCurserPosition = 0;
                if (typeof camp === 'undefined' || camp == null) {
                    return;
                }
                if (!spApi.activeCamp)
                    spApi.activeCamp = camp;
                var isBounced = false;
                window.setTimeout(function() {
                    sQuery('html').mousemove(function(e) {
                        if ((camp.isSuperCamp == 1 && spApi.activeCamp != false) || (sQuery('#sp-notes').length <= 0 && sQuery('#ins-coupon-assist').length <= 0) && spApi.storageData('sp-camp-' + camp.id) == null) {
                            if (e.clientY > lastCurserPosition) {
                                yPosList = [];
                                timeList = [];
                            }
                            var isOutOnTarget = true;
                            var excludedDOMs = [];
                            sQuery.each(spApi.bounceExcludeList, function(key, bounceExclude) {
                                try {
                                    excludedDOMs.push(spApi.e(bounceExclude)[0]);
                                } catch (err) {}
                            });
                            if (sQuery.inArray(e.target, excludedDOMs) > -1) {
                                isOutOnTarget = false;
                            }
                            var isCloseLocationLeft = window.navigator.platform.indexOf('Mac') >= 0 || window.navigator.platform.indexOf('Linux') >= 0;
                            var windowWidth = sQuery(window).width();
                            var windowWidth = sQuery(window).width();
                            var leftLimit = windowWidth * spApi.bounceExcludeLeft / 100;
                            var rightLimit = windowWidth - (windowWidth * spApi.bounceExcludeRight / 100);
                            if (isCloseLocationLeft) {
                                leftLimit = windowWidth * spApi.bounceExcludeRight / 100;
                                rightLimit = windowWidth - (windowWidth * spApi.bounceExcludeLeft / 100);
                            }
                            if (spApi.bounceCampTriggerAlgorithm === false) {
                                sQuery(document).on('mouseleave', function(e) {
                                    var condition = ((isCloseLocationLeft && (rightLimit < e.clientX || e.clientX < leftLimit) && isOutOnTarget) || (!isCloseLocationLeft && (rightLimit < e.clientX || e.clientX < leftLimit) && isOutOnTarget));
                                    if (e.pageY - sQuery(window).scrollTop() <= 0 && !isBounced && condition) {
                                        isBounced = true;
                                        if (camp.locationisActive == 1 && spApi.getLocationIsOk(camp) && camp) {
                                            spApi.userBounced = true;
                                            spApi.conditionWorker();
                                        } else if (camp) {
                                            spApi.userBounced = true;
                                            spApi.conditionWorker();
                                        }
                                    }
                                });
                                return;
                            }
                            if (((isCloseLocationLeft && (rightLimit < e.clientX || e.clientX < leftLimit) && isOutOnTarget) || (!isCloseLocationLeft && (rightLimit < e.clientX || e.clientX < leftLimit) && isOutOnTarget)) && e.clientY < 18 && e.clientY < lastCurserPosition) {
                                yPosList.push(e.clientY);
                                timeList.push(new Date().getTime());
                                if (yPosList.length > 10)
                                    yPosList.shift();
                                if (timeList.length > 10)
                                    timeList.shift();
                                if (timeList.length == 1) {
                                    setTimeout(function() {
                                        if (timeList.length == 1) {
                                            if (camp.locationisActive == 1) {
                                                if (spApi.getLocationIsOk(camp))
                                                    if (camp) {
                                                        spApi.userBounced = true;
                                                        spApi.conditionWorker();
                                                    }
                                            } else {
                                                if (camp) {
                                                    spApi.userBounced = true;
                                                    spApi.conditionWorker();
                                                }
                                            }
                                        }
                                    }, 250);
                                }
                                positionDif = (Math.max.apply(Math, yPosList) - Math.min.apply(Math, yPosList)) / 2;
                                timeDif = (Math.max.apply(Math, timeList) - Math.min.apply(Math, timeList)) / 2;
                                velocity = parseInt(timeDif / positionDif * 100);
                                if (velocity != 0 && velocity <= spApi.defaultVelocity) {
                                    if (camp) {
                                        if (camp.locationisActive == 1) {
                                            if (spApi.getLocationIsOk(camp))
                                                if (camp) {
                                                    spApi.userBounced = true;
                                                    spApi.conditionWorker();
                                                }
                                        } else {
                                            if (camp) {
                                                spApi.userBounced = true;
                                                spApi.conditionWorker();
                                            }
                                        }
                                    }
                                }
                            }
                            lastCurserPosition = e.clientY;
                        } else {
                            sQuery(this).unbind('mousemove');
                        }
                    });
                }, Number(camp.trigTimeOut) * 1000);
            },
            setAddCartCount: function() {
                var counter = [];
                if (spApi.isLocalStorageExist('addCartCount')) {
                    counter = spApi.getLocalStorage('addCartCount');
                }
                counter.push([spApi.spGetTime(), parseInt(spApi.getCurrentProduct().price)]);
                spApi.setLocalStorage('addCartCount', counter);
            },
            checkAddCartCount: function(time, count) {
                return spApi.getAddCartCount(Math.round(new Date() / 1000) - time) >= count ? true : false;
            },
            isLocalStorageExist: function(storageName) {
                var val = spApi.getLocalStorage(storageName);
                if (val !== null && val != '""' && val != '')
                    return true;
                else
                    return false;
            },
            incrementLocalStorage: function(storageName, elementName, incValue) {
                var ref = [];
                var count = false;
                if (spApi.isLocalStorageExist(storageName)) {
                    ref = spApi.getLocalStorage(storageName);
                }
                sQuery.each(ref, function(index) {
                    if (ref[index][0] == elementName) {
                        ref[index][1] = parseInt(ref[index][1]) + incValue;
                        count = index;
                    }
                });
                if (count === false) {
                    ref.push([elementName, incValue]);
                }
                spApi.setLocalStorage(storageName, ref);
                return count;
            },
            isBigEnough: function(valueArray, value) {
                var count = false;
                sQuery.each(valueArray, function(index) {
                    if (valueArray[index] > value) {
                        count === false ? count = 1 : count++;
                    }
                });
                return count;
            },
            setLocalStorage: function(storageName, storeValue) {
                localStorage.setItem(storageName, JSON.stringify(storeValue));
            },
            setLSExpireDates: function(storageName) {
                var expirePeriod;
                switch (storageName) {
                case "uVDate":
                    expirePeriod = 30 * 24 * 60 * 60;
                    break;
                case "timeOnSite":
                    expirePeriod = 30 * 60;
                    break;
                case "pageVisit":
                    expirePeriod = 30 * 30;
                    break;
                default:
                    expirePeriod = 7 * 24 * 60 * 60;
                }
                var lsExpireDates = [];
                var expireDateExist = false;
                var now = spApi.spGetTime();
                try {
                    var temp = JSON.parse(localStorage.getItem('lsExpireDates'));
                    lsExpireDates = (temp == null) ? [] : JSON.parse(localStorage.getItem('lsExpireDates'));
                } catch (e) {
                    lsExpireDates = [];
                }
                if (lsExpireDates !== null && lsExpireDates != '""' && lsExpireDates != '') {
                    sQuery.each(lsExpireDates, function(index) {
                        if (lsExpireDates[index][0] == storageName) {
                            expireDateExist = true;
                            if (now - lsExpireDates[index][1] > expirePeriod) {
                                lsExpireDates[index][1] = now;
                                localStorage.setItem(storageName, JSON.stringify([]));
                            }
                        } else if (now - lsExpireDates[index][1] > expirePeriod * 24 * 60 * 60) {
                            localStorage.setItem(lsExpireDates[index][0], JSON.stringify([]));
                        }
                    });
                }
                if (!expireDateExist)
                    lsExpireDates.push([storageName, now]);
                localStorage.setItem('lsExpireDates', JSON.stringify(lsExpireDates));
            },
            getLocalStorage: function(storageName) {
                try {
                    spApi.setLSExpireDates(storageName);
                    return JSON.parse(localStorage.getItem(storageName))
                } catch (err) {
                    spApi.setLocalStorage(storageName, '');
                    return [];
                }
            },
            spGetTime: function() {
                return Math.round(new Date() / 1000);
            },
            getRelationalRuleId: function(ruleId) {
                try {
                    return spApi.rules[ruleId].relationalRule.split(',');
                } catch (err) {
                    var X = new Array();
                    X[0] = '0';
                    return X;
                }
            },
            setPageDateVisit: function() {
                var increasedList = [];
                sQuery.each(spApi.getAllCamps(), function(i, camp) {
                    var showInRule = 0;
                    if (typeof camp.showIn[0] == 'undefined' && (camp.showIn.trigger == null || camp.showIn.trigger.length == 0)) {
                        return true;
                    } else if (typeof camp.showIn[0] == 'undefined' && camp.showIn.trigger != undefined && camp.showIn.trigger != null) {
                        showInRule = camp.showIn.trigger[0];
                    } else {
                        showInRule = camp.showIn[0];
                    }
                    var relationalRules = spApi.getRelationalRuleId(showInRule);
                    if (relationalRules[0] != '0' && spApi.isTargetingReady(camp)) {
                        sQuery.each(relationalRules, function(a, r) {
                            if (spApi.rules[relationalRules[a]].isRelational == '1') {
                                if (spApi.e(spApi.rules[relationalRules[a]].test)) {
                                    if (increasedList[relationalRules[a]] !== true) {
                                        increasedList[relationalRules[a]] = true;
                                        var ref = [];
                                        var count = false;
                                        if (spApi.isLocalStorageExist('pageDateVisit')) {
                                            ref = spApi.getLocalStorage('pageDateVisit');
                                        }
                                        ref.push([relationalRules[a], spApi.spGetTime()]);
                                        spApi.setLocalStorage('pageDateVisit', ref);
                                    }
                                }
                            }
                        });
                    }
                });
            },
            setPageVisit: function() {
                var increasedList = [];
                sQuery.each(spApi.getAllCamps(), function(i, camp) {
                    if (increasedList['all'] !== true) {
                        spApi.incrementLocalStorage('pageVisit', 'all', 1);
                        increasedList['all'] = true;
                    }
                    var showInRule = 0;
                    if (typeof camp.showIn[0] == 'undefined' && (camp.showIn.trigger == null || camp.showIn.trigger.length == 0)) {
                        return true;
                    } else if (typeof camp.showIn[0] == 'undefined' && camp.showIn.trigger != undefined && camp.showIn.trigger != null) {
                        showInRule = camp.showIn.trigger[0];
                    } else {
                        showInRule = camp.showIn[0];
                    }
                    if (spApi.getRelationalRuleId(showInRule)[0] != '0' && spApi.isTargetingReady(camp)) {
                        var relationalRules = spApi.getRelationalRuleId(showInRule);
                        sQuery.each(relationalRules, function(a, r) {
                            if (typeof spApi.rules[relationalRules[a]] == 'undefined')
                                return;
                            if (spApi.rules[relationalRules[a]].isRelational == '1') {
                                if (spApi.e(spApi.rules[relationalRules[a]].test)) {
                                    if (increasedList[relationalRules[a]] !== true) {
                                        spApi.incrementLocalStorage('pageVisit', relationalRules[a], 1);
                                        increasedList[relationalRules[a]] = true;
                                    }
                                }
                            }
                        });
                    }
                });
            },
            conditionWorker: function() {
                sQuery.each(spApi.campCallbacks, function(id, campObj) {
                    if (typeof campObj === 'undefined')
                        return;
                    var camp = spApi.getCamp(id).camp;
                    var ruleId = camp.showIn.trigger[0];
                    var rule = spApi.rules[ruleId];
                    if (spApi.ruleControl(rule, camp) && typeof spApi.campCallbacks[id].callback !== 'undefined') {
                        spApi.campCallbacks[id].callback();
                        spApi.campCallbacks[id].callback = undefined;
                    }
                });
            },
            getAddCartCount: function(time) {
                var steps = [];
                var startDate = spApi.spGetTime() - time;
                if (spApi.isLocalStorageExist('addCartCount')) {
                    var addCartArray = spApi.getLocalStorage('addCartCount');
                    sQuery.each(addCartArray, function(index, value) {
                        steps.push(addCartArray[index][0]);
                    });
                }
                return spApi.isBigEnough(steps, startDate);
            },
            getAddCartAmount: function() {
                var amount = 0;
                if (spApi.isLocalStorageExist('addCartCount')) {
                    var addCartArray = spApi.getLocalStorage('addCartCount');
                    sQuery.each(addCartArray, function(index, value) {
                        amount += parseInt(typeof (addCartArray[index][1]) == "undefined" ? 0 : addCartArray[index][1]);
                    });
                }
                return amount;
            },
            checkPageDateVisit: function(ruleId, date, targetCount) {
                date = date * 86400;
                targetCount = targetCount - 1;
                var uVDate = [];
                var count = false;
                if (spApi.isLocalStorageExist('pageDateVisit'))
                    uVDate = spApi.getLocalStorage('pageDateVisit');
                sQuery.each(uVDate, function(index) {
                    if (uVDate[index][0] == ruleId) {
                        if (uVDate[index][1] > spApi.spGetTime() - date) {
                            count === false ? count = 1 : count++;
                        }
                    }
                });
                return (count != false) && count >= targetCount ? true : false;
            },
            isBounced: function() {
                return spApi.userBounced;
            },
            setCartTargetingRules: function() {
                if (spApi.setAddCartCountFired === false) {
                    spApi.setAddCartCount();
                    spApi.setAddCartCountFired = true;
                }
            },
            checkPageVisit: function(ruleId, count) {
                var pageVisit = [];
                var status = false;
                if (spApi.isLocalStorageExist('pageVisit')) {
                    pageVisit = spApi.getLocalStorage('pageVisit');
                    sQuery.each(pageVisit, function(index) {
                        if (pageVisit[index][0] == ruleId && pageVisit[index][1] >= count) {
                            status = true;
                        }
                    });
                }
                return status;
            },
            checkSearchKeyword: function(browser, skeyword) {
                var keyword = '';
                switch (browser) {
                case 'Google':
                    if (document.referrer.indexOf('q=') > -1)
                        keyword = document.referrer.split('q=')[1].split('&')[0];
                    else
                        keyword = '';
                    break;
                case 'Yahoo':
                    if (document.referrer.indexOf('p=') > -1)
                        keyword = document.referrer.split('p=')[1].split('&')[0];
                    else
                        keyword = '';
                    break;
                case 'Yandex':
                    if (document.referrer.indexOf('text=') > -1)
                        keyword = document.referrer.split('text=')[1].split('&')[0];
                    else
                        keyword = '';
                    break;
                case 'Bing':
                    if (document.referrer.indexOf('q=') > -1)
                        keyword = document.referrer.split('q=')[1].split('&')[0];
                    else
                        keyword = '';
                    break;
                }
                return decodeURI(keyword) === skeyword;
            },
            checkMemberStatus: function(status) {
                if (status == 'logged') {
                    return spApi.esQ.memberStatus.dCount >= 1;
                }
                if (status == 'notlogged') {
                    return spApi.esQ.memberStatus.dCount < 1;
                }
            },
            lastSiteVisitCheck: function(targetCamp, logic, howManyDay) {
                var oldDate = spApi.esQ.lastSiteVisitAggr.value;
                var today = parseInt(new Date() / 1000);
                return spApi.e('(spApi.dateDifferenceCheck(today,oldDate,\'day\') ' + logic + ' howManyDay)');
            },
            lastPageVisitCheck: function(targetCamp, logic, howManyDay, uid) {
                var oldDate = spApi.esQ['lastPageVisitDateAggr_' + uid].value;
                var today = parseInt(new Date() / 1000);
                return spApi.e('(parseInt(spApi.dateDifferenceCheck(today,oldDate)) ' + logic + ' howManyDay)');
            },
            isFirstPageVisitCheck: function(targetCamp, logic, howManyDay, uid) {
                var oldDate = spApi.esQ['lastPageVisitDateAggr_' + uid].value;
                var today = parseInt(new Date() / 1000);
                return spApi.dateDifferenceCheck(today, oldDate, 'second') < 0;
            },
            averagePageTimeCheck: function(targetCamp, variable, logic, tType, uid) {
                var val = spApi.esQ['averagePageTimeAggr__' + uid].value;
                var _temp = 0;
                switch (tType) {
                case 'second':
                    _temp = val * 1;
                    break;
                case 'minute':
                    _temp = val / 60;
                case 'hour':
                    _temp = (val / 60) / 60;
                }
                return spApi.e('(variable ' + logic + ' temp)');
            },
            averageSiteTimeCheck: function(targetCamp, variable, logic, tType) {
                var val = spApi.esQ['averageSiteTimeAggr'].value;
                var _temp = 0;
                switch (tType) {
                case 'second':
                    _temp = val * 1;
                    break;
                case 'minute':
                    _temp = val / 60;
                    break;
                case 'hour':
                    _temp = (val / 60) / 60;
                    break;
                }
                return spApi.e('( _temp ' + logic + ' variable )');
            },
            checkPageViewCount: function(targetCamp, logic, howMany, uid) {
                var val = spApi.esQ['pageViewCountAggr_' + uid].dCount;
                return spApi.e('(val ' + logic + ' ' + howMany + ')');
            },
            checkTotalVisitCount: function(targetCamp, logic, howMany) {
                var val = spApi.esQ['totalVisitAggr'].dCount;
                return spApi.e('(val ' + logic + ' ' + howMany + ')');
            },
            checkVisitFrequency: function(targetCamp, logic, howMany, uid) {
                var val = spApi.esQ['visitFrequencyAggr_' + uid].dCount;
                return spApi.e('(val ' + logic + ' ' + howMany + ')');
            },
            getPastCartAmount: function(logic, price, sStatus, uid) {
                if (sStatus == 'sale') {
                    if (spApi.esQ['success_' + uid].dCount == spApi.esQ['cart_' + uid].dCount) {
                        return spApi.e('(spApi.esQ[\'success_\'+uid].value ' + logic + ' ' + price + ')');
                    } else {
                        return false;
                    }
                } else if (sStatus == 'not-sale') {
                    if (spApi.esQ['success_' + uid].dCount != spApi.esQ['cart_' + uid].dCount) {
                        return spApi.e('(spApi.esQ[\'cart_\'+uid].value ' + logic + ' ' + price + ')');
                    } else {
                        return false;
                    }
                }
            },
            getPastCartProductCount: function(logic, c, sStatus, uid) {
                if (sStatus == 'sale') {
                    if (spApi.esQ['success_' + uid].dCount == spApi.esQ['cart_' + uid].dCount) {
                        return spApi.e('(spApi.esQ[\'success_\'+uid].dCount ' + logic + ' ' + c + ')');
                    } else {
                        return false;
                    }
                } else if (sStatus == 'not-sale') {
                    if (spApi.esQ['success_' + uid].dCount != spApi.esQ['cart_' + uid].dCount) {
                        return spApi.e('(spApi.esQ[\'cart_\'+uid].value ' + logic + ' ' + c + ')');
                    } else {
                        return false;
                    }
                }
            },
            getPastSuccessAmount: function(logic, price, uid) {
                var val = spApi.esQ['sellAmountAggr_' + uid].value;
                return spApi.e('(price ' + logic + ' val)');
            },
            getPastSuccessCount: function(logic, c, uid) {
                var val = spApi.esQ['sellAmountAggr_' + uid].dCount;
                return spApi.e('(price ' + logic + ' val)');
            },
            isDirectAccess: function() {
                return document.referrer === '';
            },
            convertNumberToBoolean: function(n) {
                return n > 0;
            },
            checkReferrerData: function(searchKey) {
                if (!spApi.isDirectAccess()) {
                    return document.referrer.indexOf(searchKey) >= 0;
                } else {
                    return false;
                }
            },
            checkParameterData: function(searchKey) {
                if (window.inLanding === undefined) {
                    if (JSON.parse(spApi.localStorageGet('inLanding')).data.indexOf(searchKey) > -1) {
                        window.inLanding = true;
                        return true;
                    } else {
                        return sQuery.cookie('landingFlag') == 'true';
                    }
                } else {
                    if (spApi.localStorageGet('inLanding') != null && sQuery.cookie('landingFlag') == null) {
                        if (JSON.parse(spApi.localStorageGet('inLanding')).data.indexOf(searchKey) > -1) {
                            sQuery.cookie('landingFlag', 'true', {
                                path: '/',
                                domain: '.' + partner_site.host
                            });
                            return true;
                        } else {
                            return false;
                        }
                    } else {
                        if (sQuery.cookie('landingFlag') == 'true') {
                            return true;
                        }
                    }
                }
            },
            dateDifferenceCheck: function(date1, date2, dType) {
                var result = 0;
                if (date2 === 0) {
                    date2 = date1;
                }
                switch (dType) {
                case 'hour':
                    result = ((date1 - date2) / 60) / 60;
                    break;
                case 'day':
                    result = (((date1 - date2) / 60) / 60) / 24;
                    break;
                case 'second':
                    result = (date1 - date2);
                    break;
                }
                return result;
            },
            checkUserIp: function(ip) {
                if (spApi.storageData('userLocation') != null) {
                    var parseIpData = sQuery.parseJSON(spApi.storageData('userLocation'));
                    return parseIpData.request === ip;
                }
                return false;
            },
            checkOS: function(targetOs) {
                var ua = navigator.userAgent;
                var uaindex;
                var mobileOS = 'x';
                if (ua.match(/iPad/i) || ua.match(/iPhone/i)) {
                    mobileOS = 'Ios';
                    uaindex = ua.indexOf('OS ');
                } else if (ua.match(/Android/i)) {
                    mobileOS = 'Android';
                    uaindex = ua.indexOf('Android ');
                }
                if (mobileOS === 'iOS' && uaindex > -1) {
                    mobileOSver = ua.substr(uaindex + 3, 3).replace('_', '.');
                } else if (mobileOS === 'Android' && uaindex > -1) {
                    mobileOSver = ua.substr(uaindex + 8, 3);
                }
                if ((ua.match(/Windows/i) || ua.match(/windows/i)) && mobileOS == 'x') {
                    mobileOS = 'Windows';
                    uaindex = ua.indexOf('OS ');
                }
                if ((ua.match(/Mac/i) || ua.match(/mac/i)) && mobileOS == 'x') {
                    mobileOS = 'Mac';
                    uaindex = ua.indexOf('OS ');
                }
                if ((ua.match(/Linux/i) || ua.match(/Linux/i)) && mobileOS == 'x') {
                    mobileOS = 'Linux';
                    uaindex = ua.indexOf('OS ');
                }
                return mobileOS === targetOs;
            },
            checkBrowser: function(targetBrowser) {
                return targetBrowser === spApi.getBrowser();
            },
            checkCampSit: function(sitType, campId) {
                try {
                    var J = JSON.parse(spApi.storageData('sp-camp-' + campId));
                } catch (err) {
                    return false;
                }
                switch (sitType) {
                case 'preview':
                    return !!(J != null && J['step1-displayed']);
                    break;
                case 'notpreview':
                    return J == null || !J['step1-displayed'];
                    break;
                case 'join':
                    return !!(J != null && (J.liked || J.joined));
                    break;
                case 'previewNotjoin':
                    return !!(J != null && J['step1-displayed'] && (!J.liked || !J.joined));
                    break;
                case 'closed':
                    return !!(J != null && J['closed']);
                    break;
                case 'previewNotClosed':
                    return !!(J != null && J['step1-displayed'] && !J['closed']);
                    break;
                }
            },
            checkResolution: function(sign, dataset) {
                var dataset = spApi.e('dataset=' + dataset + ';');
                var sHeight = screen.height;
                var sWidth = screen.width;
                var res = spApi.e('( ' + sWidth + ' ' + sign + ' ' + dataset.width + ' )&&( ' + sHeight + ' ' + sign + ' ' + dataset.height + ')');
                return res;
            },
            checkLocation: function(country, city) {
                if (spApi.storageData('userLocation') != null) {
                    var userLocation = JSON.parse(spApi.storageData('userLocation'));
                    if (userLocation.country != null && userLocation.country != 'null') {
                        try {
                            city = JSON.parse(city)
                        } catch (e) {
                            spApi.logger('info', 'City is not a json object');
                        }
                        var status = false;
                        if (country.indexOf('/') > -1) {
                            var countryCodes = country.split('/');
                            sQuery.each(countryCodes, function(index, val) {
                                if (val.trim() === userLocation.country) {
                                    if (typeof city === 'object') {
                                        sQuery.each(city, function(index, cityVal) {
                                            if (cityVal == userLocation.geoId || cityVal == userLocation.city) {
                                                status = true;
                                            }
                                        });
                                    } else if (city === 'all' || city == userLocation.geoId || city == userLocation.city) {
                                        status = true;
                                    }
                                }
                            });
                        } else if (country == userLocation.country) {
                            if (typeof city === 'object') {
                                sQuery.each(city, function(index, cityVal) {
                                    if (cityVal == userLocation.geoId || cityVal == userLocation.city) {
                                        status = true;
                                    }
                                });
                            } else if (city == 'all' || city == userLocation.geoId || city == userLocation.city) {
                                status = true;
                            }
                        }
                        return status;
                    }
                }
            },
            checkAdvancedJs: function(type, param, logic) {
                if (typeof spApiUserData != 'undefined') {
                    return spApi.e('(param ' + logic + ' spApiUserData[0][type])');
                }
            },
            checkCustomDataset: function(cookieKey, segmentName) {
                try {
                    var cookie = sQuery.cookie(cookieKey);
                    if (cookie != null) {
                        var key = 'customDataSet-' + segmentName;
                        var customSet = JSON.parse(localStorage.getItem(key));
                        if (customSet && typeof customSet == 'object') {
                            return Boolean(customSet.status);
                        }
                    }
                    return false;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'checkCustomDataset',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            getDateString: function(day) {
                return new Date(new Date().setDate(new Date().getDate() + day)).toDateString();
            },
            assertThresholdExceeded: function(campId) {
                var self = {};
                var coeff = spApi.coeff;
                var currentDate = spApi.getDateString(0);
                var defaultCoefficientValues = {
                    count: {
                        main: 0,
                        product: 0,
                        cat: 0,
                        cart: 0,
                        total: 0,
                        session: 0,
                        lastSession: 0,
                        productSession: 0,
                        totalSession: 0
                    },
                    landing: {
                        main: 0,
                        product: 0,
                        cat: 0,
                        cart: 0,
                        other: 0
                    },
                    duration: {
                        session: 0,
                        lastSession: 0
                    }
                };
                var daily = {};
                var coeffWeekly = sQuery.extend(true, {
                    today: 0
                }, defaultCoefficientValues);
                for (var i = 0; i < 7; i++) {
                    daily[spApi.getDateString(-i)] = sQuery.extend(true, {}, defaultCoefficientValues);
                }
                var storageName = {
                    session: 'insCoeffSession',
                    daily: 'insCoeffDaily'
                };
                var coeffHolder = {
                    session: {
                        count: {
                            main: 0,
                            product: 0,
                            cat: 0,
                            cart: 0,
                            total: 0
                        },
                        landing: {
                            active: '',
                            main: 0,
                            product: 0,
                            cat: 0,
                            cart: 0,
                            other: 0
                        },
                        duration: {
                            session: 0,
                            product: 0,
                            longProduct: 0,
                            fTimeSession: 0,
                            fTimeProduct: 0,
                            fTimeLongProduct: 0
                        },
                        totalProductPrices: 0,
                        productPrices: [],
                        systemHour: new Date().getUTCHours(),
                        searchKeywords: '',
                        mobileBrowser: Number(spApi.isMobileBrowser()) || 0,
                        cartAmount: 0,
                        visitedProducts: [],
                        theSameProduct: 0
                    },
                    daily: daily
                };
                self.setCoeff = function() {
                    Object.keys(self.helper.coeffHelperFunctions).forEach(function(func) {
                        if (typeof self.helper.coeffHelperFunctions[func] === 'function') {
                            self.helper.coeffHelperFunctions[func].call();
                        }
                    });
                    self.helper.assignCoeffDailyToWeekly();
                    self.push(1, Number(coeffSession.cartAmount > 0));
                    self.push(2, coeffSession.count.total);
                    self.push(3, coeffSession.theSameProduct);
                    self.push(4, coeffSession.count.cart);
                    self.push(5, coeffSession.mobileBrowser);
                    self.push(6, coeffSession.landing.product);
                    self.push(7, coeffSession.landing.cat);
                    self.push(8, coeffSession.landing.main);
                    self.push(9, coeffSession.landing.cart);
                    self.push(10, (coeffSession.searchKeywords.length > 0 ? 1 : 0));
                    self.push(11, Number(coeffSession.systemHour <= 14 && coeffSession.systemHour >= 7));
                    self.push(12, Number(coeffSession.systemHour > 14 && coeffSession.systemHour <= 22));
                    self.push(13, parseFloat(((coeffSession.duration.session / coeffSession.count.total) || 0).toFixed(2)));
                    self.push(14, coeffSession.count.cat);
                    self.push(15, coeffSession.count.product);
                    if (coeff.v === '3.0') {
                        var f16Value = spApi.checkPredictiveAmountData(7, 'a84916e91e31c7247eb2377392f6d019', 'c6e1fa99dc9669cdc18a56b45738c3c2', 'undefined', 'undefined', 0, '>');
                        var f16 = Number(f16Value === true);
                        self.push(16, f16);
                        var f17CurrentDate = new Date();
                        var lastSevenDays = Math.round(f17CurrentDate.setDate(f17CurrentDate.getDate() - 7) / 1000);
                        var lastOneMonth = Math.round(f17CurrentDate.setDate(f17CurrentDate.getDate() - 30) / 1000);
                        var f17Value = spApi.checkPredictiveAmountData('', 'cfd9b5a201da02cea83c199ce9490396', 'c6e1fa99dc9669cdc18a56b45738c3c2', lastOneMonth, lastSevenDays, 0, '>');
                        var f17 = Number(f17Value === true);
                        self.push(17, f17);
                    }
                    if (coeff.v >= '4.0') {
                        var f18 = 0
                        if (coeffSession.productPrices.length) {
                            f18 = coeffSession.totalProductPrices / coeffSession.productPrices.length
                        }
                        self.push(18, f18);
                        var f19 = 0;
                        if (coeffSession.duration.product) {
                            f19 = (coeffSession.duration.longProduct * coeffSession.count.product / coeffSession.duration.product) - 1;
                        }
                        self.push(19, f19);
                        var f20 = 0;
                        if (coeffSession.count.total) {
                            f20 = coeffSession.count.cat / coeffSession.count.total;
                        }
                        self.push(20, f20);
                        var f21 = (coeffSession.count.total && (coeffSession.count.cart / coeffSession.count.total)) || 0;
                        self.push(21, f21);
                        var f22 = (coeffSession.count.total && (coeffSession.count.product / coeffSession.count.total)) || 0;
                        self.push(22, f22);
                        self.push(23, coeffWeekly.landing.cat);
                        self.push(24, coeffWeekly.landing.main);
                        self.push(25, coeffWeekly.landing.product);
                        self.push(26, coeffWeekly.landing.cart);
                        self.push(27, coeffWeekly.duration.session);
                        self.push(28, coeffWeekly.count.product);
                        self.push(29, coeffWeekly.count.session);
                        var f30 = 0;
                        var visitTime = new Date().getTime();
                        if (spApi.sessionInit) {
                            coeffSession.lastVisitTime = (spApi.storageData('lastVisitTime') || 0);
                            spApi.storageData('lastVisitTime', visitTime, {
                                expires: 360
                            });
                        }
                        if (coeffSession.lastVisitTime > 0) {
                            secondsBetweenLast2Session = (visitTime - coeffSession.lastVisitTime) / 1000;
                            f30 = Math.pow(1 - (secondsBetweenLast2Session / 56 / 86400), 10);
                            f30 = f30 < 0 ? 0 : f30;
                        }
                        self.push(30, f30);
                        self.push(31, coeffWeekly.today);
                    }
                    spApi.storageData(storageName.session, coeffSession);
                    spApi.storageData(storageName.daily, coeffDaily, {
                        expires: 7
                    });
                }
                ;
                self.run = function() {
                    if (!coeff.v) {
                        spApi.logger('warning', 'There is no coefficient version.', campId);
                        return false;
                    }
                    if (typeof spApi.coeff.l2pThresholdResult !== 'undefined') {
                        spApi.logger('warning', 'Threshold already calculated:', campId);
                        return spApi.coeff.l2pThresholdResult;
                    }
                    if (coeff.v >= '4.1') {
                        if (spApi.isMobileBrowser()) {
                            coeff.f = coeff.fMobile;
                            coeff.i = coeff.iMobile;
                        } else {
                            coeff.f = coeff.fWeb;
                            coeff.i = coeff.iWeb;
                        }
                    }
                    if (Object.keys(coeff.f).length === 0) {
                        spApi.logger('warning', 'There is no coefficients.', campId);
                        return false;
                    }
                    if (typeof spApi.sessionInit === 'undefined') {
                        spApi.getGAStyleSesId();
                    }
                    if (spApi.sessionInit) {
                        spApi.storageData(storageName.session, coeffHolder.session);
                        coeffSession = coeffHolder.session;
                    }
                    spApi.reInitOnChangeCallbacks.push(function() {
                        spApi.coeff.l2pThresholdResult = undefined;
                        spApi.logger('info', 'spApi.coeff.l2pThresholdResult set to undefined on reInitOnChange');
                    });
                    self.setCoeff();
                    var value = 0;
                    var assert_coeff = true;
                    var c, f, t = spApi.isMobileBrowser() ? coeff.tMobile : coeff.t;
                    Object.keys(coeff.f).forEach(function(key) {
                        c = parseFloat(coeff.f[key][0]) || 0;
                        f = parseFloat(coeff.f[key][1]) || 0;
                        value = value + (c * f);
                        if (c == null || f == null || t == null)
                            assert_coeff = false;
                    });
                    if (!assert_coeff) {
                        spApi.logger('warning', 'null coefficient values: ' + JSON.stringify(spApi.coeff), campId);
                        return false;
                    }
                    value = value + parseFloat(coeff.i);
                    value = 1 / (1 + Math.pow(Math.E, -1 * value));
                    var threshold = parseFloat(t);
                    if (spApi.debugModeIsOpen()) {
                        spApi.coeff.score = value;
                    }
                    spApi.logger('warning', 'value: ' + value + ', threshold:' + threshold, campId);
                    spApi.coeff.l2pMid = false;
                    if (value > threshold) {
                        spApi.coeff.l2pThresholdResult = {
                            coeff: coeff,
                            value: value,
                            threshold: threshold
                        };
                    } else if (value >= threshold * 0.8) {
                        spApi.coeff.l2pMid = true;
                        spApi.coeff.l2pThresholdResult = false;
                    } else {
                        spApi.coeff.l2pThresholdResult = false;
                    }
                    return spApi.coeff.l2pThresholdResult;
                }
                ;
                self.push = function(order, value) {
                    return coeff.f[order] = [coeff.f[order][0], value];
                }
                ;
                self.helper = {
                    setCoeffDaily: function() {
                        var necessaryKeys = [];
                        coeffDaily = JSON.parse(spApi.storageData(storageName.daily)) || (spApi.storageData(storageName.daily, coeffHolder.daily),
                        coeffHolder.daily);
                        for (var i = 0; i < 7; i++) {
                            necessaryKeys.push(spApi.getDateString(-i));
                            if (typeof coeffDaily[spApi.getDateString(-i)] === 'undefined') {
                                coeffDaily[spApi.getDateString(-i)] = sQuery.extend(true, {}, defaultCoefficientValues);
                            }
                        }
                        Object.keys(coeffDaily).forEach(function(key) {
                            if (necessaryKeys.indexOf(key) === -1) {
                                delete coeffDaily[key];
                            }
                        });
                    },
                    assignCoeffDailyToWeekly: function() {
                        Object.keys(coeffDaily).forEach(function(date) {
                            Object.keys(coeffDaily[date]).forEach(function(dimension1) {
                                Object.keys(coeffDaily[date][dimension1]).forEach(function(dimension2) {
                                    coeffWeekly[dimension1][dimension2] += coeffDaily[date][dimension1][dimension2];
                                });
                            });
                            if (date !== currentDate) {
                                if (coeffDaily[date].duration.session > 0) {
                                    coeffWeekly.duration.session += coeffDaily[date].duration.lastSession;
                                }
                                if (coeffDaily[date].count.total > 0) {
                                    coeffWeekly.count.total += coeffDaily[date].count.totalSession;
                                }
                                if (coeffDaily[date].count.product > 0) {
                                    coeffWeekly.count.product += coeffDaily[date].count.productSession;
                                }
                            }
                        });
                    },
                    evalRule: function(t) {
                        switch (t) {
                        default:
                            return false;
                        case 'main':
                            return spApi.isOnMainPage() || false;
                        case 'product':
                            return spApi.isOnProductPage() || false;
                        case 'cat':
                            return spApi.isOnCategoryPage() || false;
                        case 'cart':
                            return spApi.isOnCartPage() || false;
                        case 'camount':
                            return parseFloat(spApi.getTotalCartAmount()) || parseFloat(sQuery.cookie('total-cart-amount')) || 0;
                        case 'mobile':
                            return spApi.isMobileBrowser();
                        }
                    },
                    getPageType: function() {
                        if (spApi.isOnMainPage())
                            return 'main';
                        if (spApi.isOnProductPage())
                            return 'product';
                        if (spApi.isOnCategoryPage())
                            return 'cat';
                        if (spApi.isOnCartPage())
                            return 'cart';
                        return 'other';
                    },
                    coeffHelperFunctions: {
                        checkCartAmount: function() {
                            coeffSession.cartAmount = parseFloat(spApi.getCartCount()) || parseFloat(spApi.getTotalCartAmount()) || parseFloat(sQuery.cookie('total-cart-amount')) || 0;
                        },
                        checkVisits: function() {
                            if (spApi.storageData('ins-today-sId') === null) {
                                spApi.storageData('ins-today-sId', spApi.getGAStyleSesId(), {
                                    expires: 1
                                });
                            } else if (spApi.storageData('ins-today-sId') !== spApi.getGAStyleSesId()) {
                                coeffWeekly.today = 1;
                            }
                        },
                        searchKeywords: function() {
                            coeffSession.searchKeywords = coeffSession.searchKeywords || spApi.getSearchKeyWords() || '';
                        },
                        productPrices: function() {
                            if (self.helper.evalRule('product') && spApi.getCurrentProduct().price) {
                                coeffSession.totalProductPrices += parseFloat(spApi.getCurrentProduct().price);
                                coeffSession.productPrices.push(parseFloat(spApi.getCurrentProduct().price));
                            }
                        },
                        visitedProducts: function() {
                            if (self.helper.evalRule('product')) {
                                var id = spApi.getCurrentProduct().id;
                                if (coeffSession.visitedProducts.indexOf(id) === -1) {
                                    id !== null && coeffSession.visitedProducts.push(id);
                                } else {
                                    coeffSession.theSameProduct = 1;
                                }
                            }
                        },
                        landingType: function() {
                            if (!coeffSession.landing.active) {
                                var pageType = self.helper.getPageType();
                                coeffSession.landing.active = pageType;
                                coeffSession.landing[pageType] = 1;
                                coeffDaily[currentDate]['landing'][pageType]++;
                            }
                        },
                        pageVisitCount: function() {
                            if (coeffSession.count.product === 0 && coeffSession.count.total === 0) {
                                coeffDaily[currentDate].count.product += coeffDaily[currentDate].count.productSession;
                                coeffDaily[currentDate].count.total += coeffDaily[currentDate].count.totalSession;
                            }
                            var pageTypes = Object.keys(coeffSession.count);
                            pageTypes.forEach(function(pageType) {
                                if (self.helper.evalRule(pageType))
                                    coeffSession.count[pageType]++;
                                if (pageType === 'total')
                                    coeffSession.count.total++;
                            });
                            coeffDaily[currentDate].count.totalSession = coeffSession.count.total;
                            coeffDaily[currentDate].count.productSession = coeffSession.count.product;
                        },
                        sessionDuration: function() {
                            var fTimeSession = coeffSession.duration.fTimeSession;
                            if (fTimeSession == 0) {
                                coeffSession.duration.fTimeSession = new Date().getTime();
                            }
                            var sessionDuration = (new Date().getTime() - coeffSession.duration.fTimeSession) / 1000;
                            coeffSession.duration.session = Math.round(sessionDuration);
                        },
                        productDuration: function() {
                            var visitTime = coeffSession.duration.fTimeProduct;
                            if (visitTime != 0) {
                                coeffSession.duration.fTimeProduct = 0;
                                coeffSession.duration.product += Math.round((new Date().getTime() - visitTime) / 1000);
                            }
                            if (self.helper.evalRule('product') && coeffSession.duration.fTimeProduct === 0) {
                                coeffSession.duration.fTimeProduct = new Date().getTime();
                            }
                        },
                        longPageDuration: function() {
                            var visitTime = coeffSession.duration.fTimeLongProduct;
                            if (visitTime) {
                                coeffSession.duration.fTimeLongProduct = 0;
                                var productTime = Math.round((new Date().getTime() - visitTime) / 1000);
                                if (productTime > coeffSession.duration.longProduct) {
                                    coeffSession.duration.longProduct = productTime;
                                }
                            }
                            if (self.helper.evalRule('product') && coeffSession.duration.fTimeLongProduct === 0) {
                                coeffSession.duration.fTimeLongProduct = new Date().getTime();
                            }
                        },
                        weeklySessionDuration: function() {
                            var lastSession = coeffDaily[currentDate].duration.lastSession;
                            coeffDaily[currentDate].duration.lastSession = coeffSession.duration.session;
                            if (coeffDaily[currentDate].duration.lastSession === 0) {
                                coeffDaily[currentDate].duration.session += lastSession;
                            }
                        },
                        weeklySessionCount: function() {
                            var lastSession = coeffDaily[currentDate].count.lastSession;
                            coeffDaily[currentDate].count.lastSession = coeffSession.duration.session > 0 ? 1 : 0;
                            if (coeffDaily[currentDate].count.lastSession === 0) {
                                coeffDaily[currentDate].count.session += lastSession;
                            }
                        }
                    }
                };
                var coeffDaily = {};
                var coeffSession = JSON.parse(spApi.storageData(storageName.session)) || (spApi.storageData(storageName.session, coeffHolder.session),
                coeffHolder.session);
                self.helper.setCoeffDaily();
                return self.run();
            },
            checkPredictiveData: function(data, logic, predictiveType, segment) {
                try {
                    if (predictiveType === '877011ba37a21a70213548384415253c') {
                        var campId = spApi.userSegments[segment];
                        return spApi.e('true' + logic + !!spApi.assertThresholdExceeded(campId));
                    }
                    var checkMultipleType = function(dataArray, logic, predictiveType) {
                        if (typeof dataArray !== 'object' && dataArray.length === 0)
                            return false;
                        return sQuery(dataArray).filter(function(key, value) {
                            return spApi.e('("' + value + '" ' + logic + ' "' + predictiveType + '")')
                        }).get().length > 0;
                    };
                    if (spApi.storageData('predictiveData') != null) {
                        var predictiveData = JSON.parse(spApi.storageData('predictiveData'));
                        if (predictiveType === 'income') {
                            if (spApi.isset(predictiveData.income)) {
                                return spApi.e('("' + data + '" ' + logic + ' "' + predictiveData.income + '")');
                            } else {
                                return;
                            }
                        } else if (predictiveType === 'ltv') {
                            if (spApi.isset(predictiveData.ltv)) {
                                return spApi.e('("' + data + '" ' + logic + ' "' + predictiveData.ltv + '")');
                            } else {
                                return;
                            }
                        } else if (predictiveType === 'bc3ab865bb7131650a727b346645c64b') {
                            if (spApi.isset(predictiveData['e19666c9c6f70744654a1003ddc2ad9a'])) {
                                if (data === 'c024fa3703421a2334e3ff067fa971ea') {
                                    return checkMultipleType(['74e8ac53abe33f482276e98cd2e76fc4', 'af99ab0fd4cbb72f9b003584e9b59d76', 'c560030ee3155d36d3a127f001a38280'], '==', predictiveData['e19666c9c6f70744654a1003ddc2ad9a']);
                                } else if (data === 'e570242afe3562249ad2ac9418f6f980') {
                                    return checkMultipleType(['16705a11be0c14b0194a9ce6929cbd07', 'c4e056aa1a2cbdcdadb72f19c3c2407f', 'ecaeaa2bb1e0f6facac0a9c0a631d670'], '==', predictiveData['e19666c9c6f70744654a1003ddc2ad9a']);
                                } else if (data === 'cb1ac03422161635629f804eddfd9563') {
                                    return checkMultipleType(['ac3d3d01bdbfd09bf85a2770f3385140', 'ac182f1b00e973cd68ed69c658c3f676', 'ee8f1b03a69930ecc5351f7e80153acf'], '==', predictiveData['e19666c9c6f70744654a1003ddc2ad9a']);
                                }
                                return spApi.e('("' + data + '" == "' + predictiveData['e19666c9c6f70744654a1003ddc2ad9a'] + '")');
                            }
                        } else if (predictiveType === 'e927dd68b6a25b29921183cec7ad1132' && spApi.isset(predictiveData[predictiveType])) {
                            if (data === '24701ec646389246ec7e6f635cb1f0ed') {
                                return checkMultipleType(['2c664ca03186098d9ea6edf245eedba2', '61452b5c6f9f66b494d69a457ced89fc', '458e21097f66008c2dacc352d05ec6ba'], '==', predictiveData[predictiveType]);
                            } else if (data === '7b7c968f018eacbfb71bcc0a6ceb9003') {
                                return checkMultipleType(['ac5ef9816bb4140fde2a0916c4ce26e3', '2ad9a03cf549f37cb98139d3d96b8dd6', '824297aa36228ea5c6897a24f43528b3'], '==', predictiveData[predictiveType]);
                            }
                            return spApi.e('("' + data + '" == "' + predictiveData[predictiveType] + '")');
                        } else if (predictiveType === '438814694832bc8b37e497670555220c') {
                            if (spApi.isset(predictiveData['438814694832bc8b37e497670555220c'])) {
                                try {
                                    var discountAffinityResult = logic === '!=';
                                    sQuery.each(data, function(index, discountAffinityValue) {
                                        var expression = '("' + discountAffinityValue + '"' + logic + '"' + predictiveData['438814694832bc8b37e497670555220c'] + '")';
                                        if (logic === '!=') {
                                            discountAffinityResult = discountAffinityResult && spApi.e(expression);
                                        } else {
                                            discountAffinityResult = discountAffinityResult || spApi.e(expression);
                                        }
                                    });
                                    return discountAffinityResult;
                                } catch (e) {
                                    return false;
                                }
                            }
                        } else if (predictiveType === '98ea20a90e2a43f4dd0122031530f1bf') {
                            if (spApi.isset(predictiveData['98ea20a90e2a43f4dd0122031530f1bf'])) {
                                var localPredictiveConversionRange = predictiveData['98ea20a90e2a43f4dd0122031530f1bf'];
                                var currentTimestamp = (new Date()).getTime();
                                var upperTimestamp = (new Date(localPredictiveConversionRange['02bb4e5e4312bb8b3dc4d6d239ae10e3'])).getTime();
                                var lowerTimestamp = (new Date(localPredictiveConversionRange['8f5749b96213fcbbcc60948db743eb5e'])).getTime();
                                if (logic === '==') {
                                    return lowerTimestamp <= currentTimestamp && upperTimestamp >= currentTimestamp;
                                } else if (lowerTimestamp > currentTimestamp || upperTimestamp < currentTimestamp) {
                                    return true;
                                }
                                return false;
                            }
                        } else if (predictiveType == '7063beffe5593f6a2124f8f4c6a757ef') {
                            if (spApi.isset(predictiveData['7063beffe5593f6a2124f8f4c6a757ef'])) {
                                return spApi.e('("' + data + '" ' + logic + ' "' + predictiveData[predictiveType] + '")');
                            }
                            return false;
                        } else if (predictiveType === '4327dc3d3d22a373f7a55ed9a349bb65') {
                            if (spApi.isset(predictiveData['4327dc3d3d22a373f7a55ed9a349bb65'])) {
                                var churnDate = (new Date(predictiveData[predictiveType])).getTime();
                                if (isNaN(churnDate) || churnDate === 0) {
                                    return false;
                                }
                                if (((new Date()).getTime() - churnDate) <= 7 * 24 * 60 * 60 * 1000) {
                                    return true;
                                }
                            }
                            return false;
                        }
                        if (predictiveType) {
                            if (spApi.isset(predictiveData[predictiveType])) {
                                return spApi.e('("' + data + '" ' + logic + ' "' + predictiveData[predictiveType] + '")');
                            } else {
                                return;
                            }
                        }
                    } else {
                        return false;
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'checkPredictiveData',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            checkCrmAttributeData: function(attributeName, logic, value) {
                if (spApi.storageData('predictiveData') != null) {
                    var predictiveData = JSON.parse(spApi.storageData('predictiveData'));
                    if (spApi.isset(predictiveData['d43a64fc68d2268b0d8682449817f24a'])) {
                        var crmAttribute = predictiveData['d43a64fc68d2268b0d8682449817f24a'][attributeName];
                        var attributeType = spApi.crmAttributes[attributeName];
                        if (typeof crmAttribute !== 'undefined') {
                            if (attributeType === 'Date') {
                                var formatedValue = value.split('/');
                                var date = new Date(formatedValue[2] + '-' + formatedValue[1] + '-' + formatedValue[0]).getTime();
                                return spApi.e('("' + new Date(crmAttribute.split(' ')[0]).getTime() + '" ' + logic + ' "' + date + '")');
                            } else if (attributeType === 'Number') {
                                return spApi.e('(' + parseInt(crmAttribute) + ' ' + logic + ' ' + parseInt(value) + ')');
                            } else if (attributeType === 'String' && logic.indexOf('indexOf') > -1) {
                                return spApi.e('"' + crmAttribute + '"' + logic.replace('()', '("' + value + '")'));
                            }
                            return spApi.e('("' + crmAttribute + '" ' + logic + ' "' + value + '")');
                        }
                    }
                }
                return false;
            },
            checkPredictivePurchaseData: function(data, logic, predictiveType, from, to) {
                try {
                    if (spApi.storageData('predictiveData') != null) {
                        var predictiveData = JSON.parse(spApi.storageData('predictiveData'));
                        if (predictiveType == '8760ab4926723fe6e7b63b66a6f86961') {
                            if (spApi.isset(predictiveData['0bff474b3949eba68df4fc1c2dc18bc8'])) {
                                var pData = new Date(predictiveData['0bff474b3949eba68df4fc1c2dc18bc8']).getTime();
                                if (logic === 'cfd9b5a201da02cea83c199ce9490396') {
                                    from = from * 1000;
                                    to = to * 1000;
                                    return spApi.e('(' + pData + ' >= ' + from + ' && ' + pData + ' <= ' + to + ')');
                                } else {
                                    data = (new Date().getTime()) - (data * 24 * 60 * 60 * 1000);
                                    return spApi.e('(' + data + ' <= ' + pData + ')');
                                }
                            }
                        } else if (predictiveType == '29d708ce4cabffb26a49da05c0547bd5') {
                            if (spApi.isset(predictiveData['6c7635e04f6f81b4dbbb6ec4fa73a53e'])) {
                                if (logic === 'cfd9b5a201da02cea83c199ce9490396') {
                                    var pData = new Date(predictiveData['6c7635e04f6f81b4dbbb6ec4fa73a53e']).getTime();
                                    from = from * 1000;
                                    to = to * 1000;
                                    return spApi.e('(' + pData + ' >= ' + from + ' && ' + pData + ' <= ' + to + ')');
                                } else {
                                    var pData = new Date(predictiveData['6c7635e04f6f81b4dbbb6ec4fa73a53e']).getTime();
                                    data = (new Date().getTime()) - (data * 24 * 60 * 60 * 1000);
                                    return spApi.e('(' + data + ' <= ' + pData + ')');
                                }
                            }
                        } else if (predictiveType === 'cc25fdb9ebefc9b93b09b12a3bfc9ab6') {
                            if (spApi.isset(predictiveData['40be19085c9a550324cd63691dadac1e'])) {
                                var pData = parseInt(predictiveData['40be19085c9a550324cd63691dadac1e']);
                                return spApi.e('(' + pData + ' >= parseInt(' + from + ') && ' + pData + ' <= parseInt(' + to + '))');
                            }
                        }
                    }
                    return false;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'checkPredictivePurchaseData',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            checkPredictiveAmountData: function(data, logic, predictiveType, from, to, amount, operator) {
                function setAmountData(purchase_hist, type, data, from, to) {
                    var count = 0;
                    var sum = 0;
                    var avg = 0;
                    if (spApi.objKeys(purchase_hist)) {
                        sQuery.each(purchase_hist, function(orderDate, price) {
                            if (type == 'cfd9b5a201da02cea83c199ce9490396') {
                                var fromDate = from * 1000;
                                var toDate = to * 1000;
                                var pDate = new Date(orderDate).getTime();
                                if (pDate >= fromDate && pDate <= toDate) {
                                    sum += parseInt(price);
                                    count++;
                                }
                            } else if (type == 'a84916e91e31c7247eb2377392f6d019') {
                                var pDate = new Date(orderDate).getTime();
                                var lastDate = (new Date().getTime()) - (data * 24 * 60 * 60 * 1000);
                                if (lastDate <= pDate) {
                                    sum += parseInt(price);
                                    count++;
                                }
                            } else {
                                sum += parseInt(price);
                                count++;
                            }
                        });
                    }
                    avg = (count > 0) ? Math.round(sum / count) : avg;
                    return {
                        count: count,
                        sum: sum,
                        avg: avg
                    };
                }
                try {
                    if (spApi.storageData('predictiveData') != null) {
                        var predictiveData = JSON.parse(spApi.storageData('predictiveData'));
                        if (typeof predictiveData['6d690be714b965394b3451b4de4d9d6b'] !== 'undefined') {
                            var result = setAmountData(predictiveData['6d690be714b965394b3451b4de4d9d6b'], logic, data, from, to);
                            if (predictiveType === '31ac7017aedaeeb0ef50b1632d452f7f') {
                                return spApi.e('(' + result.avg + ' ' + operator + ' ' + amount + ')');
                            } else if (predictiveType === 'a0d14a321d3af582094251b0a7ea90f1') {
                                return spApi.e('(' + result.sum + ' ' + operator + ' ' + amount + ')');
                            } else if (predictiveType === 'c6e1fa99dc9669cdc18a56b45738c3c2') {
                                return spApi.e('(' + result.count + ' ' + operator + ' ' + amount + ')');
                            }
                        }
                    }
                    return false;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'checkPredictiveAmountData',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            newReturningUser: function(logics) {
                try {
                    var result = false;
                    if (logics === 'new') {
                        result = (localStorage.getItem('userDateV') === null || JSON.parse(localStorage.getItem('userDateV')).length <= 1);
                    } else if (logics === 'returning') {
                        result = (JSON.parse(localStorage.getItem('userDateV')) || []).length > 1;
                    }
                    return result;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'newReturningUser',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            checkAnalyticsSegmentByDateCount: function(pastDayCount, analyticsSegmentId, personalizationId) {
                if (localStorage.getItem('gaSegment-' + personalizationId) != null) {
                    return spApi.e(localStorage.getItem('gaSegment-' + personalizationId)) === 1;
                }
                return false;
            },
            checkAnalyticsSegmentByDateRange: function(fromDate, toDate, analyticsSegmentId, personalizationId) {
                if (localStorage.getItem('gaSegment-' + personalizationId) != null) {
                    return spApi.e(localStorage.getItem('gaSegment-' + personalizationId)) === 1;
                }
                return false;
            },
            checkBehavioralSegmentsByPurchasedDay: function(lastPurchasedDays, purchaseStatus) {
                try {
                    if (spApi.storageData('predictiveData') != null) {
                        var predictiveData = JSON.parse(spApi.storageData('predictiveData'));
                        var returnStatus = false;
                        if (predictiveData.purchased === true) {
                            var lastPurchasedDate = new Date('' + predictiveData.last_purchase_date + '');
                            var currentDate = new Date();
                            var timeDiff = Math.abs(currentDate.getTime() - lastPurchasedDate.getTime());
                            var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
                            if (purchaseStatus === 'true') {
                                returnStatus = diffDays <= lastPurchasedDays;
                            } else if (purchaseStatus === 'false') {
                                returnStatus = diffDays >= lastPurchasedDays;
                            }
                        } else {
                            returnStatus = false;
                        }
                    } else {
                        returnStatus = false;
                    }
                    return returnStatus;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'checkBehavioralSegmentsByPurchasedDay',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            checkBehavioralSegmentsByPurchaseAmount: function(purchaseAmount, logic) {
                try {
                    if (spApi.storageData('predictiveData') != null) {
                        var predictiveData = JSON.parse(spApi.storageData('predictiveData'));
                        if (spApi.isset(predictiveData.last_purchase_amount) && predictiveData.purchased === true) {
                            return spApi.e('("' + predictiveData.last_purchase_amount + '" ' + logic + ' "' + purchaseAmount + '")');
                        } else {
                            return false;
                        }
                    } else {
                        return false;
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'checkBehavioralSegmentsByPurchaseAmount',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            checkProductByCategory: function(daycount, category, persId, actionType) {
                try {
                    var hdata = localStorage.getItem('partnerSegmentData');
                    if (hdata != null) {
                        hdata = JSON.parse(hdata);
                        if (spApi.isset(hdata[persId + '-' + actionType + ''])) {
                            return spApi.objKeys(hdata[persId + '-' + actionType + '']);
                        } else {
                            return false;
                        }
                    } else {
                        return false;
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'checkProductByCategory',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            checkCustomSegmentRules: function(customSegmentId) {
                return spApi.storageData('cus' + customSegmentId) !== null;
            },
            checkAdAudience: function(type, percent, personalizationId) {
                try {
                    var camp = (function(personalizationId) {
                        var currentCamp;
                        sQuery.each(spApi.personalizationCamps[personalizationId].variations, function(index, variation) {
                            if (variation.ratio == 100) {
                                currentCamp = spApi.getCamp(variation.varId).camp;
                            }
                        });
                        return currentCamp;
                    }
                    )(personalizationId);
                    var result;
                    if (result = spApi.assertThresholdExceeded(camp.id)) {
                        if (typeof spApi.coeff.runSuccessCallback === 'undefined' && spApi.storageData('thresholdLogSent') === null) {
                            spApi.coeff.runSuccessCallback = true;
                            spApi.sendThresholdLog(result, camp.id);
                        }
                        return true;
                    }
                    return false;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'Ad-Audience Error.',
                        bugType: 'partner',
                        extraData: {
                            'function': 'checkAudienceLikelihoodPurchase'
                        }
                    });
                }
            },
            checkPredictiveInterestCluster: function(interestClusterId, operator) {
                try {
                    if (spApi.storageData('predictiveData') != null) {
                        var interestClusterData = JSON.parse(spApi.storageData('predictiveData'));
                        return spApi.e('("' + interestClusterId + '" ' + operator + ' "' + interestClusterData['ba203f68aa87350c447e28ca375bb57d'] + '")');
                    } else {
                        return false;
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'Interest Cluster Rule Error',
                        bugType: 'partner',
                        extraData: {
                            'function': 'checkInterestCluster'
                        }
                    });
                    return false;
                }
            },
            sendThresholdLog: function(result, campId) {
                if (spApi.storageData('thresholdLogSent') === null) {
                    spApi.storageData('thresholdLogSent', '1', {
                        path: '/',
                        expires: 1,
                        domain: cookieDomain
                    });
                    spApi.coeff.passed = true;
                    spApi.logger('info', 'Sending threshold logs...');
                    sQuery.ajax({
                        type: 'get',
                        url: spApi.apiUrl + 'ajax.php?t=sendThresholdLog',
                        data: {
                            userId: sQuery.cookie('spUID') || spApi.localStorageGet('spUID'),
                            globalId: spApi.getGlobalUserIdFromLocalStorage(),
                            version: result.coeff.v,
                            c: JSON.stringify(result.coeff.f),
                            threshold: result.threshold,
                            score: result.value,
                            isMobile: spApi.isMobileBrowser(),
                            sessionId: spApi.getGAStyleSesId(),
                            campId: campId
                        }
                    });
                }
            },
            personalizationSetStatus: false,
            preferredCurrency: "TRY",
            supportedCurrencies: [],
            globalExperiment: {
                "panelStatus": 0,
                "status": 0,
                "ARate": 90,
                "BRate": 10,
                "gaPush": 0
            },
            shownCampLimit: {
                "status": 0,
                "maxCount": 3,
                "timeSpan": 1
            },
            genDate: 1548864072,
            apiUrl: protocol + "ikea.api.useinsider.com/",
            notFoundLogUrl: "https://404.api.sociaplus.com/log.png",
            staticUrl: protocol + "static.api.useinsider.com/",
            frameUrl: "https://ikea.api.useinsider.com/frame.php",
            target: sQuery("#partnerTarget"),
            camps: [{
                "id": "30",
                "campName": "|-x-|RmxvYXRpbmclMjBDYXJ0JTIwLSUyMFRS",
                "showIn": {
                    "segment": null,
                    "trigger": [75]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "4",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1529911920",
                "activeDateEnd": "1782891120",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "32",
                "campName": "|-x-|RmxvYXRpbmclMjBDYXJ0JTIwLSUyMEVORw==",
                "showIn": {
                    "trigger": [87],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "4",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "en_US",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1530009300",
                "activeDateEnd": "1749724500",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "58",
                "campName": "|-x-|U1RVVkElMjBhcmFtYSUyMGJhbm5lciUyMERlc2t0b3A=",
                "showIn": {
                    "trigger": [113],
                    "segment": [114]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1531398480",
                "activeDateEnd": "1815139920",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "62",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDE0NjkwMTQw",
                "showIn": {
                    "trigger": [115]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1531406100",
                "activeDateEnd": "1660228260",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "1",
                "closeControlLimit": "1",
                "noteType": "-1",
                "saLogDuration": "24",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "targetingConditionAlias": ["bounce"],
                "conditionNeeds": {
                    "bounce": 1,
                    "scroll": 0
                },
                "isBounce": 1,
                "isScroll": 0
            }, {
                "id": "97",
                "campName": "|-x-|RW1vamklMjBBbmtldA==",
                "showIn": {
                    "trigger": [134]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1533545520",
                "activeDateEnd": "1631091120",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "99",
                "campName": "|-x-|QmlsZGlyaW1sZXJpJTIwRW5nZWxsZXllbmxlcmxlJTIwJUM0JUIwbGV0aSVDNSU5Rmlt",
                "showIn": {
                    "trigger": [138]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1533632220",
                "activeDateEnd": "1662454620",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "101",
                "campName": "|-x-|TGlrZWxpaG9vZCUyMHRvJTIwUHVyY2hhc2U=",
                "showIn": {
                    "segment": [141]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "32",
                "priority": "0",
                "trigTimeOut": "0",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "all_ALL",
                "isVisible": "1",
                "targetingCamp": "-1",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1533724680",
                "activeDateEnd": "1883212680",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "0",
                    "join": "0",
                    "sales": "0",
                    "close": "0",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "all",
                "isLTPCampaign": true,
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "114",
                "campName": "|-x-|Q2h1cm4=",
                "showIn": {
                    "segment": [157]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "32",
                "priority": "0",
                "trigTimeOut": "0",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "all_ALL",
                "isVisible": "1",
                "targetingCamp": "-1",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1536328020",
                "activeDateEnd": "1885816020",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "0",
                    "join": "0",
                    "sales": "0",
                    "close": "0",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "all",
                "isLTPCampaign": false,
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "116",
                "campName": "|-x-|QW5rZXQlMjBEZXNrdG9w",
                "showIn": {
                    "trigger": [158]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1536822000",
                "activeDateEnd": "1601547360",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "128",
                "campName": "|-x-|TW9iaWxlJTIwQ2FydCUyMFJlbWluZGVyJTIwLSUyMFRS",
                "showIn": {
                    "trigger": [176],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "3",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538737800",
                "activeDateEnd": "1667579400",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "24",
                "closeControlLimit": "24",
                "noteType": "-1",
                "saLogDuration": "24",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "130",
                "campName": "|-x-|TW9iaWxlJTIwQ2FydCUyMFJlbWluZGVyJTIwLSUyMEVO",
                "showIn": {
                    "trigger": [181],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "3",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "en_US",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538738820",
                "activeDateEnd": "1665664200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "24",
                "closeControlLimit": "24",
                "noteType": "-1",
                "saLogDuration": "24",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "132",
                "campName": "|-x-|UHJvZHVjdCUyMFBhZ2UlMjBWaWV3JTIwdG8lMjBWaWV3",
                "showIn": {
                    "trigger": [184]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "-1",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538751480",
                "activeDateEnd": "1548880500",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "168",
                "closeControlLimit": "168",
                "noteType": "-1",
                "saLogDuration": "168",
                "cookieTime": "7",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "148",
                "campName": "|-x-|Q2FydCUyMFBhZ2UlMjBCdXklMjB0byUyMEJ1eQ==",
                "showIn": {
                    "trigger": [185],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538751720",
                "activeDateEnd": "1577737800",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "139",
                "campName": "|-x-|SW50ZXJuZXQlMjBNYWdhemFzaQ==",
                "showIn": {
                    "trigger": [186],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538752320",
                "activeDateEnd": "1699888560",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "162",
                "campName": "|-x-|RUtUT1JQJTIwYXJhbWElMjB5YXBhbmElMkYlQzMlQkNyJUMzJUJDbiUyMGJha2FuYSUyMHBvcHVw",
                "showIn": {
                    "trigger": [216],
                    "segment": [217]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539662220",
                "activeDateEnd": "1856239200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "170",
                "campName": "|-x-|S0lWSUslMjBhcmFtYSUyMHlhcGFuYSUyRiVDMyVCQ3IlQzMlQkNuJTIwYmFrYW5hJTIwcG9wdXA=",
                "showIn": {
                    "trigger": [218],
                    "segment": [219]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539849540",
                "activeDateEnd": "1761213600",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "172",
                "campName": "|-x-|RlJJSEVURU4lMjBhcmFtYSUyMHlhcGFuYSUyRiVDMyVCQ3IlQzMlQkNuJTIwYmFrYW5hJTIwcG9wdXA=",
                "showIn": {
                    "trigger": [220],
                    "segment": [221]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539953940",
                "activeDateEnd": "1886425200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "174",
                "campName": "|-x-|U09ERVJIQU1OJTIwYXJhbWElMjB5YXBhbmElMkYlQzMlQkNyJUMzJUJDbiUyMGJha2FuYSUyMHBvcHVw",
                "showIn": {
                    "trigger": [222],
                    "segment": [223]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539954540",
                "activeDateEnd": "1854370800",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "270",
                "campName": "|-x-|VVRNJTIwS3Vwb24lMjBEaXNwbGF5JTIwdmUlMjBDQ0E=",
                "showIn": {
                    "trigger": [298]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "1551398400",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "-1",
                "activeDateStart": "1545809400",
                "activeDateEnd": "1645990200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "-1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "2",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "285",
                "campName": "|-x-|VVRNJTIwS3Vwb24lMjBEaXNwbGF5JTIwdmUlMjBDQ0ElMjBBdXRvJTIwQ2xpY2tlZA==",
                "showIn": {
                    "trigger": [298]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "1551398400",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "-1",
                "activeDateStart": "1545809400",
                "activeDateEnd": "1645990200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "-1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "2",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "302",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDMyNjQ0ODg3",
                "showIn": {
                    "trigger": [301]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "-1",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1546381500",
                "activeDateEnd": "1645136700",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "288",
                "campName": "|-x-|QW5rZXQlMjBEZW5lbWUlMjBEZXNrdG9w",
                "showIn": {
                    "trigger": [307]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1547226480",
                "activeDateEnd": "1564086600",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "297",
                "campName": "|-x-|U29uJTIwR2V6aWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVy",
                "showIn": {
                    "trigger": [313]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548009660",
                "activeDateEnd": "1675536060",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "1",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "299",
                "campName": "|-x-|SGFtYnVyZ2VyJTIwTWVudSUyME9uJTIwUGFnZQ==",
                "showIn": {
                    "trigger": [314]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548011640",
                "activeDateEnd": "1550435400",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "306",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDQ1Nzg3Mzc1",
                "showIn": {
                    "trigger": [318]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548073260",
                "activeDateEnd": "1740054060",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "310",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDI1MjIyMjcz",
                "showIn": {
                    "trigger": [319],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "-1",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548078180",
                "activeDateEnd": "1550756820",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "318",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDE3MTE5NTQx",
                "showIn": {
                    "trigger": [326]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548228960",
                "activeDateEnd": "1550907360",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "320",
                "campName": "|-x-|JUMzJTlDciVDMyVCQ24lQzMlQkMlMjBTZXBldGUlMjBFa2xl",
                "showIn": {
                    "trigger": [330]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548320640",
                "activeDateEnd": "1645002240",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "332",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDc1MTQ2Nzkw",
                "showIn": {
                    "segment": null,
                    "trigger": [343]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "-1",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548678060",
                "activeDateEnd": "1549225800",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "336",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDIxMTg5NTk4",
                "showIn": {
                    "trigger": [347]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "all_ALL",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548749160",
                "activeDateEnd": "1551427560",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "338",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDU1NzA0Nzc1",
                "showIn": {
                    "trigger": [350]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1546338000",
                "activeDateEnd": "1554027600",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "341",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDIyMTc3NDQ1",
                "showIn": {
                    "trigger": [351]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548794340",
                "activeDateEnd": "1551472740",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "343",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDgyNTA3MTI0",
                "showIn": {
                    "trigger": [353]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548824640",
                "activeDateEnd": "1551503040",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "29",
                "campName": "|-x-|RmxvYXRpbmclMjBDYXJ0LUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBNTQlMjk=",
                "showIn": {
                    "segment": null,
                    "trigger": [75]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "4",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1529911920",
                "activeDateEnd": "1782891120",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "31",
                "campName": "|-x-|RmxvYXRpbmclMjBDYXJ0JTIwLSUyMEVORy1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTY4JTI5",
                "showIn": {
                    "trigger": [87],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "4",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "en_US",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1530009300",
                "activeDateEnd": "1749724500",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "57",
                "campName": "|-x-|U1RVVkElMjBhcmFtYSUyMGJhbm5lciUyMERlc2t0b3AlMjAtJTIwQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0E5MSUyOQ==",
                "showIn": {
                    "trigger": [113],
                    "segment": [114]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1531398480",
                "activeDateEnd": "1815139920",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "60",
                "campName": "|-x-|VGVtYSUyMEdhbWUtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0E5MiUyOQ==",
                "showIn": {
                    "trigger": [115]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1531406100",
                "activeDateEnd": "1660228260",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "1",
                "closeControlLimit": "1",
                "noteType": "-1",
                "saLogDuration": "24",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "targetingConditionAlias": ["bounce"],
                "conditionNeeds": {
                    "bounce": 1,
                    "scroll": 0
                },
                "isBounce": 1,
                "isScroll": 0
            }, {
                "id": "96",
                "campName": "|-x-|RW1vamklMjBBbmtldC1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTEyMSUyOQ==",
                "showIn": {
                    "trigger": [134]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1533545520",
                "activeDateEnd": "1631091120",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "98",
                "campName": "|-x-|QmlsZGlyaW1sZXJpJTIwRW5nZWxsZXllbmxlcmxlJTIwJUM0JUIwbGV0aSVDNSU5RmltLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTI0JTI5",
                "showIn": {
                    "trigger": [138]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1533632220",
                "activeDateEnd": "1662454620",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "100",
                "campName": "|-x-|TGlrZWxpaG9vZCUyMHRvJTIwUHVyY2hhc2UtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExMjUlMjk=",
                "showIn": {
                    "segment": [141]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "32",
                "priority": "0",
                "trigTimeOut": "0",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "all_ALL",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1533724680",
                "activeDateEnd": "1883212680",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "0",
                    "join": "0",
                    "sales": "0",
                    "close": "0",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "all",
                "isLTPCampaign": true,
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "113",
                "campName": "|-x-|Q2h1cm4tQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExMzglMjk=",
                "showIn": {
                    "segment": [157]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "32",
                "priority": "0",
                "trigTimeOut": "0",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "all_ALL",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1536328020",
                "activeDateEnd": "1885816020",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "0",
                    "join": "0",
                    "sales": "0",
                    "close": "0",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "all",
                "isLTPCampaign": false,
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "115",
                "campName": "|-x-|QW5rZXQlMjBEZXNrdG9wLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTM5JTI5",
                "showIn": {
                    "trigger": [158]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1536822000",
                "activeDateEnd": "1601547360",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "127",
                "campName": "|-x-|TW9iaWxlJTIwQ2FydCUyMFJlbWluZGVyJTIwLSUyMFRSLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTUwJTI5",
                "showIn": {
                    "trigger": [176],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "3",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538737800",
                "activeDateEnd": "1667579400",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "24",
                "closeControlLimit": "24",
                "noteType": "-1",
                "saLogDuration": "24",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "129",
                "campName": "|-x-|TW9iaWxlJTIwQ2FydCUyMFJlbWluZGVyJTIwLSUyMEVOLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTUxJTI5",
                "showIn": {
                    "trigger": [181],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "3",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "en_US",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538738820",
                "activeDateEnd": "1665664200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "24",
                "closeControlLimit": "24",
                "noteType": "-1",
                "saLogDuration": "24",
                "cookieTime": "1",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "131",
                "campName": "|-x-|UHJvZHVjdCUyMFBhZ2UlMjBWaWV3JTIwdG8lMjBWaWV3LUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTUyJTI5",
                "showIn": {
                    "trigger": [184]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538751480",
                "activeDateEnd": "1548880500",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "168",
                "closeControlLimit": "168",
                "noteType": "-1",
                "saLogDuration": "168",
                "cookieTime": "7",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "133",
                "campName": "|-x-|Q2FydCUyMFBhZ2UlMjBCdXklMjB0byUyMEJ1eS1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTE1MyUyOQ==",
                "showIn": {
                    "trigger": [185],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538751720",
                "activeDateEnd": "1577737800",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "138",
                "campName": "|-x-|SW50ZXJuZXQlMjBNYWdhemFzaS1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTE1NCUyOQ==",
                "showIn": {
                    "trigger": [186],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1538752320",
                "activeDateEnd": "1699888560",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "161",
                "campName": "|-x-|RUtUT1JQJTIwYXJhbWElMjB5YXBhbmElMkYlQzMlQkNyJUMzJUJDbiUyMGJha2FuYSUyMHBvcHVwLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTc4JTI5",
                "showIn": {
                    "trigger": [216],
                    "segment": [217]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539662220",
                "activeDateEnd": "1856239200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "169",
                "campName": "|-x-|S0lWSUslMjBhcmFtYSUyMHlhcGFuYSUyRiVDMyVCQ3IlQzMlQkNuJTIwYmFrYW5hJTIwcG9wdXAtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExODIlMjk=",
                "showIn": {
                    "trigger": [218],
                    "segment": [219]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539849540",
                "activeDateEnd": "1761213600",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "171",
                "campName": "|-x-|RlJJSEVURU4lMjBhcmFtYSUyMHlhcGFuYSUyRiVDMyVCQ3IlQzMlQkNuJTIwYmFrYW5hJTIwcG9wdXAtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExODMlMjk=",
                "showIn": {
                    "trigger": [220],
                    "segment": [221]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539953940",
                "activeDateEnd": "1886425200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "173",
                "campName": "|-x-|U09ERVJIQU1OJTIwYXJhbWElMjB5YXBhbmElMkYlQzMlQkNyJUMzJUJDbiUyMGJha2FuYSUyMHBvcHVwLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTg0JTI5",
                "showIn": {
                    "trigger": [222],
                    "segment": [223]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1539954540",
                "activeDateEnd": "1854370800",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "268",
                "campName": "|-x-|VVRNJTIwS3Vwb24lMjBEaXNwbGF5JTIwdmUlMjBDQ0EtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyNTElMjk=",
                "showIn": {
                    "trigger": [298]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1545809400",
                "activeDateEnd": "1645990200",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "274",
                "campName": "|-x-|YXNkLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjU2JTI5",
                "showIn": {
                    "trigger": [301]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1546381500",
                "activeDateEnd": "1645136700",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "287",
                "campName": "|-x-|QW5rZXQlMjBEZW5lbWUlMjBEZXNrdG9wLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjY2JTI5",
                "showIn": {
                    "trigger": [307]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1547226480",
                "activeDateEnd": "1564086600",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "296",
                "campName": "|-x-|U29uJTIwR2V6aWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVyLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjcwJTI5",
                "showIn": {
                    "trigger": [313]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548009660",
                "activeDateEnd": "1675536060",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "1",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "298",
                "campName": "|-x-|SGFtYnVyZ2VyJTIwTWVudSUyME9uJTIwUGFnZS1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTI3MSUyOQ==",
                "showIn": {
                    "trigger": [314]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548011640",
                "activeDateEnd": "1550435400",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "305",
                "campName": "|-x-|U2xpZGVUbyUyMEFkZCUyMHRvJTIwY2FydCUyMHRlc3QtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyNzQlMjk=",
                "showIn": {
                    "trigger": [318]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548073260",
                "activeDateEnd": "1740054060",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "309",
                "campName": "|-x-|YWRkVG9DYXJ0JTIwVGVzdC1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTI3NiUyOQ==",
                "showIn": {
                    "trigger": [319],
                    "segment": null
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548078180",
                "activeDateEnd": "1550756820",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "317",
                "campName": "|-x-|dGVzdHQtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyODAlMjk=",
                "showIn": {
                    "trigger": [326]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548228960",
                "activeDateEnd": "1550907360",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "319",
                "campName": "|-x-|JUMzJTlDciVDMyVCQ24lQzMlQkMlMjBTZXBldGUlMjBFa2xlLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjgyJTI5",
                "showIn": {
                    "trigger": [330]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548320640",
                "activeDateEnd": "1645002240",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "331",
                "campName": "|-x-|R2VyaSUyMFNheSVDNCVCMW0tQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyOTQlMjk=",
                "showIn": {
                    "segment": null,
                    "trigger": [343]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548678060",
                "activeDateEnd": "1549225800",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "335",
                "campName": "|-x-|dGVzdHMtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyOTclMjk=",
                "showIn": {
                    "trigger": [347]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "all_ALL",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548749160",
                "activeDateEnd": "1551427560",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "337",
                "campName": "|-x-|cWF0ZXN0dHMtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyOTglMjk=",
                "showIn": {
                    "trigger": [350]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1546338000",
                "activeDateEnd": "1554027600",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "mobile",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "339",
                "campName": "|-x-|Q2F0ZWdvcnklMjBQYWdlLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjk5JTI5",
                "showIn": {
                    "trigger": [351]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548794340",
                "activeDateEnd": "1551472740",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }, {
                "id": "342",
                "campName": "|-x-|Q2FydCUyMFBhZ2UtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EzMDAlMjk=",
                "showIn": {
                    "trigger": [353]
                },
                "hideIn": null,
                "isActive": "1",
                "productType": "24",
                "priority": "0",
                "trigTimeOut": "-1",
                "trigTimeCount": "0",
                "purMinOrderAmount": "0",
                "triggerText": "",
                "theme": "0",
                "purMaxOrderAmount": "0",
                "lang": "tr_TR",
                "isVisible": "-1",
                "targetingCamp": "0",
                "couponExpDate": "0",
                "locationisActive": "0",
                "locationData": "",
                "advancedCss": "",
                "showNotes": "",
                "activeDateStart": "1548824640",
                "activeDateEnd": "1551503040",
                "isSuperCamp": "0",
                "autoClose": null,
                "couponAutoApply": "1",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "joinControlLimit": "336",
                "closeControlLimit": "336",
                "noteType": "-1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "isVersus": "0",
                "isSocialProof": "0",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "callbacks": {
                    "show": [],
                    "load": [],
                    "liked": [],
                    "close": []
                },
                "platform": "web",
                "conditionNeeds": {
                    "bounce": 0,
                    "scroll": 0
                },
                "isBounce": 0,
                "isScroll": 0
            }],
            journeyAttributeList: [],
            insights: {
                "52": {
                    "id": "52",
                    "showIn": {
                        "trigger": ["1"],
                        "segment": null
                    },
                    "startDate": "1538359200",
                    "endDate": "1540951200",
                    "lang": "all_ALL",
                    "platform": "mobile",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "68",
                        "selector": "a#btnMainSearch",
                        "unitName": "qtest",
                        "eventNameSelector": "sQuery(\"a#btnMainSearch\").text()"
                    }]
                },
                "50": {
                    "id": "50",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1537840800",
                    "endDate": "1540432800",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "66",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(4) > div > a > img",
                        "unitName": "Slider_Test | Slide 3",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(4) > div > a > img\").attr(\"src\")"
                    }, {
                        "id": "65",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(3) > div > a > img",
                        "unitName": "Slider_Test | Slide 2",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(3) > div > a > img\").attr(\"src\")"
                    }, {
                        "id": "64",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(2) > div > a > img",
                        "unitName": "Slider_Test | Slide 1",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(2) > div > a > img\").attr(\"src\")"
                    }]
                },
                "45": {
                    "id": "45",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1533607200",
                    "endDate": "1821664800",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "58",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > map > area:eq(1)",
                        "unitName": "Anasayfa - PLATSA Gard\u0131rop",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > map > area:eq(1)\").attr(\"src\")"
                    }]
                },
                "44": {
                    "id": "44",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1533607200",
                    "endDate": "1853114400",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "57",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a",
                        "unitName": "Anasayfa - Hediye \u00c7eki",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a\").attr(\"src\")"
                    }]
                },
                "43": {
                    "id": "43",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1533607200",
                    "endDate": "1789610400",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "56",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > map > area:eq(0)",
                        "unitName": "Anasayfa - PAX Gard\u0131rop Sistemleri",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > map > area:eq(0)\").attr(\"src\")"
                    }]
                },
                "38": {
                    "id": "38",
                    "showIn": {
                        "trigger": ["140"],
                        "segment": null
                    },
                    "startDate": "1533607200",
                    "endDate": "1758160800",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "51",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(1) > div:eq(1) > div:eq(0) > div > a:eq(1)",
                        "unitName": "\u00c7ocuk BUNS\u00d6 koltuk",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(1) > div:eq(1) > div:eq(0) > div > a:eq(1)\").text()"
                    }, {
                        "id": "50",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(1) > div:eq(1) > div:eq(0) > div > a:eq(1)",
                        "unitName": "\u00c7ocuk BUNS\u00d6 koltuk",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(1) > div:eq(1) > div:eq(0) > div > a:eq(1)\").text()"
                    }]
                },
                "36": {
                    "id": "36",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1533607200",
                    "endDate": "1789610400",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "48",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(9) > a > img",
                        "unitName": "Anasayfa - KOMPLEMENT D\u00fczenleyiciler",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(9) > a > img\").attr(\"src\")"
                    }]
                },
                "35": {
                    "id": "35",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1533607200",
                    "endDate": "1789610400",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "47",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(8) > a > img",
                        "unitName": "Anasayfa - Pax Gard\u0131rop Sistemleri",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(8) > a > img\").attr(\"src\")"
                    }]
                },
                "34": {
                    "id": "34",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1533607200",
                    "endDate": "1821664800",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "46",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(7) > a > img",
                        "unitName": "Anasayfa - Pax Planlay\u0131c\u0131s\u0131",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(7) > a > img\").attr(\"src\")"
                    }]
                },
                "22": {
                    "id": "22",
                    "showIn": {
                        "trigger": ["1"],
                        "segment": null
                    },
                    "startDate": "1531447200",
                    "endDate": "1534039200",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "30",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(4) > div > a > img",
                        "unitName": "Sliders  | Slide 3",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(4) > div > a > img\").attr(\"src\")"
                    }, {
                        "id": "29",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(3) > div > a > img",
                        "unitName": "Sliders  | Slide 2",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(3) > div > a > img\").attr(\"src\")"
                    }, {
                        "id": "28",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(2) > div > a > img",
                        "unitName": "Sliders  | Slide 1",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(0) > div > div:eq(2) > div > a > img\").attr(\"src\")"
                    }]
                },
                "16": {
                    "id": "16",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1531101600",
                    "endDate": "1533693600",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "24",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > img",
                        "unitName": "test1",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > img\").attr(\"src\")"
                    }]
                },
                "15": {
                    "id": "15",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1530842400",
                    "endDate": "1567216800",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "23",
                        "selector": "div#ctl00_topMenu > ul > li:eq(2) > a",
                        "unitName": "test button",
                        "eventNameSelector": "sQuery(\"div#ctl00_topMenu > ul > li:eq(2) > a\").text()"
                    }]
                },
                "13": {
                    "id": "13",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1530842400",
                    "endDate": "1567216800",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "19",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > img",
                        "unitName": "test banner",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > a > img\").attr(\"src\")"
                    }]
                },
                "3": {
                    "id": "3",
                    "showIn": {
                        "trigger": ["2"],
                        "segment": null
                    },
                    "startDate": "1530583200",
                    "endDate": "1533175200",
                    "lang": "all_ALL",
                    "platform": "web",
                    "refractionList": ["country"],
                    "objList": [{
                        "id": "2",
                        "selector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(3) > img",
                        "unitName": "Test",
                        "eventNameSelector": "sQuery(\"form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(3) > img\").attr(\"src\")"
                    }]
                }
            },
            webPushes: {
                "314": {
                    "id": "314",
                    "name": "",
                    "title": "Test in-stock",
                    "description": "Push is sended",
                    "link": "",
                    "linkType": "0",
                    "image": "",
                    "imageType": "0",
                    "banner": "",
                    "bannerType": "0",
                    "type": "7",
                    "pushTimeout": "0",
                    "resetRule": [],
                    "otherSettings": {
                        "pushType": "7",
                        "inStockPushTriggerTimes": "1",
                        "inStockPushTriggerDays": "1"
                    },
                    "utmSettings": "{\"utm_source\":\"insider\",\"utm_medium\":\"web_push\",\"utm_campaign\":\"test-qa\",\"utm_term\":\"\",\"utm_content\":\"\"}",
                    "enableUtmSettings": "1",
                    "ttl": "86400",
                    "frequency": "0",
                    "sendDate": null,
                    "enableButtonSettings": "0",
                    "buttonType": "0",
                    "buttonFirstType": "0",
                    "buttonSecondType": "0",
                    "buttonFirstValue": "",
                    "buttonFirstUrl": "{}",
                    "buttonSecondValue": "",
                    "buttonSecondUrl": "{}",
                    "enableUrlRedirection": "0",
                    "campId": "314",
                    "campName": "test-qa",
                    "showIn": {
                        "trigger": [],
                        "segment": [323]
                    },
                    "hideIn": null,
                    "isActive": "1",
                    "productType": "30",
                    "priority": "0",
                    "trigTimeOut": "0",
                    "trigTimeCount": "0",
                    "purMinOrderAmount": "0",
                    "triggerText": "",
                    "theme": "0",
                    "purMaxOrderAmount": "0",
                    "lang": "tr_TR",
                    "isVisible": "1",
                    "targetingCamp": "-1",
                    "couponExpDate": "0",
                    "locationisActive": "0",
                    "locationData": "",
                    "advancedCss": "",
                    "showNotes": "",
                    "activeDateStart": "1548171780",
                    "activeDateEnd": "1550850180",
                    "isSuperCamp": "0",
                    "autoClose": null,
                    "couponAutoApply": "1",
                    "gaEvents": "a:5:{s:10:\"impression\";s:1:\"1\";s:4:\"join\";s:1:\"1\";s:5:\"sales\";s:1:\"0\";s:5:\"close\";s:1:\"1\";s:4:\"goal\";s:1:\"0\";}",
                    "isTest": "0",
                    "joinControlLimit": "336",
                    "closeControlLimit": "336",
                    "noteType": "-1",
                    "saLogDuration": "336",
                    "cookieTime": "14"
                },
                "160": {
                    "id": "160",
                    "name": "",
                    "title": "{name}",
                    "description": "\u015eimdi stokta. Hemen almak i\u00e7in t\u0131klay\u0131n.",
                    "link": "",
                    "linkType": "0",
                    "image": "",
                    "imageType": "0",
                    "banner": "",
                    "bannerType": "0",
                    "type": "7",
                    "pushTimeout": "0",
                    "resetRule": [],
                    "otherSettings": {
                        "pushType": "7",
                        "inStockPushTriggerTimes": "1",
                        "inStockPushTriggerDays": "15"
                    },
                    "utmSettings": "{\"utm_source\":\"insider\",\"utm_medium\":\"web_push\",\"utm_campaign\":\"stou_gelenler\",\"utm_term\":\"\",\"utm_content\":\"\"}",
                    "enableUtmSettings": "1",
                    "ttl": "86400",
                    "frequency": "1",
                    "sendDate": null,
                    "enableButtonSettings": "0",
                    "buttonType": "0",
                    "buttonFirstType": "0",
                    "buttonSecondType": "0",
                    "buttonFirstValue": "",
                    "buttonFirstUrl": "{}",
                    "buttonSecondValue": "",
                    "buttonSecondUrl": "{}",
                    "enableUrlRedirection": "0",
                    "campId": "160",
                    "campName": "Sto\u011fu Gelenler",
                    "showIn": {
                        "trigger": [],
                        "segment": [215]
                    },
                    "hideIn": null,
                    "isActive": "1",
                    "productType": "30",
                    "priority": "0",
                    "trigTimeOut": "0",
                    "trigTimeCount": "0",
                    "purMinOrderAmount": "0",
                    "triggerText": "",
                    "theme": "0",
                    "purMaxOrderAmount": "0",
                    "lang": "tr_TR",
                    "isVisible": "1",
                    "targetingCamp": "-1",
                    "couponExpDate": "0",
                    "locationisActive": "0",
                    "locationData": "",
                    "advancedCss": "",
                    "showNotes": "",
                    "activeDateStart": "1539615420",
                    "activeDateEnd": "1646319420",
                    "isSuperCamp": "0",
                    "autoClose": null,
                    "couponAutoApply": "1",
                    "gaEvents": "a:5:{s:10:\"impression\";s:1:\"1\";s:4:\"join\";s:1:\"1\";s:5:\"sales\";s:1:\"0\";s:5:\"close\";s:1:\"1\";s:4:\"goal\";s:1:\"0\";}",
                    "isTest": "0",
                    "joinControlLimit": "336",
                    "closeControlLimit": "336",
                    "noteType": "-1",
                    "saLogDuration": "336",
                    "cookieTime": "14"
                },
                "17": {
                    "id": "17",
                    "name": "",
                    "title": "Sepetenizde \u00dcr\u00fcnler Var!",
                    "description": "Hemen sat\u0131n al\u0131n.",
                    "link": "https:\/\/www.ikea.com.tr\/siparis-adim\/sepetim.aspx",
                    "linkType": "1",
                    "image": "\/\/image.useinsider.com\/ikea\/17\/arTs55zOIfbyfDLzr8O51528296107.png",
                    "imageType": "2",
                    "banner": "\/\/image.useinsider.com\/ikea\/17\/lCBA34QJYEWxezjcOON21543825485.jpeg",
                    "bannerType": "1",
                    "type": "3",
                    "pushTimeout": "24",
                    "resetRule": [35],
                    "otherSettings": {
                        "pushType": "3"
                    },
                    "utmSettings": "{\"utm_source\":\"insider\",\"utm_medium\":\"web_push\",\"utm_campaign\":\"conversion_push\",\"utm_term\":\"\",\"utm_content\":\"\"}",
                    "enableUtmSettings": "1",
                    "ttl": "86400",
                    "frequency": "1",
                    "sendDate": null,
                    "enableButtonSettings": "0",
                    "buttonType": "1",
                    "buttonFirstType": "1",
                    "buttonSecondType": "1",
                    "buttonFirstValue": "Hemen Sepetime Git",
                    "buttonFirstUrl": "https:\/\/www.ikea.com.tr\/siparis-adim\/sepetim.aspx",
                    "buttonSecondValue": "",
                    "buttonSecondUrl": "",
                    "enableUrlRedirection": "0",
                    "campId": "17",
                    "campName": "Conversion Push Live",
                    "showIn": {
                        "trigger": [34],
                        "segment": [76]
                    },
                    "hideIn": null,
                    "isActive": "1",
                    "productType": "30",
                    "priority": "0",
                    "trigTimeOut": "0",
                    "trigTimeCount": "0",
                    "purMinOrderAmount": "0",
                    "triggerText": "",
                    "theme": "0",
                    "purMaxOrderAmount": "0",
                    "lang": "tr_TR",
                    "isVisible": "1",
                    "targetingCamp": "-1",
                    "couponExpDate": "0",
                    "locationisActive": "0",
                    "locationData": "",
                    "advancedCss": "",
                    "showNotes": "",
                    "activeDateStart": "1528274640",
                    "activeDateEnd": "1594370640",
                    "isSuperCamp": "0",
                    "autoClose": null,
                    "couponAutoApply": "1",
                    "gaEvents": "a:5:{s:10:\"impression\";s:1:\"1\";s:4:\"join\";s:1:\"1\";s:5:\"sales\";s:1:\"0\";s:5:\"close\";s:1:\"1\";s:4:\"goal\";s:1:\"0\";}",
                    "isTest": "0",
                    "joinControlLimit": "168",
                    "closeControlLimit": "168",
                    "noteType": "-1",
                    "saLogDuration": "168",
                    "cookieTime": "7"
                }
            },
            customSegments: [{
                "id": "1",
                "activeDateStart": "1542026040",
                "activeDateEnd": "1734006840",
                "createDate": "2018-11-12 12:34:15",
                "expireDate": "30",
                "showIn": {
                    "trigger": [258],
                    "segment": [257]
                },
                "triggerSettings": "{\"groupList\":{\"1\":{\"conditionLogic\":\"and\",\"groupLogic\":\"none\",\"conditionList\":[{\"id\":\"pageUrl\",\"operator\":\"contains\",\"isChangeable\":\"true\",\"inputs\":{\"value\":{\"val\":\"www.ikea\"}}}]}}}",
                "segmentSettings": "{\"groupList\":{\"1\":{\"conditionLogic\":\"and\",\"groupLogic\":\"none\",\"conditionList\":[{\"id\":\"deviceType\",\"operator\":\"is\",\"isChangeable\":\"true\",\"inputs\":{\"device\":{\"val\":\"Mobil\"}}}]}}}",
                "isActive": "1",
                "isVisible": "1",
                "isEditable": "1",
                "customSegmentName": "Mobileden Desktop G\u00f6r\u00fcn\u00fcm Kullan\u0131c\u0131lar\u0131",
                "targetingCamp": "",
                "locationIsActive": "",
                "locationData": false,
                "hideIn": "",
                "customDatasetList": ""
            }, {
                "id": "2",
                "activeDateStart": "1541970000",
                "activeDateEnd": "1639670100",
                "createDate": "2018-11-12 15:55:51",
                "expireDate": "30",
                "showIn": {
                    "trigger": [260],
                    "segment": [259]
                },
                "triggerSettings": "{\"groupList\":{\"1\":{\"conditionLogic\":\"and\",\"groupLogic\":\"none\",\"conditionList\":[{\"id\":\"pageType\",\"operator\":\"is\",\"isChangeable\":\"true\",\"inputs\":{\"page\":{\"val\":\"1==1\"}}}]}}}",
                "segmentSettings": "{\"groupList\":{\"1\":{\"conditionLogic\":\"and\",\"groupLogic\":\"none\",\"conditionList\":[{\"id\":\"deviceType\",\"operator\":\"is\",\"isChangeable\":\"true\",\"inputs\":{\"device\":{\"val\":\"Mobil\"}}}]}}}",
                "isActive": "1",
                "isVisible": "1",
                "isEditable": "1",
                "customSegmentName": "Mobile Trafik",
                "targetingCamp": "",
                "locationIsActive": "",
                "locationData": false,
                "hideIn": "",
                "customDatasetList": ""
            }],
            personalizationCamps: {
                "5": {
                    "variations": [{
                        "varId": "c2",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c1",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JTI4Tk8lMjklMjBPdmVyYWxsJTIwU2FsZXMlMjBEYXRh",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "6": {
                    "variations": [{
                        "varId": "c4",
                        "ratio": "90",
                        "type": "n"
                    }, {
                        "varId": "c3",
                        "ratio": "10",
                        "type": "cg"
                    }],
                    "name": "|-x-|TW9iaWxlJTIwTWVudQ==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "11": {
                    "variations": [{
                        "varId": "c15",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c14",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|T3ZlcmFsbCUyMFNhbGVzJTIwRGF0YSUyME1vYmlsZQ==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "23": {
                    "variations": [{
                        "varId": "c36",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c114",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c35",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUMzJTk2bmVyaWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVyJTIwJUM0JUIwbmRpcmltJTIwQmFkZ2U=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "25": {
                    "variations": [{
                        "varId": "17",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "16",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|Q29udmVyc2lvbiUyMFB1c2glMjBMaXZl",
                    "segment": [76],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "28": {
                    "variations": [{
                        "varId": "c40",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c123",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c39",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUMzJTk2bmVyaWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVyJTIwJUMzJTk2emVsJTIwJUM0JUIwbmRpcmltJTIwQmFkZ2U=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "34": {
                    "variations": [{
                        "varId": "c48",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c47",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwR1IlQzMlOTZOTElE",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "13": {
                            "goalId": "13",
                            "goalName": "\u0130yi Fikirler GR\u00d6NLID Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456832487",
                                "selectorString": "\/iyi-fikirler\/rahatiniz-icin-tasarlanmis-kanepe-gronlid.aspx"
                            }]
                        }
                    }
                },
                "35": {
                    "variations": [{
                        "varId": "c50",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c49",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwRUtFREFMRU4=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "12": {
                            "goalId": "12",
                            "goalName": "\u0130yi Fikirler EKEDALEN Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456776469",
                                "selectorString": "iyi-fikirler\/ekedalen-misafir-listenizle-birlikte-buyuyen-yemek-masasi.aspx"
                            }]
                        }
                    }
                },
                "36": {
                    "variations": [{
                        "varId": "c52",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c51",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwS0FMTEFY",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "11": {
                            "goalId": "11",
                            "goalName": "\u0130yi Fikirler KALLAX Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456719547",
                                "selectorString": "iyi-fikirler\/kallax-raf-unitesini-kisisellestirin.aspx"
                            }]
                        }
                    }
                },
                "37": {
                    "variations": [{
                        "varId": "c54",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c53",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwS1JVWA==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "10": {
                            "goalId": "10",
                            "goalName": "\u0130yi Fikirler KRUX Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456662502",
                                "selectorString": "https:\/\/www.ikea.com.tr\/iyi-fikirler\/cocuk-odasi-aydinlatmasinin-yeni-oyuncusu-krux.aspx"
                            }]
                        }
                    }
                },
                "38": {
                    "variations": [{
                        "varId": "c56",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c55",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwU0tBRElT",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "9": {
                            "goalId": "9",
                            "goalName": "\u0130yi Fikirler SKADIS Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456612938",
                                "selectorString": "iyi-fikirler\/skadis-cok-amacli-panodan-ilham-alin.aspx"
                            }]
                        }
                    }
                },
                "39": {
                    "variations": [{
                        "varId": "c58",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c57",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBNT1NTTEFOREE=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "8": {
                            "goalId": "8",
                            "goalName": "\u0130yi Fikirler MOSSLANDA Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456559056",
                                "selectorString": "iyi-fikirler\/mosslanda-cerceve-rafinin-5-farkli-kullanimi.aspx"
                            }]
                        }
                    }
                },
                "40": {
                    "variations": [{
                        "varId": "c60",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c59",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBWQVJEQUdFTg==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "6": {
                            "goalId": "6",
                            "goalName": "\u0130yi Fikirler VARDAGEN Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456434203",
                                "selectorString": "https:\/\/www.ikea.com.tr\/iyi-fikirler\/vardagen-muffin-kalibinin-4-farkli-kullanimi.aspx"
                            }]
                        }
                    }
                },
                "41": {
                    "variations": [{
                        "varId": "c62",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c61",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwR1IlQzMlOTZOTElEJTIwRU5H",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        },
                        "16": {
                            "goalId": "16",
                            "goalName": "Ideas Page of GR\u00d6NLID Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462129761",
                                "selectorString": "ideas\/gronlid-a-sofa-made-for-comfort.aspx"
                            }]
                        }
                    }
                },
                "42": {
                    "variations": [{
                        "varId": "c64",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c63",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwRUtFREFMRU4lMjBFTkc=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "14": {
                            "goalId": "14",
                            "goalName": "Ideas Page of EKEDALEN Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462031401",
                                "selectorString": "\/ideas\/ekedalen-dining-that-grows-with-your-guest-list.aspx"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        }
                    }
                },
                "43": {
                    "variations": [{
                        "varId": "c66",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c65",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwS0FMTEFYJTIwRU5H",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        },
                        "17": {
                            "goalId": "17",
                            "goalName": "Ideas Page of KALLAX Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462847830",
                                "selectorString": "\/ideas\/make-your-kallax-unit-truly-yours.aspx"
                            }]
                        }
                    }
                },
                "44": {
                    "variations": [{
                        "varId": "c68",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c67",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwS1JVWCUyMEVORw==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        },
                        "18": {
                            "goalId": "18",
                            "goalName": "Ideas Page of KRUX Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462994885",
                                "selectorString": "ideas\/new-in-childrens-lighting-the-playful-krux-lamp.aspx"
                            }]
                        }
                    }
                },
                "45": {
                    "variations": [{
                        "varId": "c70",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c69",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwU0tBRElTJTIwRU5H",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        },
                        "19": {
                            "goalId": "19",
                            "goalName": "Ideas Page of SKADIS Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528463129968",
                                "selectorString": "\/en\/ideas\/get-inspired-by-skadis-pegboards.aspx"
                            }]
                        }
                    }
                },
                "46": {
                    "variations": [{
                        "varId": "c72",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c71",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwTU9TU0xBTkRBJTIwRU5H",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        },
                        "20": {
                            "goalId": "20",
                            "goalName": "Ideas Page of MOSSLANDA Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528463376397",
                                "selectorString": "ideas\/5-unexpected-uses-for-mosslanda-picture-ledges.aspx"
                            }]
                        }
                    }
                },
                "47": {
                    "variations": [{
                        "varId": "c74",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c73",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwVkFSREFHRU4lMjBFTkc=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        },
                        "21": {
                            "goalId": "21",
                            "goalName": "Ideas Page of VARDAGEN Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528463535532",
                                "selectorString": "en\/ideas\/4-new-ways-to-use-your-vardagen-muffin-tin.aspx"
                            }]
                        }
                    }
                },
                "54": {
                    "variations": [{
                        "varId": "30",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "29",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|RmxvYXRpbmclMjBDYXJkJTIwLSUyMFRS",
                    "segment": null,
                    "priority": "4",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "22": {
                            "goalId": "22",
                            "goalName": "Sepete Sayfas\u0131 G\u00f6r\u00fcnt\u00fcleme",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1529912507926",
                                "selectorString": "1==1 && spApi.isOnCartPage()"
                            }]
                        }
                    }
                },
                "68": {
                    "variations": [{
                        "varId": "32",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "31",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|RmxvYXRpbmclMjBDYXJkJTIwLSUyMEVORw==",
                    "segment": null,
                    "priority": "4",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "22": {
                            "goalId": "22",
                            "goalName": "Sepete Sayfas\u0131 G\u00f6r\u00fcnt\u00fcleme",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1529912507926",
                                "selectorString": "1==1 && spApi.isOnCartPage()"
                            }]
                        }
                    }
                },
                "80": {
                    "variations": [{
                        "varId": "c135",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c130",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|Tm9TbGlkZXI=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "85": {
                    "variations": [{
                        "varId": "c141",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c140",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwUExBVFNB",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        },
                        "24": {
                            "goalId": "24",
                            "goalName": "PLATSA \u0130yi fikirler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1531219232380",
                                "selectorString": "\/iyi-fikirler\/platsa-dolap-sistemleri-ile-kucuk-alanlar-icin-esnek-cozumler.aspx"
                            }]
                        }
                    }
                },
                "86": {
                    "variations": [{
                        "varId": "c143",
                        "ratio": "90",
                        "type": "n"
                    }, {
                        "varId": "c142",
                        "ratio": "10",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwUExBVFNBJTIwRU5H",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "15": {
                            "goalId": "15",
                            "goalName": "Ideas Pages Visited",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528462070150",
                                "selectorString": "\/en\/ideas\/"
                            }]
                        },
                        "25": {
                            "goalId": "25",
                            "goalName": "PLATSA Ideas",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1531220081133",
                                "selectorString": "\/en\/ideas\/platsa-flexible-storage-that-works-in-small-spaces.aspx"
                            }]
                        }
                    }
                },
                "91": {
                    "variations": [{
                        "varId": "58",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "57",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|U1RVVkElMjBhcmFtYSUyMHlhcGFuYSUyMGJhbm5lciUyMGclQzMlQjZzdGVy",
                    "segment": [114],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "28": {
                            "goalId": "28",
                            "goalName": "STUVA dinamik sayfa",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1531398878893",
                                "selectorString": "\/ikea-cocuk-stuva-serisi"
                            }]
                        }
                    }
                },
                "92": {
                    "variations": [{
                        "varId": "62",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "60",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|VGVtYSUyMEdhbWU=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "111": {
                    "variations": [{
                        "varId": "c165",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c160",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|SUtFQSUyMEt1cnVtc2FsJTIwQml6ZSUyMFVsYSVDNSU5RiVDNCVCMW4=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "30": {
                            "goalId": "30",
                            "goalName": "G\u00f6nder Butonu",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1532607254416",
                                "selectorString": "a#ctl00_ctl00_ContentPlaceHolder1_ContentPlaceHolder1_btnSubmit"
                            }]
                        }
                    }
                },
                "121": {
                    "variations": [{
                        "varId": "97",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "96",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|RW1vamklMjBBbmtldA==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "122": {
                    "variations": [{
                        "varId": "c175",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c174",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VwZXQlMjBCbyVDNSU5RmtlbiUyMFNlcGV0JTIwSWNvbnVuYSUyMFQlQzQlQjFrbGF5YW5sYXI=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "123": {
                    "variations": [{
                        "varId": "c177",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c176",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VwZXQlMjBEb2x1eWtlbiUyMFNlcGV0JTIwSWNvbnVuYSUyMFQlQzQlQjFrbGF5YW5sYXI=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "124": {
                    "variations": [{
                        "varId": "99",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "98",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|QmlsZGlyaW1sZXJpJTIwRW5nZWxsZXllbmxlcmxlJTIwJUM0JUIwbGV0aSVDNSU5Rmlt",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "31": {
                            "goalId": "31",
                            "goalName": "Push'a T\u0131klay\u0131p Siteye Gelmi\u015fler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1533633028074",
                                "selectorString": "utm_source=insider"
                            }]
                        },
                        "35": {
                            "goalId": "35",
                            "goalName": "Push'a \u0130zin Verenler",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1534155950279",
                                "selectorString": "Notification.permission === \"granted\""
                            }]
                        },
                        "36": {
                            "goalId": "36",
                            "goalName": "Push'a \u0130zin Verenler",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1534155952765",
                                "selectorString": "Notification.permission === \"granted\""
                            }]
                        }
                    }
                },
                "125": {
                    "variations": [{
                        "varId": "101",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "100",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|TGlrZWxpaG9vZCUyMHRvJTIwUHVyY2hhc2U=",
                    "segment": [141],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "126": {
                    "variations": [{
                        "varId": "c179",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c178",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|RUtFVCUyMFBsYW5uZXI=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "32": {
                            "goalId": "32",
                            "goalName": "EKET Planner Page",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1533803835931",
                                "selectorString": "https:\/\/www.ikea.com.tr\/eket-planner"
                            }]
                        }
                    }
                },
                "127": {
                    "variations": [{
                        "varId": "c181",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c180",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|QUxHT1QlMjBQbGFubmVy",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "33": {
                            "goalId": "33",
                            "goalName": "ALGOT Planner Page",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1533805043895",
                                "selectorString": "https:\/\/www.ikea.com.tr\/algot-planner"
                            }]
                        }
                    }
                },
                "128": {
                    "variations": [{
                        "varId": "c183",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c182",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|RUxWQVJMSSUyMFBsYW5uZXI=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "34": {
                            "goalId": "34",
                            "goalName": "ELVARLI Planner Page",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1533805593358",
                                "selectorString": "https:\/\/www.ikea.com.tr\/elvarli-planner"
                            }]
                        }
                    }
                },
                "133": {
                    "variations": [{
                        "varId": "c190",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c189",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|QmFubmVyJTIwQW5hbHl0aWNzJTIwaSVDMyVBN2luJTIwQ3VzdG9tJTIwR29hbA==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "37": {
                            "goalId": "37",
                            "goalName": "PAX Gard\u0131rop Sistemleri + PAX Gard\u0131rop D\u00fczenleyiciler",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535450245393",
                                "selectorString": "false;"
                            }]
                        },
                        "39": {
                            "goalId": "39",
                            "goalName": "PAX Gard\u0131rop Sistemleri",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535453608713",
                                "selectorString": "false;"
                            }]
                        },
                        "40": {
                            "goalId": "40",
                            "goalName": "PAX Gard\u0131rop D\u00fczenleyiciler",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535453624426",
                                "selectorString": "false;"
                            }]
                        },
                        "41": {
                            "goalId": "41",
                            "goalName": "PAX Gard\u0131rop Sistemleri (Hediye \u00c7eki)",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535453668320",
                                "selectorString": "false;"
                            }]
                        },
                        "42": {
                            "goalId": "42",
                            "goalName": "PLATSA Gard\u0131rop Sistemleri",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535453691353",
                                "selectorString": "false;"
                            }]
                        },
                        "43": {
                            "goalId": "43",
                            "goalName": "PAX Gard\u0131rop Sistemleri (Hediye \u00c7eki) + PLATSA Gard\u0131rop Sistemleri",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535453717771",
                                "selectorString": "false;"
                            }]
                        },
                        "44": {
                            "goalId": "44",
                            "goalName": "\u00c7ocuk BUNS\u00d6 koltuk",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535459359613",
                                "selectorString": "false;"
                            }]
                        },
                        "45": {
                            "goalId": "45",
                            "goalName": "\u00c7ocuk SANDIG K\u00fcrek",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535459377716",
                                "selectorString": "false;"
                            }]
                        },
                        "46": {
                            "goalId": "46",
                            "goalName": "\u00c7ocuk SANDIG Pi\u015firme Seti",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535459399415",
                                "selectorString": "false;"
                            }]
                        },
                        "47": {
                            "goalId": "47",
                            "goalName": "\u00c7ocuk SANDIG Kum Kal\u0131b\u0131-1",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535459418954",
                                "selectorString": "false;"
                            }]
                        },
                        "48": {
                            "goalId": "48",
                            "goalName": "\u00c7ocuk SANDIG Oyuncak Dondurma",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535459437707",
                                "selectorString": "false;"
                            }]
                        },
                        "49": {
                            "goalId": "49",
                            "goalName": "\u00c7ocuk SANDIG Kum Kal\u0131b\u0131-2",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1535459459858",
                                "selectorString": "false;"
                            }]
                        }
                    }
                },
                "134": {
                    "variations": [{
                        "varId": "c192",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c191",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VhcmNoJTIwVGV4dA==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "138": {
                    "variations": [{
                        "varId": "114",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "113",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|Q2h1cm4=",
                    "segment": [157],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "139": {
                    "variations": [{
                        "varId": "116",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "115",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|QW5rZXQlMjBEZXNrdG9w",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "148": {
                    "variations": [{
                        "varId": "c208",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c207",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VrbWUlMjBBbGFuJUM0JUIxbmRhJTIwU2VwZXQlMjBCaWxnaWxlbmRpcm1l",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        }
                    }
                },
                "150": {
                    "variations": [{
                        "varId": "128",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "127",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|TW9iaWxlJTIwQ2FydCUyMFJlbWluZGVyJTIwLSUyMFRS",
                    "segment": null,
                    "priority": "3",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        }
                    }
                },
                "151": {
                    "variations": [{
                        "varId": "130",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "129",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|TW9iaWxlJTIwQ2FydCUyMFJlbWluZGVyJTIwLSUyMEVO",
                    "segment": null,
                    "priority": "3",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        }
                    }
                },
                "152": {
                    "variations": [{
                        "varId": "132",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "131",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|UHJvZHVjdCUyMFBhZ2UlMjBWaWV3JTIwdG8lMjBWaWV3",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "153": {
                    "variations": [{
                        "varId": "148",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "133",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|Q2FydCUyMFBhZ2UlMjBCdXklMjB0byUyMEJ1eQ==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "154": {
                    "variations": [{
                        "varId": "139",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "138",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SW50ZXJuZXQlMjBNYWdhemFzaQ==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "155": {
                    "variations": [{
                        "varId": "c210",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c284",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c209",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VhcmNoYmFyYSUyMFNvbiUyMCVDMyU5Q3IlQzMlQkNuJTIwRGVza3RvcA==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "54": {
                            "goalId": "54",
                            "goalName": "Arama Yapan Kullan\u0131c\u0131lar",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1543762357914",
                                "selectorString": "\/arama\/"
                            }]
                        }
                    }
                },
                "156": {
                    "variations": [{
                        "varId": "c212",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c288",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c211",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VhcmNoYmFyYSUyMFNvbiUyMCVDMyU5Q3IlQzMlQkNuJTIwTW9iaWxl",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "54": {
                            "goalId": "54",
                            "goalName": "Arama Yapan Kullan\u0131c\u0131lar",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1543762357914",
                                "selectorString": "\/arama\/"
                            }]
                        }
                    }
                },
                "157": {
                    "variations": [{
                        "varId": "c214",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c213",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|Q2FydCUyMFJlbWluZGVyJTIwRGVza3RvcA==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "170": {
                    "variations": [{
                        "varId": "c233",
                        "ratio": "90",
                        "type": "n"
                    }, {
                        "varId": "c232",
                        "ratio": "10",
                        "type": "cg"
                    }],
                    "name": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMEJvJUM1JTlGJTIwU2VwZXQlMjBTYXlmYXMlQzQlQjE=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "177": {
                    "variations": [{
                        "varId": "160",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "159",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U3RvJUM0JTlGdSUyMEdlbGVubGVy",
                    "segment": [215],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "178": {
                    "variations": [{
                        "varId": "162",
                        "ratio": "90",
                        "type": "n"
                    }, {
                        "varId": "161",
                        "ratio": "10",
                        "type": "cg"
                    }],
                    "name": "|-x-|RUtUT1JQJTIwYXJhbWElMjB5YXBhbmElMkYlQzMlQkNyJUMzJUJDbiUyMGJha2FuYSUyMHBvcHVw",
                    "segment": [217],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "50": {
                            "goalId": "50",
                            "goalName": "EKTORP seri sayfas\u0131 g\u00f6r\u00fcnt\u00fcleyenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1539673446209",
                                "selectorString": "https:\/\/www.ikea.com.tr\/oturma-odalari\/ektorp-serisi"
                            }]
                        }
                    }
                },
                "182": {
                    "variations": [{
                        "varId": "170",
                        "ratio": "90",
                        "type": "n"
                    }, {
                        "varId": "169",
                        "ratio": "10",
                        "type": "cg"
                    }],
                    "name": "|-x-|S0lWSUslMjBhcmFtYSUyMHlhcGFuYSUyRiVDMyVCQ3IlQzMlQkNuJTIwYmFrYW5hJTIwcG9wdXA=",
                    "segment": [219],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "51": {
                            "goalId": "51",
                            "goalName": "KIVIK seri sayfas\u0131 g\u00f6r\u00fcnt\u00fcleyenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1539849772832",
                                "selectorString": "https:\/\/www.ikea.com.tr\/oturma-odalari\/kivik-serisi"
                            }]
                        }
                    }
                },
                "183": {
                    "variations": [{
                        "varId": "172",
                        "ratio": "90",
                        "type": "n"
                    }, {
                        "varId": "171",
                        "ratio": "10",
                        "type": "cg"
                    }],
                    "name": "|-x-|RlJJSEVURU4lMjBhcmFtYSUyMHlhcGFuYSUyRiVDMyVCQ3IlQzMlQkNuJTIwYmFrYW5hJTIwcG9wdXA=",
                    "segment": [221],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "52": {
                            "goalId": "52",
                            "goalName": "FRIHETEN seri sayfas\u0131 g\u00f6r\u00fcnt\u00fcleyenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1539954121527",
                                "selectorString": "https:\/\/www.ikea.com.tr\/oturma-odalari\/friheten-serisi"
                            }]
                        }
                    }
                },
                "184": {
                    "variations": [{
                        "varId": "174",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "173",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U09ERVJIQU1OJTIwYXJhbWElMjB5YXBhbmElMkYlQzMlQkNyJUMzJUJDbiUyMGJha2FuYSUyMHBvcHVw",
                    "segment": [223],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "53": {
                            "goalId": "53",
                            "goalName": "SODERHAMN seri sayfas\u0131 g\u00f6r\u00fcnt\u00fcleyenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1539954648069",
                                "selectorString": "https:\/\/www.ikea.com.tr\/oturma-odalari\/soderhamn-serisi"
                            }]
                        }
                    }
                },
                "204": {
                    "variations": [{
                        "varId": "c272",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c271",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMFByb2R1Y3QlMjBQYWdlJTIwVFIlMjB2Mw==",
                    "segment": [288],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "205": {
                    "variations": [{
                        "varId": "c274",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c273",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMFNvbiUyMENhdGVnb3J5JTIwUGFnZSUyMFRSJTIwdjM=",
                    "segment": [287],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "208": {
                    "variations": [{
                        "varId": "c279",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c277",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|V2ViJTIwUHVzaCUyMCVDNCVCMHppbmxpJTIwUGFzaWYlMjBNb2JpbGU=",
                    "segment": [253],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "209": {
                    "variations": [{
                        "varId": "c280",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c278",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|V2ViJTIwUHVzaCUyMCVDNCVCMHppbmxpJTIwUGFzaWYlMjBEZXNrdG9w",
                    "segment": [254],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "219": {
                    "variations": [{
                        "varId": "c286",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c299",
                        "ratio": "5",
                        "type": "n"
                    }, {
                        "varId": "c285",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIwbmRpcmltJTIwQmFkZ2UlMjAlQzMlOUNyJUMzJUJDbiUyMERldGF5JTIwdjI=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "224": {
                    "variations": [{
                        "varId": "c296",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c295",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U3Blc2lmaWslMjAlQzMlOUNyJUMzJUJDbiUyMFByb2dyZXNzJTIwLSUyMERlc2t0b3A=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "233": {
                    "variations": [{
                        "varId": "c301",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c300",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VwZXQlMjBJY29udW5hJTIwVCVDNCVCMWtsYXklQzQlQjFuY2ElMjBZJUMzJUI2bmxlbmRpcm1l",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "239": {
                    "variations": [{
                        "varId": "c303",
                        "ratio": "90",
                        "type": "n"
                    }, {
                        "varId": "c302",
                        "ratio": "10",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2VhcmNoQmFyJTIwLSUyMEFsdCUyMC0lMjBIaXpsaSUyMEFyYW1h",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "55": {
                            "goalId": "55",
                            "goalName": "Kitapl\u0131k Sat\u0131\u015f",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1545040461849",
                                "selectorString": "Kitapl\u0131klar"
                            }]
                        },
                        "56": {
                            "goalId": "56",
                            "goalName": "Ayakkab\u0131l\u0131k Sat\u0131\u015f",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1545040498807",
                                "selectorString": "Ayakkab\u0131l\u0131klar"
                            }]
                        },
                        "57": {
                            "goalId": "57",
                            "goalName": "Hal\u0131 Sat\u0131\u015f",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1545040513756",
                                "selectorString": "Hal\u0131lar"
                            }]
                        },
                        "58": {
                            "goalId": "58",
                            "goalName": "Sandalye Sat\u0131\u015f",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1545040530473",
                                "selectorString": "Sandalyeler"
                            }]
                        },
                        "59": {
                            "goalId": "59",
                            "goalName": "\u00c7er\u00e7eve Sat\u0131\u015f",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1545040574832",
                                "selectorString": "\u00c7er\u00e7eveler"
                            }]
                        },
                        "60": {
                            "goalId": "60",
                            "goalName": "Mum Sat\u0131\u015f",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1546857456564",
                                "selectorString": "Mumlar"
                            }]
                        },
                        "61": {
                            "goalId": "61",
                            "goalName": "\u00c7al\u0131\u015fma Masas\u0131",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1546857488447",
                                "selectorString": "\u00c7al\u0131\u015fma Masalar\u0131"
                            }]
                        },
                        "62": {
                            "goalId": "62",
                            "goalName": "Sehpa Sat\u0131\u015f",
                            "goalJs": "",
                            "type": "productCategorySuccess",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1546857506397",
                                "selectorString": "Sehpalar"
                            }]
                        }
                    }
                },
                "251": {
                    "variations": [{
                        "varId": "270",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "285",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "268",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|VVRNJTIwS3Vwb24lMjBEaXNwbGF5JTIwdmUlMjBDQ0E=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "256": {
                    "variations": [{
                        "varId": "302",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "274",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|YXNk",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "257": {
                    "variations": [{
                        "varId": "c317",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c316",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMDAlMjBBcmFtYSUyMFNvbnUlQzMlQTclMjB2Mw==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "259": {
                    "variations": [{
                        "varId": "c319",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c318",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBMVVNUSUdU",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "4": {
                            "goalId": "4",
                            "goalName": "Sepet Sayfas\u0131 G\u00f6r\u00fcnt\u00fclenme",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1527489026894",
                                "selectorString": "\/siparis-adim"
                            }]
                        },
                        "5": {
                            "goalId": "5",
                            "goalName": "\u0130yi Fikirler Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1528456401102",
                                "selectorString": "\/iyi-fikirler\/"
                            }]
                        }
                    }
                },
                "266": {
                    "variations": [{
                        "varId": "288",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "287",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|QW5rZXQlMjBEZW5lbWUlMjBEZXNrdG9w",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "270": {
                    "variations": [{
                        "varId": "297",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "296",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|U29uJTIwR2V6aWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVy",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "2": {
                            "goalId": "2",
                            "goalName": "Sepete Ekle Desktop Click",
                            "goalJs": "",
                            "type": "click",
                            "result": null,
                            "goalList": [{
                                "id": "sp-goal-1527023331057",
                                "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > div:eq(2) > a:eq(0)"
                            }]
                        },
                        "63": {
                            "goalId": "63",
                            "goalName": "Product Page Visit",
                            "goalJs": "",
                            "type": "rules",
                            "result": "true",
                            "goalList": [{
                                "id": "sp-goal-1548010085441",
                                "selectorString": "spApi.isOnProductPage()"
                            }]
                        }
                    }
                },
                "271": {
                    "variations": [{
                        "varId": "299",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "298",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|SGFtYnVyZ2VyJTIwTWVudSUyME9uJTIwUGFnZQ==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": {
                        "64": {
                            "goalId": "64",
                            "goalName": "K\u0131\u015f \u0130ndirimi URL Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1548011944010",
                                "selectorString": "\/kis-indirimi"
                            }]
                        },
                        "65": {
                            "goalId": "65",
                            "goalName": "Oturma Odalar\u0131 URL Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1548011967403",
                                "selectorString": "\/oturma-odalari.aspx"
                            }]
                        },
                        "66": {
                            "goalId": "66",
                            "goalName": "Yatak Odalar\u0131 URL Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1548011986961",
                                "selectorString": "\/yatak-odalari.aspx"
                            }]
                        },
                        "67": {
                            "goalId": "67",
                            "goalName": "Ev Dekorasyonu Gezenler",
                            "goalJs": "",
                            "type": "pageViews",
                            "result": "contains",
                            "goalList": [{
                                "id": "sp-goal-1548012002779",
                                "selectorString": "\/ev-dekorasyonu.aspx"
                            }]
                        }
                    }
                },
                "274": {
                    "variations": [{
                        "varId": "306",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "305",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|U2xpZGVUbyUyMEFkZCUyMHRvJTIwY2FydCUyMHRlc3Q=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "276": {
                    "variations": [{
                        "varId": "310",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "309",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|YWRkVG9DYXJ0JTIwVGVzdA==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "278": {
                    "variations": [{
                        "varId": "314",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "313",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|dGVzdC1xYQ==",
                    "segment": [323],
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "280": {
                    "variations": [{
                        "varId": "318",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "317",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|dGVzdHQ=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "282": {
                    "variations": [{
                        "varId": "320",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "319",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|JUMzJTlDciVDMyVCQ24lQzMlQkMlMjBTZXBldGUlMjBFa2xl",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "283": {
                    "variations": [{
                        "varId": "c336",
                        "ratio": "50",
                        "type": "n"
                    }, {
                        "varId": "c329",
                        "ratio": "50",
                        "type": "cg"
                    }],
                    "name": "|-x-|VGFiJTIwVGFsayUyMEIlQzMlQkN5JUMzJUJDayUyMCVDNCVCMG5kaXJpbQ==",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "284": {
                    "variations": [{
                        "varId": "c335",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "c332",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|cWF0ZXN0",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "291": {
                    "variations": [{
                        "varId": "c344",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "c343",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|S0RWJTIwJUM0JUIwbmRpcmltaSUyMEdlcmklMjBTYXklQzQlQjFt",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "294": {
                    "variations": [{
                        "varId": "332",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "331",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|R2VyaSUyMFNheSVDNCVCMW0=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "297": {
                    "variations": [{
                        "varId": "336",
                        "ratio": "100",
                        "type": "n"
                    }, {
                        "varId": "335",
                        "ratio": "0",
                        "type": "cg"
                    }],
                    "name": "|-x-|dGVzdHM=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "298": {
                    "variations": [{
                        "varId": "338",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "337",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|cWF0ZXN0dHM=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "299": {
                    "variations": [{
                        "varId": "341",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "339",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|Q2F0ZWdvcnklMjBQYWdl",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                },
                "300": {
                    "variations": [{
                        "varId": "343",
                        "ratio": "95",
                        "type": "n"
                    }, {
                        "varId": "342",
                        "ratio": "5",
                        "type": "cg"
                    }],
                    "name": "|-x-|Q2FydCUyMFBhZ2U=",
                    "segment": null,
                    "priority": "0",
                    "gaSegmentId": "",
                    "goalBuilderList": []
                }
            },
            rules: {
                "26": {
                    "id": "26",
                    "name": "Sepette \u00dcr\u00fcn Varsa",
                    "test": "spApi.getCartCount() > 0;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "1"
                },
                "139": {
                    "id": "139",
                    "name": "Bildirimler Engelliyse",
                    "test": "Notification.permission === \"denied\"",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "4": {
                    "id": "4",
                    "name": "Sepet Sayfas\u0131",
                    "test": "1==1 && spApi.isOnCartPage()",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "1"
                },
                "285": {
                    "id": "285",
                    "name": "\u00d6nceki Sayfa Sepet De\u011filse",
                    "test": "document.referrer.indexOf('siparis-adim') === -1",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "341": {
                    "id": "341",
                    "name": "Mobile Cart Reminder - TR Custom",
                    "test": "var builderId = 150;\r\nvar purchaseTriggerCampId = spApi.userSegments[builderId];\r\n\r\nsQuery('.ins-preview-wrapper-' + purchaseTriggerCampId + ':visible').elementLoadComplete(function () {\r\n    if (sQuery('#smartbanner:visible').exists()) {\r\n        sQuery('head')\r\n            .append('<style>.ins-preview-wrapper-' +\r\n                purchaseTriggerCampId + ' {top: 45px !important;}<\/style>');\r\n    } else {\r\n        sQuery('head')\r\n            .append('<style>.ins-preview-wrapper-' +\r\n                purchaseTriggerCampId + ' {top: 125px !important;}<\/style>');\r\n    }\r\n}, {\r\n    i: 200,\r\n    t: 10000\r\n});\r\n\r\ntrue;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "175": {
                    "id": "175",
                    "name": "cartReminderOnSite - 150",
                    "test": "JSON.parse(spApi.storageData('ins-cart-product-list')) !== null &&JSON.parse(spApi.storageData('ins-cart-product-list')).productList.length >= 1 &&sQuery.cookie('total-cart-amount') !== null &&parseFloat(sQuery.cookie('total-cart-amount')) > 0 &&!spApi.isOnCartPage() && !spApi.isOnAfterPaymentPage()",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "286": {
                    "id": "286",
                    "name": "\u00d6nceki Sayfa Sepet De\u011filse ENG",
                    "test": "document.referrer.indexOf('order-steps') === -1",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "180": {
                    "id": "180",
                    "name": "cartReminderOnSite - 151",
                    "test": "JSON.parse(spApi.storageData('ins-cart-product-list')) !== null &&JSON.parse(spApi.storageData('ins-cart-product-list')).productList.length >= 1 &&sQuery.cookie('total-cart-amount') !== null &&parseFloat(sQuery.cookie('total-cart-amount')) > 0 &&!spApi.isOnCartPage() && !spApi.isOnAfterPaymentPage()",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "312": {
                    "id": "312",
                    "name": "web-versus - 270",
                    "test": "(spApi.getVisitedProducts() || []).length > 0",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "172": {
                    "id": "172",
                    "name": "Product Page",
                    "test": "spApi.isOnProductPage()",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "1"
                },
                "331": {
                    "id": "331",
                    "name": "Product Name Formatting Rule",
                    "test": "spApi.getCamp(spApi.userSegments[270]).show(function () {\r\n    sQuery('.ins-versus-product-details .ins-product-name').each(function () {\r\n        var threshold = 13;\r\n        var productName = sQuery(this).text();\r\n        var splits = productName.match(\/([^\\s]*)\\s(.*)\/);\r\n        var brandName = splits[1];\r\n        var productNameHtml = productName;\r\n\r\n        if (window.navigator.userAgent.indexOf('Firefox') > -1) {\r\n            threshold = 12;\r\n        }\r\n\r\n        if (brandName.length > threshold) {\r\n            brandName = brandName.slice(0, threshold - 1) + '...';\r\n\r\n            productNameHtml = brandName + ' ' + splits[2];\r\n        }\r\n\r\n        \/*\r\n        if (productNameHtml.length > threshold * 2) {\r\n            productNameHtml = productNameHtml.slice(0, threshold * 2 + 1) + '...';\r\n        }\r\n        *\/\r\n\r\n        sQuery(this).text(productNameHtml);\r\n    });\r\n\r\n    sQuery('.detailed-product-inner-wrapper').css('width', '100%');\r\n});\r\n\r\ntrue;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "315": {
                    "id": "315",
                    "name": "Hamburger Menu On Page Auto Click",
                    "test": "var campId = 299;\r\n\r\nspApi.getCamp(campId).show(function () {\r\n    sQuery('#wrap-button-1492688272087').click();\r\n});\r\n\r\ntrue;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "317": {
                    "id": "317",
                    "name": "slideToAddToCart - 274",
                    "test": "spApi.isOnProductPage() && spApi.getCurrentProduct().id !== ''",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "329": {
                    "id": "329",
                    "name": "slideToAddToCart - 282",
                    "test": "spApi.isOnProductPage() && spApi.getCurrentProduct().id !== ''",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "349": {
                    "id": "349",
                    "name": "cartReminderOnSite - 298",
                    "test": "JSON.parse(spApi.storageData('ins-cart-product-list')) !== null &&JSON.parse(spApi.storageData('ins-cart-product-list')).productList.length >= 1 &&sQuery.cookie('total-cart-amount') !== null &&parseFloat(sQuery.cookie('total-cart-amount')) > 0 &&!spApi.isOnCartPage() && !spApi.isOnAfterPaymentPage()",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "102": {
                    "id": "102",
                    "name": "Check Filter Exist",
                    "test": "sQuery('.filter-options').exists();",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "352": {
                    "id": "352",
                    "name": "Custom Recommender Style Adjuster Rule",
                    "test": "spApi.customRecommenderStyleAdjuster = function (params) {\r\n    'use strict';\r\n\r\n    var self = {};\r\n    var mainContainerSelector = '.ins-preview-wrapper-' + params.campId;\r\n\r\n    self.init = function () {\r\n        self.reset();\r\n\r\n        self.adjustStyleOnDataPresence(function () {\r\n            self.adjustBrandName();\r\n            self.adjustPrices();\r\n            self.addHeaderText();\r\n            self.addCommonStyling();\r\n\r\n            if (params.hoverEffect) {\r\n                self.addButtons();\r\n                self.setEvents();\r\n            }\r\n        });\r\n    };\r\n\r\n    self.reset = function () {\r\n        sQuery('#ins-custom-recommendation-style-' + params.campId).remove();\r\n        sQuery('.ins-additional-buttons').remove();\r\n        sQuery('.ins-custom-header-text').remove();\r\n    };\r\n\r\n    self.adjustStyleOnDataPresence = function (callback) {\r\n        if (sQuery('.ins-web-smart-recommender-box-item', mainContainerSelector).length === 0) {\r\n            sQuery(mainContainerSelector).hide();\r\n\r\n            return;\r\n        }\r\n\r\n        if (typeof callback === 'function') {\r\n            callback();\r\n        }\r\n    };\r\n\r\n    self.adjustBrandName = function () {\r\n        if (params.brandNameCapitalization !== true) {\r\n            return;\r\n        }\r\n\r\n        sQuery('.ins-product-name', mainContainerSelector).each(function () {\r\n            var name = sQuery.trim(sQuery(this).text());\r\n            var brandNameLength = self.getBrandNameLength(name);\r\n\r\n            sQuery(this).html(\r\n                '<strong>' + name.substr(0, brandNameLength) + '<\/strong>' + name.substr(brandNameLength, name.length)\r\n            );\r\n        });\r\n    };\r\n\r\n    self.getBrandNameLength = function (name) {\r\n        var counter;\r\n\r\n        for (counter = 0; counter < name.length; counter++) {\r\n            if (!(name[counter] === name[counter].toUpperCase() || name[counter] === '\/')) {\r\n                break;\r\n            } else if (!isNaN(name[counter]) && name[counter - 1] === ' ') {\r\n                counter -= 1;\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        return counter;\r\n    };\r\n\r\n    self.adjustPrices = function () {\r\n        var discountPriceContainerSelector = '.ins-product-discount-container';\r\n        var priceContainerSelector = '.ins-product-price-container';\r\n\r\n        sQuery('.ins-product-prices', mainContainerSelector).each(function (index) {\r\n\r\n            self.adjustPriceHtml(discountPriceContainerSelector + ':eq(' + index + ')', '.ins-product-discount');\r\n            self.adjustPriceHtml(priceContainerSelector + ':eq(' + index + ')', '.ins-product-price');\r\n\r\n            sQuery(priceContainerSelector + ':eq(' + index + ')').before(\r\n                sQuery(discountPriceContainerSelector + ':eq(' + index + ')')\r\n            );\r\n        });\r\n    };\r\n\r\n    self.adjustPriceHtml = function (parentSelector, childSelector) {\r\n        var price = sQuery.trim(sQuery(parentSelector).text());\r\n\r\n        if (price !== '' || price !== 'N\/A') {\r\n            sQuery(childSelector, parentSelector).html(\r\n                self.getFormattedPrice(price) + '<span class=\"tl\"><i>t<\/i><\/span>' +\r\n                (childSelector.indexOf('discount') > -1 ? '<sub><\/sub>' : '')\r\n            );\r\n        }\r\n    };\r\n\r\n    self.getFormattedPrice = function (value) {\r\n        value = parseFloat(value).toLocaleString().split('.');\r\n\r\n        var regex = new RegExp(',', 'g');\r\n\r\n        return (value[0] || '').replace(regex, '.') + (value[1] ? ',' + value[1] : '');\r\n    };\r\n\r\n    self.addHeaderText = function () {\r\n        if (!params.headerText) {\r\n            return;\r\n        }\r\n\r\n        sQuery(mainContainerSelector).after(\r\n            '<div class=\"ins-custom-header-text\"> T\u00fcm \u00dcr\u00fcnler <\/div>'\r\n        );\r\n    };\r\n\r\n    self.addCommonStyling = function () {\r\n        sQuery('.ins-preview-wrapper-' + params.campId + ' .ins-notification-content-' + params.campId).attr('style', '');\r\n\r\n        sQuery('head').append(\r\n            '<style id=\"ins-custom-recommendation-style-' + params.campId + '\">' +\r\n            '.ins-custom-box-item {height: 380px !important;}' +\r\n            '.ins-preview-wrapper-343 .ins-slider-arrow-element{top:72%!important}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-web-smart-recommender-main-wrapper{position:relative !important}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-slider-arrow-element{top:50%!important}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-web-smart-recommender-main-wrapper{box-shadow: none; !important}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-web-smart-recommender-body{height:390px !important;}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-web-smart-recommender-box-item{height:300px;}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-product-name-container {height:40px!important}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-product-discount-container{display:block !important;}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .ins-product-discount{position:relative !important;color:#000 !important;font-size:14px;font-weight:700 !important;margin:2px 0 4px 0;padding-left:0}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' sub{width:100%;height:2px;background:red;display:block;position:absolute;left:0;top:6px;padding:0 2px}' +\r\n            '.ins-additional-buttons>div{display:block;height:25px;width:170px;color:#fff;font-size:14px;font-weight:700;padding:5px}.ins-additional-buttons img{float:left}.ins-additional-buttons span{margin-left:5px}.ins-cart-button.ins-custom-add-to-cart{background:orange}.ins-cart-favorite-button{margin-top:5px;background:#bababa}' +\r\n            '.ins-preview-wrapper-' + params.campId + ' .addToCartContent{font-size:10px !important;}' +\r\n            '.ins-custom-header-text{font-family:inherit;font-size:16px;color:#000;margin-left:10px;font-weight:700}' +\r\n            '<\/style>'\r\n        );\r\n    };\r\n\r\n    self.addButtons = function () {\r\n        var basketImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/ik0oJ9iDQeCO3WuZuMgQ1540984791.png';\r\n        var favoriteImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/25k82xK4fliteBIJEtiB1540984819.png';\r\n        var productId = '';\r\n\r\n        sQuery('.ins-web-smart-recommender-inner-box').each(function () {\r\n            productId = sQuery('.ins-add-to-cart-wrapper', this).attr('ins-product-id');\r\n\r\n            sQuery(this).append(\r\n                '<div class=\"ins-additional-buttons\">' +\r\n                '<div class=\"ins-cart-button ins-custom-add-to-cart first sp-custom-' + params.campId + '-2\" ' +\r\n                ' onclick=\"shopping.addCartItem(\\'' + (productId || '') + '\\', this);\">' +\r\n                '<img src=\"' + basketImageUrl + '\" class=\"ins-cart-icon\"\/>' +\r\n                (params.addToCartButtonText ? (\r\n                    '<span>' + params.addToCartButtonText + '<\/span>'\r\n                ) : '') +\r\n                '<\/div>' +\r\n                '<div class=\"ins-cart-button ins-cart-favorite-button sp-custom-' + params.campId + '-3\" ' +\r\n                ' onclick=\"user.favorite.addItem(\\'' + (productId || '') + '\\', this);\">' +\r\n                '<img src=\"' + favoriteImageUrl + '\"\/>' +\r\n                (params.addToFavoritesButtonText ? (\r\n                    '<span>' + params.addToFavoritesButtonText + '<\/span>'\r\n                ) : '') +\r\n                '<\/div>' +\r\n                '<\/div>'\r\n            );\r\n        });\r\n    };\r\n\r\n    self.setEvents = function () {\r\n        sQuery('.ins-web-smart-recommender-box-item')\r\n            .off('mouseover').on('mouseover', function () {\r\n                sQuery(this).addClass('ins-custom-box-item');\r\n            });\r\n\r\n        sQuery('.ins-web-smart-recommender-box-item')\r\n            .off('mouseleave').on('mouseleave', function () {\r\n                sQuery(this).removeClass('ins-custom-box-item');\r\n            });\r\n    };\r\n\r\n    return self.init();\r\n};\r\n\r\ntrue;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "90": {
                    "id": "90",
                    "name": "\u00d6nerilen \u00dcr\u00fcnler \u0130ndirim Badge Rule",
                    "test": "var success = false;\r\n\r\nsQuery('.owl-carousel').elementLoadComplete(function () {\r\n    setTimeout(function () {\r\n        sQuery('#productGallery .owl-item').each(function (index, product) {\r\n            if (sQuery('.price.old', product).exists() &&\r\n                sQuery('.type span:not(.CampaingTxt)', product).length === 0) {\r\n                success = true;\r\n            }\r\n        });\r\n\r\n        if (spApi.isOnProductPage() && success) {\r\n            var camp = spApi.getCamp(spApi.userSegments[23]).camp;\r\n\r\n            if (spApi.getLang() === camp.lang) {\r\n                spApi.showCustomCamp(camp);\r\n            }\r\n        }\r\n    }, 1000);\r\n});\r\n\r\nfalse;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "88": {
                    "id": "88",
                    "name": "\u00d6nerilen \u00dcr\u00fcnler \u00d6zel \u0130ndirim Badge Rule",
                    "test": "sQuery('#productGallery .owl-carousel').elementLoadComplete(function () {\r\n    if (spApi.isOnProductPage() && sQuery('#productGallery .owl-item .type .discount.mb5').exists()) {\r\n        var camp = spApi.getCamp(spApi.userSegments[28]).camp;\r\n\r\n        if (spApi.getLang() === camp.lang) {\r\n            spApi.showCustomCamp(camp);\r\n        }\r\n    }\r\n});\r\n\r\nfalse;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "45": {
                    "id": "45",
                    "name": "GR\u00d6NLID \u00dcr\u00fcnleri",
                    "test": "var arr = [\"09256280\",\"19255440\",\"39256047\",\"49254774\",\"59255754\",\"39255651\",\"19256029\",\"39254816\",\"39255627\",\"89256262\",\"99255422\",\"19255464\",\"59256305\",\"19256053\",\"79256286\",\"89255446\",\"29256298\",\"39255458\",\"59256065\",\"69254792\",\"69255777\",\"09255657\",\"59256292\",\"69255452\",\"89254786\",\"89256059\",\"39256071\",\"49255783\",\"99254804\",\"19256232\",\"49254665\",\"59255706\",\"69255391\",\"89255998\",\"19255609\",\"69256244\",\"79255404\",\"99254677\",\"99256011\",\"19255398\",\"19256005\",\"29254671\",\"49255603\",\"89256238\",\"09256256\",\"19255416\",\"49254689\",\"49255735\",\"49256023\",\"39256250\",\"49255410\",\"69256017\",\"79254683\",\"89255724\",\"09256077\",\"29255675\",\"39256311\",\"69254810\",\"89255470\"]\r\n\r\nvar success = false;\r\n\r\narr.forEach(function(element){\r\n\tif((spApi.getCurrentProduct().id == (element))===true) { \r\n\t\t\r\n\t\tsuccess = true;\r\n\r\n    }\r\n});\r\n\r\nsuccess;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "47": {
                    "id": "47",
                    "name": "EKEDALEN \u00dcr\u00fcnleri",
                    "test": "var arr = [\"40341021\",\"60341015\",\"80340760\",\"20340758\",\"30340809\",\"40340837\",\"70340765\",\"70340812\",\"00341023\",\"80341019\",\"19221351\",\"19221450\",\"20340824\",\"40340804\",\"60340822\",\"70340807\",\"70340826\",\"80340835\",\"90340769\",\"90340774\",\"10341032\",\"40340762\",\"00340801\",\"00340839\"]\r\n\r\nvar success = false;\r\n\r\narr.forEach(function(element){\r\n\tif((spApi.getCurrentProduct().id == (element))===true) { \r\n\t\t\r\n\t\tsuccess = true;\r\n\r\n    }\r\n});\r\n\r\nsuccess;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "49": {
                    "id": "49",
                    "name": "KALLAX \u00dcr\u00fcnleri",
                    "test": "var arr = [\"00275848\",\"00278168\",\"00279549\",\"09017483\",\"09030408\",\"09030427\",\"09030489\",\"09030564\",\"10275857\",\"10275862\",\"10280632\",\"20275814\",\"20275885\",\"20275890\",\"20278167\",\"20279459\",\"29030577\",\"30275861\",\"30280631\",\"39017472\",\"40275813\",\"40275846\",\"40278840\",\"40279552\",\"50278482\",\"59030571\",\"60275812\",\"60278170\",\"60279457\",\"60282520\",\"69017475\",\"69030429\",\"69030938\",\"70275816\",\"70286645\",\"70286650\",\"79017451\",\"79030551\",\"80275887\",\"80278838\",\"89026252\",\"89030428\",\"89030555\",\"90275820\",\"90275844\",\"90286649\",\"99017186\",\"99017191\",\"99017445\",\"99017469\",\"99030526\",\"99030545\",\"00288657\",\"00301588\",\"10305741\",\"20305745\",\"50301543\",\"50305739\",\"70301537\",\"70301542\",\"79030481\",\"00314642\",\"40314640\",\"20323382\",\"00308226\",\"20308225\",\"30308220\",\"20300286\",\"50323385\",\"19030484\",\"89030490\",\"09197436\",\"09155506\",\"40346924\",\"70346927\",\"19207034\",\"10345073\",\"40346071\",\"60345075\",\"60346070\",\"29155497\",\"29207038\",\"39207028\",\"49155496\",\"59207032\",\"69207036\",\"79207026\",\"89155507\",\"89207040\",\"99207030\",\"00324518\",\"10324513\",\"30324507\",\"40324516\",\"50324511\",\"60324520\",\"20346072\",\"09197605\",\"90324509\"]\r\n\r\nvar success = false;\r\n\r\narr.forEach(function(element){\r\n\tif((spApi.getCurrentProduct().id == (element))===true) { \r\n\t\t\r\n\t\tsuccess = true;\r\n\r\n    }\r\n});\r\n\r\nsuccess;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "51": {
                    "id": "51",
                    "name": "KRUX \u00dcr\u00fcnleri",
                    "test": "var arr = [\"70382048\",\"50325450\",\"70325468\",\"60325459\",\"60392180\"]\r\n\r\nvar success = false;\r\n\r\narr.forEach(function(element){\r\n\tif((spApi.getCurrentProduct().id == (element))===true) { \r\n\t\t\r\n\t\tsuccess = true;\r\n\r\n    }\r\n});\r\n\r\nsuccess;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "53": {
                    "id": "53",
                    "name": "SKADIS \u00dcr\u00fcnleri",
                    "test": "var arr = [\"00320799\",\"00320803\",\"00321614\",\"10320789\",\"10321618\",\"20320798\",\"20320802\",\"40320815\",\"40321631\",\"50320805\",\"50321616\",\"50335618\",\"70320809\",\"09217123\",\"19216694\",\"29217377\",\"39216589\",\"39217065\",\"39217070\",\"49216697\",\"49217381\",\"10320812\",\"80335909\",\"00335885\",\"09216595\",\"09217175\",\"09217180\",\"29217061\",\"39216136\",\"59215664\",\"99216435\",\"19276414\"]\r\n\r\nvar success = false;\r\n\r\narr.forEach(function(element){\r\n\tif((spApi.getCurrentProduct().id == (element))===true) { \r\n\t\t\r\n\t\tsuccess = true;\r\n\r\n    }\r\n});\r\n\r\nsuccess;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "55": {
                    "id": "55",
                    "name": "MOSSLANDA \u00dcr\u00fcnleri",
                    "test": "var arr = [\"20291767\",\"40291766\",\"70292104\",\"90292103\"]\r\n\r\nvar success = false;\r\n\r\narr.forEach(function(element){\r\n\tif((spApi.getCurrentProduct().id == (element))===true) { \r\n\t\t\r\n\t\tsuccess = true;\r\n\r\n    }\r\n});\r\n\r\nsuccess;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "57": {
                    "id": "57",
                    "name": "VARDAGEN \u00dcr\u00fcnleri",
                    "test": "var arr = [\"70256993\"]\r\n\r\nvar success = false;\r\n\r\narr.forEach(function(element){\r\n\tif((spApi.getCurrentProduct().id == (element))===true) { \r\n\t\t\r\n\t\tsuccess = true;\r\n\r\n    }\r\n});\r\n\r\nsuccess;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "136": {
                    "id": "136",
                    "name": "Sepette \u00dcr\u00fcn Yoksa",
                    "test": "spApi.getCartCount() < 1;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "151": {
                    "id": "151",
                    "name": "Success Page",
                    "test": "spApi.isOnAfterPaymentPage() || spApi.hasParameter('insIkeaOther');",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "261": {
                    "id": "261",
                    "name": "isThereSearchBar",
                    "test": "if (spApi.isOnProductPage()) {\r\n    var product = spApi.getCurrentProduct();\r\n\r\n    sQuery.cookie('ins-last-visited-product-name', product.name, {\r\n        path: '\/',\r\n        domain: '.' + partner_site.host\r\n    });\r\n}\r\n\r\n(sQuery('#txtSearchBox').length === 1 || sQuery('#txtMainSearch').length === 1) && sQuery.cookie('ins-last-visited-product-name') !== null;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "3": {
                    "id": "3",
                    "name": "\u00dcr\u00fcn Detay Sayfas\u0131",
                    "test": "1==1 && spApi.isOnProductPage()",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "1"
                },
                "289": {
                    "id": "289",
                    "name": "Cart Reminder Show Rule [D]",
                    "test": "var builderId = 157;\r\nvar isOnCartPage = spApi.isOnCartPage();\r\nvar isOnProductPage = spApi.isOnProductPage();\r\nvar isOnCategoryPage = spApi.isOnCategoryPage();\r\nvar isOnMainPage = spApi.isOnMainPage();\r\n\r\nspApi.getExpiredHoursDate = function (hourValue) {\r\n    var currentDate = new Date();\r\n\r\n    return (new Date(currentDate.getTime() + (hourValue * 1000 * 60 * 60)));\r\n};\r\n\r\nspApi.isCookieExpired = function (cookieName) {\r\n    var currentTime = new Date().getTime();\r\n    var targetTime = parseInt(sQuery.cookie(cookieName)) || 0;\r\n\r\n    if (currentTime < targetTime || sQuery.cookie(cookieName) === null) {\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nif (isOnCartPage) {\r\n    spApi.storageData('ins-is-visit-cart-page', true);\r\n}\r\n\r\nspApi.listenAjaxCalls(function (url, response) {\r\n    if (url.indexOf('AddShoppingCart') !== -1 && response.indexOf('603') === -1) {\r\n        spApi.setCustomCookie('ins-cart-reminder-live-time', spApi.getExpiredHoursDate(1).getTime(), 365);\r\n    }\r\n});\r\n\r\nif (spApi.isOnAfterPaymentPage() || (isOnCartPage && spApi.getPaidProducts().length === 0)) {\r\n    spApi.setCustomCookie('ins-cart-reminder-live-time', null, 365);\r\n}\r\n\r\nif (!isOnCartPage || isOnMainPage || isOnProductPage || isOnCategoryPage) {\r\n    setTimeout(function () {\r\n        var campId = spApi.userSegments[builderId];\r\n        var camp = spApi.getCamp(campId).camp;\r\n\r\n        if (\r\n            spApi.isCookieExpired('ins-cart-reminder-live-time') &&\r\n            camp.lang === spApi.getLang() &&\r\n            (spApi.getCartProductStorage() || []).length > 0\r\n        ) {\r\n            spApi.showCustomCamp(camp);\r\n        }\r\n    }, 500);\r\n}\r\n\r\nfalse;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "283": {
                    "id": "283",
                    "name": "Is jQuery Exists",
                    "test": "spApi.conLog('\\n\\n Test' + (typeof $ !== 'undefined' && typeof $.fn.owlCarousel !== 'undefined') + '\\n\\n');\r\ntypeof $ !== 'undefined' && typeof $.fn.owlCarousel !== 'undefined';",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "155": {
                    "id": "155",
                    "name": "Excluding Categories",
                    "test": "spApi.getCategories().indexOf(\"Y\u0131l Boyu \u0130ndirim\") < 0 && spApi.getCategories().indexOf(\"Yaz \u00dcr\u00fcnleri\") < 0 && spApi.getCategories().indexOf(\"\u0130\u015f Yeriniz \u0130\u00e7in\") < 0 && spApi.getCategories().indexOf(\"\u0130sve\u00e7 G\u0131da Marketi\") < 0;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "156": {
                    "id": "156",
                    "name": "Excluding Product Categories",
                    "test": "spApi.getProductCategories().indexOf(\"Y\u0131l Boyu \u0130ndirim\") < 0 && spApi.getProductCategories().indexOf(\"Yaz \u00dcr\u00fcnleri\") < 0 && spApi.getProductCategories().indexOf(\"\u0130\u015f Yeriniz \u0130\u00e7in\") < 0 && spApi.getProductCategories().indexOf(\"\u0130sve\u00e7 G\u0131da Marketi\") < 0;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "145": {
                    "id": "145",
                    "name": "Push'a \u0130zin Verenler",
                    "test": "Notification.permission === \"granted\"",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "270": {
                    "id": "270",
                    "name": "isDiscountedProduct",
                    "test": "var product = spApi.getCurrentProduct();\n\nproduct.originalPrice > product.price;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "89": {
                    "id": "89",
                    "name": "\u00dcr\u00fcn Detay \u0130nternete \u00d6zel \u0130ndirim Badge Rule",
                    "test": "spApi.isOnProductPage() && (sQuery('.product-info .discount').exists() || sQuery('.ins-badge-38').exists());",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "23": {
                    "id": "23",
                    "name": "Sepet Tutar\u0131 X TL'den Fazlaysa",
                    "test": "spApi.getTotalCartAmount() > 0;",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "295": {
                    "id": "295",
                    "name": "Belirli \u00dcr\u00fcnlerde G\u00f6sterme",
                    "test": "if (!spApi.isOnAfterPaymentPage()) {\r\n    var productsListId = ['00002222', '00003333', '00005600', '00005601', '00005602', '00005603', '00005604', '00005605',\r\n        '00017133', '00075689', '00078032', '00078051', '00078334', '00081591', '00103282', '00118523', '00120007',\r\n        '00122822', '00128409', '00132312', '00132524', '00140326', '00165802', '00173736', '00174769', '00176853',\r\n        '00185683', '00186102', '00186319', '00186376', '00186545', '00207642', '00209269', '00209405', '00212304',\r\n        '00213488', '00215576', '00221228', '00221916', '00226527', '00228102', '00232217', '00232830', '00232948',\r\n        '00233354', '00234179', '00234216', '00234240', '00234546', '00236121', '00236277', '00236319', '00236357',\r\n        '00236362', '00241815', '00241820', '00243503', '00251475', '00251550', '00251852', '00252861', '00253714',\r\n        '00258306', '00258311', '00259141', '00259216', '00259221', '00259339', '00259363', '00259382', '00267240',\r\n        '00268876', '00281279', '00282778', '00282783', '00285183', '00285791', '00285852', '00285908', '00285913',\r\n        '00285927', '00287083', '00288445', '00288718', '00291768', '00291773', '00291787', '00291792', '00292094',\r\n        '00292292', '00293692', '00294979', '00295653', '00295870', '00296394', '00298289', '00298307', '00298312',\r\n        '00300013', '00300353', '00300386', '00303163', '00303177', '00303196', '00303219', '00303238', '00303257',\r\n        '00303993', '00304148', '00304153', '00305077', '00305770', '00306029', '00306920', '00310371', '00310408',\r\n        '00310413', '00310960', '00311078', '00311097', '00311101', '00313082', '00317179', '00319159', '00319220',\r\n        '00320704', '00325103', '00327277', '00327282', '00327296', '00329035', '00329040', '00329969', '00330878',\r\n        '00331340', '00331458', '00334292', '00335668', '00335673', '00335767', '00335852', '00336516', '00337356',\r\n        '00337380', '00337790', '00338134', '00338172', '00338233', '00338488', '00338577', '00338723', '00338737',\r\n        '00338817', '00338841', '00338855', '00338898', '00339360', '00339459', '00339727', '00339794', '00343244',\r\n        '00343282', '00343300', '00343791', '00345403', '00345648', '00345728', '00348114', '00348543', '00348557',\r\n        '00349533', '00350526', '00350729', '00350734', '00350828', '00352912', '00355232', '00355289', '00355294',\r\n        '00355307', '00355312', '00355326', '00355350', '00355374', '00355388', '00355576', '00358221', '00359051',\r\n        '00363430', '00363468', '00363473', '00365599', '00366155', '00366339', '00367541', '00370497', '00370534',\r\n        '00374004', '00374136', '00376611', '00377620', '00378083', '00378399', '00378403', '00378436', '00384418',\r\n        '00384442', '00384593', '00384611', '00384734', '00384748', '00384866', '00385088', '00385093', '00386158',\r\n        '00387172', '00387191', '00387978', '00388020', '00388044', '00388402', '00388416', '00388440', '00392499',\r\n        '00392654', '00393031', '00393984', '00394484', '00394865', '00395290', '00395308', '00395313', '00395624',\r\n        '00396242', '00396322', '00398401', '00398934', '00399090', '00399212', '00399863', '00400946', '00400989',\r\n        '00401106', '00401601', '00402479', '00402714', '00402945', '00403266', '00406608', '00406689', '00407373',\r\n        '00407472', '00407556', '00407882', '00408853', '00411247', '00412336', '00416645', '00416650', '00417287',\r\n        '00418258', '00418461', '00418625', '00418970', '00419578', '00420058', '00421977', '00422038', '00422076',\r\n        '00422199', '00422217', '00423113', '09178046', '09247479', '10067655', '10098987', '10117033', '10119838',\r\n        '10121252', '10122987', '10123557', '10132340', '10132528', '10139191', '10148464', '10151017', '10153648',\r\n        '10153653', '10155162', '10155275', '10155666', '10155671', '10156109', '10159443', '10159867', '10165806',\r\n        '10174783', '10182189', '10185729', '10186026', '10186050', '10186093', '10186111', '10186615', '10186658',\r\n        '10186724', '10208919', '10209457', '10232863', '10233377', '10233462', '10236069', '10236093', '10236347',\r\n        '10236352', '10239647', '10239888', '10243526', '10251093', '10252709', '10254685', '10258037', '10258155',\r\n        '10258297', '10258674', '10258693', '10258792', '10258829', '10259145', '10259211', '10267678', '10277644',\r\n        '10280726', '10282749', '10285470', '10285502', '10285535', '10285583', '10285639', '10285644', '10285781',\r\n        '10285823', '10285875', '10285880', '10285922', '10286785', '10288770', '10291763', '10291777', '10291782',\r\n        '10292022', '10292300', '10293719', '10294728', '10295657', '10296567', '10296732', '10296831', '10298316',\r\n        '10298953', '10300395', '10300588', '10301861', '10303153', '10303167', '10303172', '10303186', '10303191',\r\n        '10303228', '10303233', '10303266', '10303365', '10308198', '10308264', '10309777', '10310629', '10311006',\r\n        '10311087', '10311092', '10311676', '10313901', '10314316', '10318041', '10319173', '10320218', '10320317',\r\n        '10320529', '10320534', '10320548', '10325602', '10326588', '10326885', '10327314', '10327941', '10329030',\r\n        '10329308', '10329997', '10330849', '10332527', '10334244', '10334296', '10334475', '10334531', '10334692',\r\n        '10335658', '10335663', '10335677', '10335719', '10335998', '10336525', '10336950', '10337313', '10337394',\r\n        '10337407', '10338096', '10338119', '10338440', '10338807', '10338831', '10338874', '10338888', '10339642',\r\n        '10339699', '10339784', '10340099', '10341471', '10343248', '10343309', '10343314', '10343795', '10343941',\r\n        '10344969', '10345723', '10345898', '10345916', '10345921', '10348118', '10350516', '10353685', '10355217',\r\n        '10355222', '10355284', '10355298', '10355302', '10355316', '10355321', '10355335', '10355340', '10355364',\r\n        '10355378', '10355383', '10359084', '10361807', '10365419', '10371284', '10373768', '10374150', '10375140',\r\n        '10375159', '10378087', '10378445', '10378474', '10378515', '10378539', '10380716', '10381443', '10381768',\r\n        '10382169', '10384615', '10384677', '10384743', '10384861', '10385139', '10385144', '10387058', '10387124',\r\n        '10387181', '10387609', '10388048', '10388109', '10388406', '10388411', '10388430', '10388449', '10388878',\r\n        '10389854', '10390664', '10391908', '10394662', '10394676', '10395322', '10395336', '10398066', '10398368',\r\n        '10399117', '10399122', '10399810', '10399952', '10400696', '10400757', '10400804', '10400922', '10400998',\r\n        '10401144', '10401304', '10401667', '10402469', '10402474', '10403256', '10406636', '10406778', '10407377',\r\n        '10407457', '10408857', '10408937', '10408980', '10410073', '10412114', '10412388', '10412430', '10413482',\r\n        '10413849', '10416046', '10416635', '10416640', '10416659', '10418253', '10418465', '10418564', '10419587',\r\n        '10421199', '10421953', '10421967', '10421986', '10422066', '10422071', '10424169', '10429529', '10432169',\r\n        '16804078', '19177862', '19247493', '19247515', '19247539', '19247558', '20039394', '20078050', '20078333',\r\n        '20113633', '20122996', '20126584', '20150946', '20151012', '20159862', '20165801', '20173735', '20174594',\r\n        '20182283', '20185682', '20186101', '20200687', '20209268', '20209409', '20209452', '20213487', '20217305',\r\n        '20227489', '20231617', '20232117', '20232829', '20234116', '20234164', '20234545', '20236083', '20236120',\r\n        '20236318', '20236356', '20236361', '20239982', '20243837', '20253713', '20258697', '20259140', '20259215',\r\n        '20259220', '20259362', '20264735', '20265792', '20267220', '20267456', '20282782', '20283121', '20285554',\r\n        '20285605', '20285634', '20285808', '20285813', '20285827', '20285912', '20285926', '20286761', '20286780',\r\n        '20291767', '20291772', '20291786', '20291791', '20292291', '20294983', '20295652', '20295874', '20300352',\r\n        '20300371', '20300385', '20303157', '20303204', '20304166', '20305321', '20305415', '20306033', '20308211',\r\n        '20309036', '20309767', '20309965', '20310407', '20310412', '20310624', '20311077', '20311505', '20311666',\r\n        '20312816', '20319200', '20319257', '20319262', '20319295', '20319506', '20320114', '20320312', '20320543',\r\n        '20320699', '20320703', '20325550', '20325606', '20326494', '20326559', '20327262', '20327945', '20329039',\r\n        '20329317', '20329440', '20331339', '20333588', '20334248', '20334291', '20334578', '20334682', '20335021',\r\n        '20335182', '20335766', '20335851', '20335993', '20336515', '20337355', '20337379', '20337398', '20338109',\r\n        '20338166', '20338487', '20338736', '20338821', '20338840', '20338864', '20338878', '20338897', '20339241',\r\n        '20339608', '20339651', '20339788', '20339849', '20341102', '20343243', '20343304', '20346133', '20346294',\r\n        '20347590', '20348556', '20348660', '20349532', '20350525', '20350709', '20352906', '20353538', '20355274',\r\n        '20355293', '20355306', '20355311', '20355325', '20355330', '20355349', '20355392', '20357876', '20357881',\r\n        '20359427', '20363113', '20363127', '20363274', '20363467', '20365602', '20365744', '20365956', '20366164',\r\n        '20366338', '20366343', '20366404', '20370533', '20374003', '20378015', '20378082', '20378440', '20378459',\r\n        '20378464', '20378510', '20380344', '20384417', '20384436', '20384592', '20384865', '20385087', '20387185',\r\n        '20387604', '20387982', '20388043', '20388081', '20388397', '20388887', '20389863', '20390871', '20392498',\r\n        '20392653', '20394124', '20394138', '20394483', '20394770', '20395289', '20395331', '20398103', '20398419',\r\n        '20398933', '20398952', '20398966', '20399008', '20399089', '20399206', '20399211', '20399824', '20399857',\r\n        '20400380', '20400554', '20400714', '20400771', '20401110', '20401214', '20401313', '20402176', '20402242',\r\n        '20402548', '20402614', '20402732', '20402789', '20403265', '20404000', '20405033', '20405448', '20406297',\r\n        '20406626', '20406645', '20406706', '20407070', '20407372', '20407485', '20408927', '20408932', '20412321',\r\n        '20412378', '20413306', '20413472', '20414155', '20415918', '20415956', '20416649', '20416654', '20417979',\r\n        '20418530', '20418554', '20418950', '20419558', '20419582', '20420118', '20423126', '20424183', '20427718',\r\n        '20429524', '20429538', '20432164', '25162500', '26472200', '29173496', '29177866', '29247478', '29247497',\r\n        '30065679', '30078337', '30103285', '30107660', '30113618', '30117188', '30119837', '30122199', '30122986',\r\n        '30123556', '30126055', '30140438', '30148463', '30151035', '30152596', '30155279', '30155665', '30155670',\r\n        '30159442', '30165805', '30165810', '30173216', '30176979', '30185728', '30185733', '30186025', '30186110',\r\n        '30193139', '30209404', '30209418', '30209461', '30217499', '30221830', '30223645', '30225814', '30231607',\r\n        '30231612', '30231730', '30232862', '30233611', '30234007', '30234173', '30236228', '30236346', '30236351',\r\n        '30239887', '30243511', '30243530', '30251087', '30251394', '30257598', '30258036', '30258041', '30258692',\r\n        '30259328', '30265796', '30270123', '30270142', '30272985', '30278204', '30281287', '30285049', '30285539',\r\n        '30285582', '30285638', '30285643', '30285817', '30285822', '30285841', '30285855', '30285879', '30285916',\r\n        '30285921', '30286770', '30287741', '30288444', '30288769', '30291776', '30291781', '30292021', '30295656',\r\n        '30295661', '30297448', '30297962', '30298301', '30298396', '30300361', '30300375', '30300399', '30300587',\r\n        '30301624', '30303171', '30303185', '30303190', '30303996', '30304156', '30304161', '30304175', '30307621',\r\n        '30307640', '30308164', '30308197', '30308201', '30308258', '30308263', '30309757', '30309781', '30310355',\r\n        '30310402', '30310416', '30311086', '30311091', '30311171', '30313090', '30313146', '30315193', '30317168',\r\n        '30318040', '30319191', '30319313', '30320217', '30320316', '30320321', '30320533', '30320547', '30325050',\r\n        '30326511', '30326766', '30326771', '30327167', '30327285', '30327308', '30329294', '30330419', '30330853',\r\n        '30331353', '30331433', '30332526', '30333682', '30334243', '30334295', '30334549', '30334709', '30335025',\r\n        '30335662', '30335676', '30335704', '30335723', '30335997', '30337312', '30337393', '30337406', '30337411',\r\n        '30337717', '30338439', '30338806', '30338811', '30338830', '30338854', '30338868', '30338887', '30339660',\r\n        '30339698', '30339778', '30339783', '30343940', '30345661', '30345722', '30345864', '30345897', '30346571',\r\n        '30350695', '30350723', '30352915', '30355320', '30355344', '30355363', '30355382', '30355570', '30359101',\r\n        '30361019', '30363023', '30364348', '30365965', '30366347', '30368068', '30370542', '30375158', '30377633',\r\n        '30378086', '30378454', '30381442', '30382154', '30384676', '30385077', '30385143', '30387123', '30387161',\r\n        '30387217', '30387608', '30387972', '30387986', '30388047', '30388090', '30388108', '30388434', '30388740',\r\n        '30389867', '30390663', '30391988', '30393464', '30394128', '30394661', '30394859', '30395298', '30395335',\r\n        '30395340', '30395627', '30395632', '30396325', '30398409', '30398904', '30398918', '30398961', '30399003',\r\n        '30399121', '30399376', '30399814', '30399833', '30399847', '30399871', '30400775', '30400884', '30401119',\r\n        '30401138', '30401204', '30402034', '30402109', '30402487', '30402519', '30402538', '30405462', '30406683',\r\n        '30407418', '30407908', '30408936', '30409771', '30409827', '30409846', '30410312', '30411279', '30412330',\r\n        '30413476', '30415913', '30416639', '30416644', '30416658', '30418247', '30418271', '30418308', '30418474',\r\n        '30418596', '30418959', '30419572', '30419893', '30422070', '30422193', '30422428', '30423116', '30424168',\r\n        '30429514', '36418000', '37067100', '39151700', '40065160', '40078332', '40113180', '40126069', '40128855',\r\n        '40150554', '40152586', '40154401', '40155165', '40174767', '40185718', '40186058', '40186124', '40186548',\r\n        '40186609', '40186628', '40207659', '40207683', '40213759', '40214202', '40223329', '40231616', '40232395',\r\n        '40232687', '40233149', '40233333', '40233390', '40233781', '40234078', '40234380', '40236044', '40236096',\r\n        '40236119', '40236355', '40236360', '40243501', '40243515', '40253712', '40255462', '40256621', '40257593',\r\n        '40258154', '40258286', '40258314', '40258333', '40258696', '40259224', '40259342', '40259484', '40264739',\r\n        '40267653', '40277647', '40277652', '40278232', '40282743', '40282781', '40285138', '40285483', '40285633',\r\n        '40285647', '40285807', '40285812', '40285845', '40285911', '40285930', '40286779', '40286784', '40288392',\r\n        '40289947', '40291766', '40291771', '40291790', '40292290', '40294982', '40295873', '40298305', '40300011',\r\n        '40301906', '40302086', '40303180', '40303199', '40304151', '40309771', '40309785', '40309808', '40310958',\r\n        '40311076', '40311284', '40311670', '40311689', '40312815', '40315197', '40315625', '40317177', '40319162',\r\n        '40319505', '40320702', '40322961', '40323772', '40323989', '40326775', '40327275', '40327303', '40327949',\r\n        '40329123', '40329439', '40330107', '40333587', '40334247', '40334681', '40334704', '40335440', '40335666',\r\n        '40335708', '40335713', '40335992', '40336524', '40337302', '40337359', '40337378', '40337383', '40337397',\r\n        '40337793', '40338231', '40338839', '40338858', '40338877', '40338896', '40339358', '40339730', '40340093',\r\n        '40341808', '40342134', '40343242', '40343789', '40345726', '40346132', '40347570', '40347589', '40347594',\r\n        '40348536', '40349531', '40350685', '40350690', '40352590', '40355230', '40355273', '40355287', '40355305',\r\n        '40355334', '40355348', '40355353', '40355367', '40355372', '40355391', '40363471', '40365583', '40366002',\r\n        '40366163', '40366337', '40366342', '40370400', '40371254', '40373998', '40377642', '40377699', '40378401',\r\n        '40378482', '40378533', '40380338', '40384416', '40384628', '40384690', '40384732', '40384751', '40385091',\r\n        '40385411', '40385562', '40387165', '40387170', '40387194', '40387387', '40387976', '40388018', '40388042',\r\n        '40388424', '40388438', '40388457', '40389857', '40390672', '40391902', '40392058', '40392497', '40392925',\r\n        '40393029', '40394118', '40394137', '40394854', '40394887', '40394929', '40395288', '40395306', '40395617',\r\n        '40398927', '40398946', '40399088', '40399210', '40399818', '40399842', '40399880', '40400807', '40400954',\r\n        '40400992', '40401034', '40401133', '40401152', '40401661', '40402038', '40402547', '40402670', '40402750',\r\n        '40402953', '40403047', '40403113', '40406767', '40407069', '40407446', '40407470', '40407559', '40408926',\r\n        '40408931', '40409186', '40411293', '40414183', '40415917', '40415955', '40416648', '40416653', '40418261',\r\n        '40418529', '40418567', '40419576', '40422036', '40422220', '40424182', '40434256', '46804005', '49173495',\r\n        '49177709', '50038213', '50064589', '50086647', '50097995', '50099999', '50103005', '50104260', '50107659',\r\n        '50111114', '50122198', '50132526', '50132569', '50138444', '50149720', '50150563', '50152595', '50155278',\r\n        '50167573', '50173734', '50174781', '50176978', '50185826', '50186109', '50186543', '50187566', '50193138',\r\n        '50207649', '50216371', '50216837', '50221259', '50231277', '50232168', '50234172', '50234209', '50236048',\r\n        '50236345', '50236350', '50237651', '50239645', '50248287', '50251091', '50251393', '50253655', '50253716',\r\n        '50253815', '50254853', '50258040', '50258295', '50258304', '50258691', '50259191', '50259214', '50259247',\r\n        '50259332', '50259346', '50259365', '50264734', '50264753', '50268874', '50268906', '50277519', '50277656',\r\n        '50278934', '50280480', '50285519', '50285581', '50285637', '50285642', '50285779', '50285816', '50285821',\r\n        '50285878', '50285883', '50285920', '50286364', '50286769', '50288443', '50288773', '50291780', '50292303',\r\n        '50295655', '50295660', '50295877', '50295882', '50296396', '50296966', '50297961', '50300355', '50300360',\r\n        '50300586', '50301449', '50303151', '50303170', '50303189', '50303212', '50303231', '50303250', '50304155',\r\n        '50304160', '50308196', '50308219', '50308484', '50309775', '50310401', '50310627', '50310934', '50311151',\r\n        '50311288', '50312725', '50312810', '50315192', '50317902', '50319166', '50319374', '50320320', '50320966',\r\n        '50322381', '50325563', '50325643', '50326591', '50326765', '50327289', '50328986', '50329146', '50329919',\r\n        '50330866', '50334242', '50334478', '50334548', '50334685', '50335784', '50336514', '50337354', '50337405',\r\n        '50338438', '50338829', '50338867', '50338886', '50339659', '50339664', '50339697', '50339796', '50340097',\r\n        '50340177', '50341407', '50342204', '50343939', '50343944', '50345405', '50345896', '50345919', '50346075',\r\n        '50346103', '50346419', '50346424', '50346570', '50348116', '50348545', '50348569', '50350519', '50350703',\r\n        '50352622', '50355201', '50355244', '50355258', '50355263', '50355296', '50355319', '50355338', '50355343',\r\n        '50355362', '50355569', '50355574', '50358817', '50359096', '50363116', '50364352', '50365950', '50367713',\r\n        '50368053', '50370225', '50370409', '50370522', '50370536', '50377632', '50378014', '50378085', '50378090',\r\n        '50378410', '50378448', '50378542', '50380347', '50382153', '50382172', '50384604', '50384623', '50384699',\r\n        '50384864', '50385076', '50385095', '50385142', '50387122', '50387136', '50387198', '50387382', '50387607',\r\n        '50388386', '50388428', '50388433', '50388715', '50388720', '50388739', '50388881', '50390681', '50391911',\r\n        '50393038', '50393991', '50394127', '50394679', '50398074', '50398427', '50398941', '50398979', '50398998',\r\n        '50399120', '50399827', '50400699', '50400703', '50400816', '50400864', '50400944', '50401142', '50401199',\r\n        '50402033', '50402660', '50403099', '50403216', '50403344', '50406696', '50406781', '50407083', '50407422',\r\n        '50407436', '50407479', '50408515', '50408855', '50408935', '50409398', '50411221', '50412843', '50413480',\r\n        '50414007', '50416638', '50416643', '50416657', '50418312', '50418473', '50418538', '50418595', '50419547',\r\n        '50419590', '50421649', '50421989', '50422427', '50424167', '50426755', '50431484', '56804613', '59173490',\r\n        '59247580', '60027285', '60065461', '60074007', '60078034', '60098975', '60101044', '60103222', '60117035',\r\n        '60132521', '60139693', '60150553', '60153453', '60165804', '60167493', '60167742', '60174766', '60175092',\r\n        '60177166', '60183676', '60186062', '60186627', '60191916', '60207644', '60209129', '60214282', '60223328',\r\n        '60228694', '60232399', '60232813', '60233290', '60234204', '60234223', '60234548', '60236043', '60236095',\r\n        '60236118', '60236156', '60236359', '60236364', '60237226', '60242529', '60249960', '60251547', '60253711',\r\n        '60258006', '60258285', '60258313', '60258327', '60259077', '60259096', '60259143', '60259223', '60259483',\r\n        '60267671', '60268675', '60278108', '60278943', '60283119', '60285590', '60285632', '60285646', '60285806',\r\n        '60285811', '60285825', '60285854', '60285929', '60286764', '60286778', '60286783', '60286995', '60288683',\r\n        '60289946', '60290983', '60291770', '60291789', '60291794', '60295626', '60297079', '60297404', '60298291',\r\n        '60298309', '60298314', '60300369', '60300374', '60300388', '60303155', '60303160', '60303179', '60303184',\r\n        '60303198', '60303221', '60303235', '60305526', '60305729', '60306031', '60308209', '60310617', '60310698',\r\n        '60310957', '60311155', '60311283', '60311339', '60312126', '60313084', '60314314', '60315196', '60316902',\r\n        '60319156', '60319161', '60319175', '60321611', '60325100', '60325591', '60325609', '60325628', '60326835',\r\n        '60327161', '60327279', '60327298', '60327302', '60327316', '60328764', '60329042', '60331356', '60331436',\r\n        '60331460', '60332068', '60333586', '60333591', '60334246', '60334294', '60334449', '60334703', '60335024',\r\n        '60335137', '60335670', '60335769', '60335774', '60335788', '60335991', '60336523', '60337320', '60337358',\r\n        '60337382', '60337396', '60337787', '60337792', '60338094', '60338107', '60338169', '60338174', '60338819',\r\n        '60338838', '60338857', '60338876', '60338895', '60339611', '60339649', '60342208', '60343279', '60345725',\r\n        '60345730', '60346131', '60346414', '60346428', '60346433', '60347569', '60347574', '60347593', '60348620',\r\n        '60350528', '60350745', '60355205', '60355234', '60355267', '60355309', '60355347', '60355352', '60355385',\r\n        '60355390', '60355578', '60359086', '60359091', '60359425', '60363111', '60363125', '60363465', '60363470',\r\n        '60365596', '60365761', '60366001', '60366341', '60371291', '60373935', '60373940', '60373997', '60374869',\r\n        '60378396', '60378457', '60378462', '60378476', '60378508', '60378513', '60379008', '60382176', '60384608',\r\n        '60384613', '60384745', '60385561', '60386626', '60387188', '60387386', '60387980', '60388041', '60388084',\r\n        '60388885', '60390671', '60390685', '60390713', '60390874', '60394768', '60395616', '60396319', '60398101',\r\n        '60398422', '60398950', '60398969', '60398974', '60399214', '60399817', '60399860', '60400222', '60400707',\r\n        '60400811', '60400910', '60400929', '60400934', '60401146', '60401151', '60401207', '60401556', '60401660',\r\n        '60402669', '60403051', '60403094', '60403131', '60403174', '60403268', '60405465', '60406653', '60406733',\r\n        '60407049', '60407214', '60407474', '60407898', '60408925', '60408949', '60408968', '60411193', '60411287',\r\n        '60411292', '60411763', '60412140', '60412300', '60412324', '60414078', '60414870', '60415921', '60416647',\r\n        '60418590', '60418953', '60418967', '60419537', '60419542', '60419556', '60419561', '60420036', '60422196',\r\n        '60424181', '60434255', '66804047', '69173499', '69178053', '69178939', '70070283', '70078335', '70098989',\r\n        '70109817', '70124262', '70124403', '70144849', '70151019', '70152047', '70152085', '70152467', '70153155',\r\n        '70153160', '70153457', '70153650', '70155673', '70156111', '70159483', '70165808', '70167440', '70167464',\r\n        '70173733', '70174761', '70185825', '70186113', '70186603', '70186655', '70186660', '70211358', '70220334',\r\n        '70232214', '70232695', '70233299', '70233355', '70234029', '70234147', '70236113', '70236349', '70236354',\r\n        '70239847', '70243528', '70243566', '70245377', '70247630', '70251085', '70251472', '70253621', '70253715',\r\n        '70259133', '70259213', '70259246', '70259345', '70265030', '70265860', '70267067', '70276651', '70277641',\r\n        '70277655', '70277660', '70278933', '70280479', '70285504', '70285518', '70285556', '70285580', '70285599',\r\n        '70285603', '70285641', '70285778', '70285815', '70285820', '70285858', '70285877', '70285882', '70285924',\r\n        '70285943', '70286768', '70286773', '70287230', '70288442', '70290666', '70292104', '70292298', '70292571',\r\n        '70294730', '70295659', '70296395', '70296404', '70296734', '70296833', '70298083', '70300359', '70300378',\r\n        '70300397', '70302080', '70303150', '70303254', '70304164', '70304178', '70308162', '70308195', '70308218',\r\n        '70308256', '70310400', '70310933', '70311150', '70311678', '70314304', '70314318', '70316355', '70317901',\r\n        '70319014', '70319132', '70319146', '70319189', '70319250', '70320116', '70320319', '70320550', '70321620',\r\n        '70325053', '70325576', '70325623', '70326420', '70326585', '70326887', '70327311', '70329032', '70329145',\r\n        '70329150', '70330851', '70334241', '70334477', '70334547', '70335721', '70335764', '70337310', '70337409',\r\n        '70338121', '70338178', '70338442', '70338456', '70338729', '70338809', '70338828', '70338866', '70338885',\r\n        '70339352', '70339644', '70339663', '70339696', '70339738', '70340001', '70340063', '70340096', '70340100',\r\n        '70341406', '70342203', '70343311', '70343938', '70343943', '70344216', '70345659', '70345895', '70346102',\r\n        '70346324', '70346418', '70346423', '70348115', '70348120', '70348568', '70350108', '70350721', '70352621',\r\n        '70355200', '70355238', '70355276', '70355304', '70355318', '70355356', '70355361', '70355375', '70355573',\r\n        '70359401', '70359420', '70363035', '70363304', '70363318', '70363441', '70364389', '70368071', '70372167',\r\n        '70374897', '70377631', '70378089', '70378414', '70381440', '70382152', '70382166', '70384429', '70384603',\r\n        '70384617', '70384863', '70385136', '70385141', '70387060', '70387140', '70387606', '70388045', '70389865',\r\n        '70392924', '70395300', '70395319', '70395343', '70395847', '70396328', '70398073', '70398916', '70399119',\r\n        '70400919', '70401136', '70401688', '70402517', '70402678', '70402683', '70403215', '70403258', '70405484',\r\n        '70407039', '70407058', '70407416', '70409180', '70410310', '70413484', '70415751', '70416637', '70416656',\r\n        '70417024', '70418250', '70418325', '70418962', '70419004', '70419037', '70424166', '70424171', '70426759',\r\n        '70435438', '76804023', '79177883', '80068010', '80103283', '80117039', '80147687', '80148465', '80150217',\r\n        '80151014', '80154550', '80167741', '80175091', '80177170', '80186061', '80186382', '80196593', '80197168',\r\n        '80207643', '80209406', '80209454', '80214281', '80221229', '80226528', '80227486', '80231624', '80234241',\r\n        '80234547', '80236155', '80236344', '80236358', '80236363', '80239979', '80241816', '80244141', '80253625',\r\n        '80255200', '80258312', '80258331', '80258675', '80259142', '80259222', '80259335', '80259364', '80259378',\r\n        '80259383', '80264756', '80271907', '80277004', '80278107', '80278112', '80278937', '80283118', '80285607',\r\n        '80285787', '80285792', '80285810', '80285853', '80285872', '80285909', '80285914', '80286782', '80287084',\r\n        '80288446', '80288719', '80288917', '80289078', '80289945', '80291161', '80291769', '80291774', '80291793',\r\n        '80292575', '80295885', '80297002', '80297078', '80298290', '80300354', '80300368', '80300373', '80300387',\r\n        '80303183', '80303258', '80304154', '80308213', '80309986', '80310367', '80310372', '80311159', '80311183',\r\n        '80313083', '80319155', '80320535', '80320663', '80320682', '80325104', '80326537', '80326778', '80327042',\r\n        '80327259', '80327264', '80329135', '80329159', '80329296', '80331341', '80331355', '80331435', '80331459',\r\n        '80333585', '80334127', '80334245', '80334293', '80334472', '80335773', '80335792', '80336517', '80336522',\r\n        '80337357', '80337381', '80337395', '80338168', '80338818', '80338837', '80338856', '80338875', '80339078',\r\n        '80339648', '80339653', '80339785', '80339851', '80341788', '80341793', '80342207', '80344051', '80344428',\r\n        '80345908', '80346413', '80346427', '80346432', '80347610', '80352606', '80355365', '80357878', '80358774',\r\n        '80359085', '80363110', '80365755', '80365958', '80366335', '80366340', '80370530', '80374137', '80374868',\r\n        '80377640', '80377937', '80378084', '80378423', '80378531', '80380341', '80384607', '80384612', '80384631',\r\n        '80384688', '80384749', '80385089', '80385145', '80385560', '80387385', '80387984', '80388040', '80388399',\r\n        '80388441', '80389191', '80389860', '80390868', '80391617', '80393027', '80395291', '80398063', '80398082',\r\n        '80398416', '80399091', '80399208', '80399213', '80399821', '80400382', '80400551', '80400570', '80400805',\r\n        '80400867', '80400952', '80401150', '80402748', '80404479', '80405469', '80405520', '80406765', '80407449',\r\n        '80407736', '80408934', '80408986', '80413474', '80416646', '80416651', '80418589', '80420993', '80422223',\r\n        '80424180', '80429516', '86933500', '89178943', '90036207', '90037990', '90049573', '90055093', '90078339',\r\n        '90096705', '90108360', '90110061', '90118849', '90124402', '90126585', '90132529', '90151037', '90151042',\r\n        '90152094', '90153456', '90153649', '90155158', '90155163', '90155276', '90155672', '90155870', '90165807',\r\n        '90166053', '90167439', '90177061', '90184052', '90186051', '90186094', '90186112', '90193570', '90206252',\r\n        '90207685', '90209420', '90209482', '90221912', '90228174', '90231609', '90232393', '90232699', '90232703',\r\n        '90233298', '90233613', '90234028', '90236070', '90236094', '90236230', '90236348', '90236353', '90237654',\r\n        '90243508', '90243513', '90250886', '90251089', '90251471', '90252611', '90258043', '90258156', '90258547',\r\n        '90258665', '90259189', '90259212', '90259330', '90259368', '90259373', '90265859', '90267655', '90267702',\r\n        '90270144', '90277659', '90277664', '90278932', '90285536', '90285598', '90285602', '90285616', '90285782',\r\n        '90285796', '90285819', '90285824', '90285881', '90285923', '90286913', '90286994', '90291778', '90291783',\r\n        '90292103', '90292301', '90295658', '90295663', '90295875', '90296399', '90298303', '90300358', '90300377',\r\n        '90300396', '90301621', '90302084', '90303154', '90303205', '90303210', '90303234', '90303248', '90308199',\r\n        '90310418', '90311154', '90311682', '90312813', '90312865', '90313148', '90314303', '90315307', '90315623',\r\n        '90319131', '90319145', '90319174', '90319188', '90325556', '90325575', '90325580', '90326848', '90326886',\r\n        '90327273', '90327287', '90327292', '90329130', '90329149', '90329154', '90330807', '90334042', '90334297',\r\n        '90334532', '90334966', '90335659', '90335720', '90335999', '90337314', '90337408', '90337795', '90338163',\r\n        '90338785', '90338808', '90338827', '90338865', '90338894', '90339657', '90339780', '90343942', '90344215',\r\n        '90345724', '90346101', '90346323', '90346422', '90350107', '90350414', '90350715', '90350763', '90352597',\r\n        '90355275', '90355299', '90355303', '90355322', '90355336', '90355341', '90355355', '90355360', '90355379',\r\n        '90355384', '90355567', '90358783', '90358815', '90359419', '90359985', '90361021', '90363379', '90363459',\r\n        '90363464', '90364388', '90365528', '90365585', '90365608', '90365745', '90365948', '90365953', '90370520',\r\n        '90370539', '90372166', '90372637', '90372656', '90374146', '90375155', '90377908', '90378088', '90378535',\r\n        '90381769', '90382113', '90384414', '90384428', '90384621', '90384701', '90384862', '90385135', '90387059',\r\n        '90387120', '90387163', '90387605', '90387974', '90388087', '90388389', '90394762', '90395337', '90398067',\r\n        '90398086', '90398369', '90398406', '90398425', '90398897', '90398939', '90399118', '90399123', '90399830',\r\n        '90400961', '90401036', '90401159', '90401296', '90401574', '90402738', '90406722', '90407062', '90407707',\r\n        '90408839', '90408924', '90408938', '90408957', '90408962', '90408995', '90412313', '90412389', '90413930',\r\n        '90414010', '90414166', '90414171', '90414190', '90415627', '90416641', '90416660', '90418150', '90418428',\r\n        '90418433', '90418536', '90418541', '90418560', '90418584', '90418956', '90419036', '90422190', '90424170',\r\n        '90435437', '90435442', '99173488', '99173493', '99177882', '99178867'\r\n    ];\r\n    var isOnProductList = false;\r\n    var totalCartAmount = 0;\r\n\r\n    sQuery(JSON.parse(spApi.storageData('ins-cart-product-list') || '{}').productList || '[]').each(function () {\r\n        isOnProductList = sQuery.inArray((this.id || ''), productsListId) > -1;\r\n        \r\n        if (isOnProductList === true) {\r\n            totalPrice = (this.quantity || 0) * (this.price || 0);\r\n\r\n            totalCartAmount += parseFloat(totalPrice);\r\n        }\r\n    });\r\n\r\n    spApi.storageData('ins-array-product-total-cart', totalCartAmount);\r\n\r\n    true;\r\n}",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "303": {
                    "id": "303",
                    "name": "Arama Sonu\u00e7 Sayfas\u0131nda 0 Sonu\u00e7",
                    "test": "sQuery('.divMVSearchResultText .result-count').text() === \"0\"",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "35": {
                    "id": "35",
                    "name": "web-push-conversion-success-rule-1528274688.8479",
                    "test": "spApi.isOnAfterPaymentPage() && (spApi.getCartCount() < 1);",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "75": {
                    "id": "75",
                    "name": "triggerRule-1529912015",
                    "test": "(spApi.isOnCartPage() === false  &&  eval(spApi.rules[\"26\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "26",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "87": {
                    "id": "87",
                    "name": "triggerRule-1529912015",
                    "test": "(spApi.isOnCartPage() === false  &&  eval(spApi.rules[\"26\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "26",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "113": {
                    "id": "113",
                    "name": "triggerRule-1531123815",
                    "test": "(spApi.getUrl().indexOf(\"stuva\") > -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "114": {
                    "id": "114",
                    "name": "segmentRule-1531301483",
                    "test": "(spApi.deviceDetect(\"PC\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "115": {
                    "id": "115",
                    "name": "triggerRule-1531406216",
                    "test": "((spApi.checkCondition(\"gepy#eqaga\") || spApi.isBounced()) === true  &&  spApi.getUrl() === \"https:\/\/www.ikea.com.tr\/evimiz-dunya\/oyun.html\")",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "134": {
                    "id": "134",
                    "name": "triggerRule-1533545567",
                    "test": "(spApi.getUrl().indexOf(\"m.ikea.com.tr\/siparis-adim\/siparis-sonucu.aspx\") > -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "138": {
                    "id": "138",
                    "name": "triggerRule-1533632281",
                    "test": "(eval(spApi.rules[\"139\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "139",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "141": {
                    "id": "141",
                    "name": "segmentRule-1533724721",
                    "test": "(spApi.checkAdAudience(\"l2p\", \"h\", 125) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "157": {
                    "id": "157",
                    "name": "segmentRule-1536328050",
                    "test": "(spApi.checkPredictiveData(\"ac5ef9816bb4140fde2a0916c4ce26e3\", \"no_logic\", \"e927dd68b6a25b29921183cec7ad1132\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "158": {
                    "id": "158",
                    "name": "triggerRule-1536574659",
                    "test": "(spApi.getUrl().indexOf(\"siparis-adim\/siparis-sonucu.aspx\") > -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "176": {
                    "id": "176",
                    "name": "triggerRule-1538738011",
                    "test": "(spApi.getUrl().indexOf(\"siparis-adim\") == -1  &&  spApi.getCartCount() > 0  &&  spApi.getUrl().indexOf(\"test.ikea\") == -1  &&  spApi.checkPageDateVisit(\"26\", 14, 5) === true  &&  spApi.checkPageVisit(\"4\", 1) === true  &&  eval(spApi.rules[\"285\"].test) === true  &&  eval(spApi.rules[\"341\"].test) === true) && (eval(spApi.rules[\"175\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "26,4,285,341,175",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "181": {
                    "id": "181",
                    "name": "triggerRule-1538738918",
                    "test": "(spApi.getUrl().indexOf(\"siparis-adim\") == -1  &&  spApi.getCartCount() > 0  &&  spApi.getUrl().indexOf(\"test.ikea\") == -1  &&  spApi.checkPageDateVisit(\"26\", 14, 5) === true  &&  spApi.checkPageVisit(\"4\", 1) === true  &&  eval(spApi.rules[\"286\"].test) === true) && (eval(spApi.rules[\"175\"].test) === true) && (eval(spApi.rules[\"180\"].test) === true) && (eval(spApi.rules[\"341\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "26,4,286,175,180,341",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "184": {
                    "id": "184",
                    "name": "triggerRule-1538751481",
                    "test": "(spApi.isOnProductPage())",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "185": {
                    "id": "185",
                    "name": "triggerRule-1538751734",
                    "test": "(spApi.isOnCartPage() === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "186": {
                    "id": "186",
                    "name": "triggerRule-1538752337",
                    "test": "(1==1 === true  &&  spApi.getUrl() === \"https:\/\/m.ikea.com.tr\/internet-magazasi\/\")",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "216": {
                    "id": "216",
                    "name": "triggerRule-1531123815",
                    "test": "(spApi.getUrl().indexOf(\"ektorp\") > -1  ||  spApi.getUrl() === \"\/arama\/?k=ektorp\") && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "217": {
                    "id": "217",
                    "name": "segmentRule-1531301483",
                    "test": "(spApi.deviceDetect(\"PC\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "218": {
                    "id": "218",
                    "name": "triggerRule-1531123815",
                    "test": "(spApi.getUrl().indexOf(\"kivik\") > -1  ||  spApi.getUrl() === \"\/arama\/?k=kivik\") && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "219": {
                    "id": "219",
                    "name": "segmentRule-1531301483",
                    "test": "(spApi.deviceDetect(\"PC\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "220": {
                    "id": "220",
                    "name": "triggerRule-1531123815",
                    "test": "(spApi.getUrl().indexOf(\"friheten\") > -1  ||  spApi.getUrl() === \"\/arama\/?k=friheten\") && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "221": {
                    "id": "221",
                    "name": "segmentRule-1531301483",
                    "test": "(spApi.deviceDetect(\"PC\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "222": {
                    "id": "222",
                    "name": "triggerRule-1531123815",
                    "test": "(spApi.getUrl().indexOf(\"soderhamn\") > -1  ||  spApi.getUrl() === \"\/arama\/?k=soderhamn\") && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "223": {
                    "id": "223",
                    "name": "segmentRule-1531301483",
                    "test": "(spApi.deviceDetect(\"PC\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "298": {
                    "id": "298",
                    "name": "triggerRule-1545809450",
                    "test": "(spApi.getUrl().indexOf(\"utm_source=criteo&utm_medium=retargeting&utm_campaign=cca\") > -1  ||  spApi.getUrl().indexOf(\"utm_source=Google&utm_medium=Display&utm_campaign=DynamicProspecting\") > -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "301": {
                    "id": "301",
                    "name": "triggerRule-1546381540",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "307": {
                    "id": "307",
                    "name": "triggerRule-1547226516",
                    "test": "(spApi.isOnMainPage() === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "313": {
                    "id": "313",
                    "name": "triggerRule-1548009719",
                    "test": "(eval(spApi.rules[\"312\"].test) === true) && (spApi.isOnCartPage() === false  &&  spApi.checkPageVisit(\"172\", 2) === true  &&  eval(spApi.rules[\"331\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "312,172,331",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "314": {
                    "id": "314",
                    "name": "triggerRule-1548011699",
                    "test": "(spApi.isOnCartPage() === false) && (eval(spApi.rules[\"315\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "315",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "318": {
                    "id": "318",
                    "name": "triggerRule-1548073398",
                    "test": "(1==1 === true) && (eval(spApi.rules[\"317\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "317",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "319": {
                    "id": "319",
                    "name": "triggerRule-1548078223",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "326": {
                    "id": "326",
                    "name": "triggerRule-1548229029",
                    "test": "(spApi.isOnProductPage() && spApi.getCurrentProduct().id !== '')",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "330": {
                    "id": "330",
                    "name": "triggerRule-1548320763",
                    "test": "(spApi.isOnProductPage() === true) && (eval(spApi.rules[\"329\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "329",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "343": {
                    "id": "343",
                    "name": "triggerRule-1548678115",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "347": {
                    "id": "347",
                    "name": "triggerRule-1548749189",
                    "test": "(spApi.isOnProductPage() && spApi.getCurrentProduct().id !== '')",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "350": {
                    "id": "350",
                    "name": "triggerRule-1548757588",
                    "test": "(1==1 === true) && (eval(spApi.rules[\"349\"].test) === true  &&  eval(spApi.rules[\"341\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "349,341",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "351": {
                    "id": "351",
                    "name": "triggerRule-1548794358",
                    "test": "(spApi.isOnCategoryPage() === true  &&  eval(spApi.rules[\"102\"].test) === true  &&  eval(spApi.rules[\"352\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "102,352",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "353": {
                    "id": "353",
                    "name": "triggerRule-1548824652",
                    "test": "(spApi.isOnCartPage() === true  &&  eval(spApi.rules[\"352\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "352",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "5": {
                    "id": "5",
                    "name": "triggerRule-1526646591",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "6": {
                    "id": "6",
                    "name": "triggerRule-1527019136",
                    "test": "(1==1 === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "14": {
                    "id": "14",
                    "name": "triggerRule-1527080790",
                    "test": "(1==1 === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "33": {
                    "id": "33",
                    "name": "triggerRule-1528233428",
                    "test": "(eval(spApi.rules[\"90\"].test) === true  &&  spApi.getUrl().indexOf(\"ailekart\") == -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "90",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "38": {
                    "id": "38",
                    "name": "triggerRule-1528233428",
                    "test": "(eval(spApi.rules[\"88\"].test) === true  &&  spApi.getUrl().indexOf(\"ailekart\") == -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "88",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "44": {
                    "id": "44",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"45\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "45",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "46": {
                    "id": "46",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"47\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "47",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "48": {
                    "id": "48",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"49\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "49",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "50": {
                    "id": "50",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"51\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "51",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "52": {
                    "id": "52",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"53\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "53",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "54": {
                    "id": "54",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"55\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "55",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "56": {
                    "id": "56",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"57\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "57",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "58": {
                    "id": "58",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"45\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "45",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "59": {
                    "id": "59",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"47\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "47",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "60": {
                    "id": "60",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"49\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "49",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "61": {
                    "id": "61",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"51\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "51",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "62": {
                    "id": "62",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"53\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "53",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "63": {
                    "id": "63",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"55\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "55",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "64": {
                    "id": "64",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"57\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "57",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "98": {
                    "id": "98",
                    "name": "triggerRule-1530691972",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "103": {
                    "id": "103",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  spApi.getUrl().indexOf(\"platsa\") > -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "104": {
                    "id": "104",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  spApi.getUrl().indexOf(\"platsa\") > -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "127": {
                    "id": "127",
                    "name": "triggerRule-1532605099",
                    "test": "(spApi.getUrl().indexOf(\"https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx\") > -1  &&  spApi.getUrl().indexOf(\"gclid\") > -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "135": {
                    "id": "135",
                    "name": "triggerRule-1533554390",
                    "test": "(1==1 === true  &&  eval(spApi.rules[\"136\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "136",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "137": {
                    "id": "137",
                    "name": "triggerRule-1533554390",
                    "test": "(1==1 === true  &&  eval(spApi.rules[\"26\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "26",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "142": {
                    "id": "142",
                    "name": "triggerRule-1533796655",
                    "test": "(spApi.getUrl().indexOf(\"eket\") > -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "143": {
                    "id": "143",
                    "name": "triggerRule-1533804810",
                    "test": "(spApi.getUrl().indexOf(\"algot\") > -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "144": {
                    "id": "144",
                    "name": "triggerRule-1533805520",
                    "test": "(spApi.getUrl().indexOf(\"elvarli\") > -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "152": {
                    "id": "152",
                    "name": "triggerRule-1535418064",
                    "test": "(eval(spApi.rules[\"151\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "151",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "154": {
                    "id": "154",
                    "name": "triggerRule-1536059661",
                    "test": "(1==1 === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "167": {
                    "id": "167",
                    "name": "triggerRule-1538326986",
                    "test": "(1==1 === true  &&  spApi.getCartCount() > 0)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "262": {
                    "id": "262",
                    "name": "triggerRule-1542194702",
                    "test": "(eval(spApi.rules[\"261\"].test) === true  &&  spApi.checkPageVisit(\"3\", 1) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "261,3",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "187": {
                    "id": "187",
                    "name": "triggerRule-1539083684",
                    "test": "(eval(spApi.rules[\"261\"].test) === true  &&  spApi.checkPageVisit(\"3\", 1) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "261,3",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "188": {
                    "id": "188",
                    "name": "triggerRule-1539088878",
                    "test": "(1==1 === true) && (eval(spApi.rules[\"289\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "289",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "205": {
                    "id": "205",
                    "name": "triggerRule-1539591126",
                    "test": "(spApi.isOnCartPage() === true  &&  spApi.getCartCount() == 0)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "246": {
                    "id": "246",
                    "name": "triggerRule-1529996399",
                    "test": "(spApi.isOnProductPage() === true  &&  eval(spApi.rules[\"283\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "283",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "288": {
                    "id": "288",
                    "name": "segmentRule-1543247607",
                    "test": "(spApi.checkBrowser(\"IE\") === false)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "248": {
                    "id": "248",
                    "name": "triggerRule-1529996347",
                    "test": "(spApi.isOnCategoryPage() === true  &&  eval(spApi.rules[\"102\"].test) === true  &&  eval(spApi.rules[\"155\"].test) === true  &&  eval(spApi.rules[\"156\"].test) === true) && (spApi.getUrl().indexOf(\"test.ikea\") == -1  &&  spApi.getUrl().indexOf(\"\/kampanyali-urunler\") == -1) && (eval(spApi.rules[\"283\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "102,155,156,283",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "287": {
                    "id": "287",
                    "name": "segmentRule-1543247567",
                    "test": "(spApi.checkBrowser(\"IE\") === false)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "251": {
                    "id": "251",
                    "name": "triggerRule-1541415205",
                    "test": "(1==1 === true  &&  eval(spApi.rules[\"145\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "145",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "253": {
                    "id": "253",
                    "name": "segmentRule-1541415485",
                    "test": "(spApi.checkCustomDataset(\"spUID\", \"ikeaPassivePushUsers\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "252": {
                    "id": "252",
                    "name": "triggerRule-1541415283",
                    "test": "(eval(spApi.rules[\"145\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "145",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "254": {
                    "id": "254",
                    "name": "segmentRule-1541415506",
                    "test": "(spApi.checkCustomDataset(\"spUID\", \"ikeaPassivePushUsers\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "271": {
                    "id": "271",
                    "name": "triggerRule-1542369695",
                    "test": "(eval(spApi.rules[\"270\"].test) === true  &&  eval(spApi.rules[\"89\"].test) === false)",
                    "targetingTemplate": "0",
                    "relationalRule": "270,89",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "276": {
                    "id": "276",
                    "name": "triggerRule-1527705130",
                    "test": "(eval(spApi.rules[\"23\"].test) === true  &&  eval(spApi.rules[\"295\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "23,295",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "291": {
                    "id": "291",
                    "name": "triggerRule-1543509127",
                    "test": "(spApi.isOnCartPage() === false  &&  spApi.getCartCount() < 1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "293": {
                    "id": "293",
                    "name": "triggerRule-1544617991",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "302": {
                    "id": "302",
                    "name": "triggerRule-1546381790",
                    "test": "(spApi.getUrl().indexOf(\"\/arama\/?k=\") > -1  &&  eval(spApi.rules[\"303\"].test) === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "303",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "304": {
                    "id": "304",
                    "name": "triggerRule-1528443293",
                    "test": "(spApi.isOnProductPage() === true  &&  spApi.getUrl().indexOf(\"\/lustigt\") > -1) && (spApi.getUrl().indexOf(\"test.ikea\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "332": {
                    "id": "332",
                    "name": "triggerRule-1548327846",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "333": {
                    "id": "333",
                    "name": "triggerRule-1548342916",
                    "test": "(spApi.isOnMainPage() === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "340": {
                    "id": "340",
                    "name": "triggerRule-1532606899",
                    "test": "(1==1 === true  &&  spApi.getUrl().indexOf(\"\/evimiz-dunya\/\") == -1  &&  spApi.getUrl().indexOf(\"\/siparis-adim\/\") == -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "258": {
                    "id": "258",
                    "name": "triggerRule-1542026074",
                    "test": "(spApi.getUrl().indexOf(\"www.ikea\") > -1)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "257": {
                    "id": "257",
                    "name": "segmentRule-1542026066",
                    "test": "(spApi.deviceDetect(\"Mobil\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "260": {
                    "id": "260",
                    "name": "triggerRule-1542038168",
                    "test": "(1==1 === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "259": {
                    "id": "259",
                    "name": "segmentRule-1542038162",
                    "test": "(spApi.deviceDetect(\"Mobil\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "1": {
                    "id": "1",
                    "name": "T\u00fcm Sayfalar",
                    "test": "1==1",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "2": {
                    "id": "2",
                    "name": "Ana Sayfa",
                    "test": "1==1 && spApi.hasParameter((partner_site.scheme + \":\/\/\" + partner_site.host + \"\/\"),true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "140": {
                    "id": "140",
                    "name": "IKEA Cocuk Sayfas\u0131",
                    "test": "spApi.hasParameter('ikea-cocuk.aspx')",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "34": {
                    "id": "34",
                    "name": "web-push-conversion-trigger-rule-1528274688.8231",
                    "test": "spApi.isOnCartPage() && (spApi.getCartCount() > 0);",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "76": {
                    "id": "76",
                    "name": "segmentRule-1529948107",
                    "test": "(spApi.checkLocation(\"TR\", \"all\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "215": {
                    "id": "215",
                    "name": "segmentRule-1539615444",
                    "test": "(spApi.checkUserIp(\"190a15c48535600474138d0d88eeda59\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                },
                "323": {
                    "id": "323",
                    "name": "segmentRule-1548171941",
                    "test": "(spApi.checkUserIp(\"190a15c48535600474138d0d88eeda59\") === true)",
                    "targetingTemplate": "0",
                    "relationalRule": "0",
                    "segmentId": "",
                    "docReadyOption": "0",
                    "isProcessed": "1",
                    "weatherActive": "0",
                    "isRelational": "0"
                }
            },
            notifies: {
                "29": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "30": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)"
                    },
                    "effectConfig": {
                        "open": {
                            "keyframe": {
                                "name": "newspaper",
                                "0%": {
                                    "opacity": "0",
                                    "transform": "scale(0) rotate(720deg)"
                                },
                                "100%": {
                                    "opacity": "1",
                                    "transform": "scale(1) rotate(0deg)"
                                }
                            },
                            "dialog": {
                                "name": "newspaper",
                                "duration": "0.5s",
                                "timingFunction": "cubic-bezier(0.7,0,0.3,1)",
                                "fillMode": "forwards"
                            }
                        },
                        "close": {
                            "keyframe": {
                                "name": "newspaper-close",
                                "0%": {
                                    "opacity": "1",
                                    "transform": "scale(1) rotate(0deg)"
                                },
                                "100%": {
                                    "opacity": "0",
                                    "transform": "scale(0) rotate(720deg)"
                                }
                            },
                            "dialog": {
                                "name": "newspaper-close",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        }
                    },
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "488",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/cerez-politikasi.aspx",
                        "selectedElement": "",
                        "frameless": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "left",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "31": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "32": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)"
                    },
                    "effectConfig": {
                        "open": {
                            "keyframe": {
                                "name": "newspaper",
                                "0%": {
                                    "opacity": "0",
                                    "transform": "scale(0) rotate(720deg)"
                                },
                                "100%": {
                                    "opacity": "1",
                                    "transform": "scale(1) rotate(0deg)"
                                }
                            },
                            "dialog": {
                                "name": "newspaper",
                                "duration": "0.5s",
                                "timingFunction": "cubic-bezier(0.7,0,0.3,1)",
                                "fillMode": "forwards"
                            }
                        },
                        "close": {
                            "keyframe": {
                                "name": "newspaper-close",
                                "0%": {
                                    "opacity": "1",
                                    "transform": "scale(1) rotate(0deg)"
                                },
                                "100%": {
                                    "opacity": "0",
                                    "transform": "scale(0) rotate(720deg)"
                                }
                            },
                            "dialog": {
                                "name": "newspaper-close",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        }
                    },
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "488",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/cerez-politikasi.aspx",
                        "selectedElement": "",
                        "frameless": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "left",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "57": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "58": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "530",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.7",
                        "overlayClose": "true",
                        "width": "650",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": "adaptiveImageUpload",
                        "autofitSizeReference": {
                            "max-width": "650",
                            "max-height": "530"
                        }
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "gridIsActive": "true",
                        "mode": "adaptive",
                        "xPositionClass": "adaptive-x-position-center",
                        "yPositionClass": "adaptive-y-position-middle",
                        "position": "fixed",
                        "left": "475",
                        "top": "41",
                        "type": "0",
                        "windowHeight": "612",
                        "windowWidth": "1600",
                        "windowHref": "https:\/\/www.ikea.com.tr\/arama\/?k=stuva",
                        "productAlias": "info"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "612"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "60": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "62": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "410",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.6",
                        "overlayClose": "true",
                        "width": "500",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "position": "fixed",
                        "left": "565",
                        "top": "65",
                        "type": "0",
                        "windowHeight": "660",
                        "windowWidth": "1600",
                        "windowHref": "https:\/\/www.ikea.com.tr\/",
                        "productAlias": "info",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "660"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[{\"type\":\"multiple_textbox\",\"id\":\"6173750944754\",\"uid\":\"question-6173750944754\",\"text\":\"Telephone\",\"page_id\":\"page-1454703393312\",\"required_question\":false,\"settings\":{},\"options\":[{\"id\":\"3844348745051\",\"type\":\"text\",\"text\":\"Telephone\",\"placeholder\":\"Telephone\",\"redirect_page\":\"\",\"label\":\"\",\"order\":\"1\",\"values\":[],\"validation\":{\"type\":\"7\",\"between\":\"\"},\"html\":\"Telephone\",\"oldId\":false}]}]",
                    "mode": "advanced",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "96": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": null,
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "97": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#ffffff",
                        "overlay-visibility": "true",
                        "overlay-color": "rgb(0,0,0)",
                        "overlay-opacity": "0.6",
                        "overlay-close": "true",
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)"
                    },
                    "effectConfig": {},
                    "highlightConfig": null,
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "402",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/",
                        "selectedElement": "",
                        "frameless": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "center",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "[{\"id\":\"1530628373021\",\"type\":\"feedback\",\"text\":\"\",\"page_id\":\"\",\"start_value\":1,\"end_value\":5,\"optionRange\":[1,2,3,4,5],\"left_label\":\"\",\"right_label\":\"\",\"send_via_answer\":false,\"rating_less\":\"1\",\"rating_more\":\"1\",\"rating_less_page\":\"\",\"rating_more_page\":\"\",\"required\":true,\"required_text\":\"\"},{\"id\":\"1530628275926\",\"type\":\"textarea\",\"uid\":\"ins-question-1530628275926\",\"text\":\"\",\"page_id\":\"\",\"required\":false,\"settings\":{},\"options\":[{\"id\":\"1530628299021\",\"type\":\"textarea\",\"text\":\"\",\"placeholder\":\"Tell us more..\",\"redirect_page\":\"\",\"label\":\"\",\"order\":\"1\",\"values\":[],\"html\":\"\",\"oldId\":false}]}]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "98": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "99": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "200",
                        "overlay": "none",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.6",
                        "overlayClose": "false",
                        "width": "538",
                        "shadow": "none",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "626",
                        "windowWidth": "1536",
                        "windowHref": "https:\/\/www.ikea.com.tr\/",
                        "productAlias": "info",
                        "gridIsActive": "true",
                        "mode": "advanced",
                        "right": "auto",
                        "bottom": "auto",
                        "marginTop": "0",
                        "marginLeft": "0"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1519",
                            "windowHeight": "626"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "advanced",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "115": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "116": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "340",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.7",
                        "overlayClose": "true",
                        "width": "718",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "position": "fixed",
                        "left": "50%",
                        "top": "50%",
                        "type": "0",
                        "windowHeight": "622",
                        "windowWidth": "1536",
                        "windowHref": "https:\/\/www.ikea.com.tr\/",
                        "productAlias": "info",
                        "gridIsActive": "true",
                        "mode": "advanced",
                        "right": "auto",
                        "bottom": "auto",
                        "marginTop": "-170px",
                        "marginLeft": "-359px"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1519",
                            "windowHeight": "622"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[{\"type\":\"multiple_choice\",\"id\":\"5086652178938\",\"uid\":\"question-5086652178938\",\"text\":\"\",\"page_id\":\"page-1536574707693\",\"required_question\":true,\"settings\":{\"element\":{\"background-color\":\"rgba(0, 0, 0, 0)\",\"width\":\"630.9895629882812px\",\"height\":\"167.9296875px\",\"box-shadow\":\"none\",\"border\":\"0px none rgb(0, 0, 0)\",\"opacity\":\"1\"},\"wrap\":{\"left\":\"9px\",\"top\":\"10px\"},\"children\":[{\"id\":\"question-text-5086652178938\",\"left\":\"5px\",\"top\":\"5px\",\"width\":\"465px\",\"isEditable\":false},{\"id\":\"option-input-row-8314275571648\",\"left\":\"70px\",\"top\":\"84.3229px\",\"width\":\"28.997394561767578px\",\"isEditable\":true},{\"id\":\"option-input-row-6374427115985\",\"left\":\"177px\",\"top\":\"84.6458px\",\"width\":\"40px\",\"isEditable\":true},{\"id\":\"option-input-row-3146552577810\",\"left\":\"298px\",\"top\":\"84.9687px\",\"width\":\"29.98697853088379px\",\"isEditable\":true},{\"id\":\"option-input-row-5586754102713\",\"left\":\"423px\",\"top\":\"83.2917px\",\"width\":\"32.994789123535156px\",\"isEditable\":true},{\"id\":\"option-input-row-4762515718351\",\"left\":\"548.984px\",\"top\":\"82.6042px\",\"width\":\"24.973957061767578px\",\"isEditable\":true}]},\"options\":[{\"id\":\"6513356858930\",\"type\":\"radio\",\"text\":\"1\",\"placeholder\":\"\",\"redirect_page\":\"0\",\"label\":\"\",\"otherOption\":\"false\",\"order\":\"1\",\"values\":[],\"validation\":{},\"html\":\"<span style=\\\"color:#FFFFFF;\\\">1<\\\/span>\",\"oldId\":\"8314275571648\",\"redirect_page_index\":0},{\"id\":\"8538195536360\",\"type\":\"radio\",\"text\":\"2\",\"placeholder\":\"\",\"redirect_page\":\"0\",\"label\":\"\",\"otherOption\":\"false\",\"order\":\"2\",\"values\":[],\"validation\":{},\"html\":\"<span style=\\\"color:#FFFFFF;\\\">2<\\\/span>\",\"oldId\":\"6374427115985\",\"redirect_page_index\":0},{\"id\":\"5938865651330\",\"type\":\"radio\",\"text\":\"3\",\"placeholder\":\"\",\"redirect_page\":\"0\",\"label\":\"\",\"otherOption\":\"false\",\"order\":\"3\",\"values\":[],\"validation\":{},\"html\":\"<span style=\\\"color:#FFFFFF;\\\">3<\\\/span>\",\"oldId\":\"3146552577810\",\"redirect_page_index\":0},{\"id\":\"1358986535613\",\"type\":\"radio\",\"text\":\"4\",\"placeholder\":\"\",\"redirect_page\":\"0\",\"label\":\"\",\"otherOption\":\"false\",\"order\":\"4\",\"values\":[],\"validation\":{},\"html\":\"<span style=\\\"color:#FFFFFF;\\\">4<\\\/span>\",\"oldId\":\"5586754102713\",\"redirect_page_index\":0},{\"id\":\"3531952583686\",\"type\":\"radio\",\"text\":\"5\",\"placeholder\":\"\",\"redirect_page\":\"0\",\"label\":\"\",\"otherOption\":\"false\",\"order\":\"5\",\"values\":[],\"validation\":{},\"html\":\"<span style=\\\"color:#FFFFFF;\\\">5<\\\/span>\",\"oldId\":\"4762515718351\",\"redirect_page_index\":0}]},{\"type\":\"text\",\"id\":\"7162555537611\",\"uid\":\"question-7162555537611\",\"text\":\"<div style=\\\"text-align:center\\\"><span style=\\\"color:#000000\\\">Yorumlar\\u0131n\\u0131z bizim i\\u00e7in \\u00f6nemli...<\\\/span><\\\/div>\",\"page_id\":\"page-1536574707693\",\"required_question\":false,\"settings\":{\"element\":{\"background-color\":\"rgb(255, 255, 255)\",\"width\":\"481.9624938964844px\",\"height\":\"93.2750015258789px\",\"box-shadow\":\"none\",\"border\":\"0px none rgb(0, 0, 0)\",\"opacity\":\"1\"},\"wrap\":{\"left\":\"8.01042px\",\"top\":\"205.833px\"},\"children\":[{\"id\":\"question-text-7162555537611\",\"left\":\"5px\",\"top\":\"22.987px\",\"width\":\"293.9750061035156px\",\"isEditable\":false},{\"id\":\"option-content-7496556913737\",\"left\":\"26.9844px\",\"top\":\"48.2995px\",\"width\":\"430px\",\"isEditable\":false}]},\"options\":[{\"id\":\"1470775672032\",\"type\":\"text\",\"text\":\"\",\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":null,\"values\":[],\"validation\":{},\"oldId\":\"7496556913737\"}]}]",
                    "mode": "advanced",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "127": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "128": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "overlay-visibility": "false",
                        "overlay-color": "rgb(0,0,0)",
                        "overlay-opacity": "0.6",
                        "overlay-close": "true",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "selectedElement": "",
                        "gridIsActive": "false",
                        "relativePositioning": "true",
                        "relativePosition": {
                            "element": "div#page > header > div:eq(1) > a:eq(1) > i",
                            "position": {
                                "x": "0",
                                "y": "0"
                            }
                        },
                        "relativeConfig": {
                            "x": "0",
                            "y": "0",
                            "left": "254",
                            "templateAlignment": "right"
                        },
                        "frameless": "true",
                        "gridConfig": {
                            "xDirection": "left",
                            "yDirection": "top",
                            "gridIsActive": "false"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "129": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "130": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "overlay-visibility": "false",
                        "overlay-color": "rgb(0,0,0)",
                        "overlay-opacity": "0.6",
                        "overlay-close": "true",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "selectedElement": "",
                        "gridIsActive": "false",
                        "relativePositioning": "true",
                        "relativePosition": {
                            "element": "div#page > header > div:eq(1) > a:eq(1) > i",
                            "position": {
                                "x": "0",
                                "y": "0"
                            }
                        },
                        "relativeConfig": {
                            "x": "0",
                            "y": "0",
                            "left": "254",
                            "templateAlignment": "right"
                        },
                        "frameless": "true",
                        "gridConfig": {
                            "xDirection": "left",
                            "yDirection": "top",
                            "gridIsActive": "false"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "131": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "div#page > section > div:eq(1)",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "132": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "1043.0499877929688",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/urun-katalogu\/banyolar\/lavabolar-ve-bataryalar\/70342613\/voxnan-yukseltme-rayli-el-dusu-kiti.aspx",
                        "selectedElement": "div#page > section > div:eq(1)",
                        "insertAction": "after",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": {
                        "pId": "10002017",
                        "pageUrl": "https:\/\/m.ikea.com.tr\/urun-katalogu\/banyolar\/lavabolar-ve-bataryalar\/70342613\/voxnan-yukseltme-rayli-el-dusu-kiti.aspx",
                        "feedType": "xml",
                        "feedSource": "similarViewed",
                        "feedSize": "10",
                        "feedLang": "tr_TR",
                        "recommendationStrategies": ["similarViewed", "similarBought"],
                        "productConsistency": "false",
                        "endpoints": {
                            "serviceUrl": "https:\/\/predictive.api.useinsider.com\/",
                            "userBased": "recommendation\/user\/v2\/{userId}?partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarViewed": "recommendation\/product?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarBought": "recommendation\/complementary?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewedOfCat": "most\/viewed\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostBoughtOfCat": "most\/bought\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewed": "most\/viewed\/partner\/?partnerid={partnerId}&with_item_details=1&size={size}"
                        },
                        "checkoutRecommendationCartValue": "0"
                    },
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "133": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "a#btnCompleteOrder",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "138": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "div#page > section > div:eq(1)",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "139": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "469.6499938964844",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/internet-magazasi\/",
                        "selectedElement": "div#page > section > div:eq(1)",
                        "insertAction": "after",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": {
                        "pId": "10002017",
                        "pageUrl": "",
                        "feedType": "xml",
                        "feedSource": "userBased",
                        "feedSize": "10",
                        "feedLang": "tr_TR",
                        "recommendationStrategies": ["userBased", "mostViewed"],
                        "productConsistency": "false",
                        "endpoints": {
                            "serviceUrl": "https:\/\/predictive.api.useinsider.com\/",
                            "userBased": "recommendation\/user\/v2\/{userId}?partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarViewed": "recommendation\/product?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarBought": "recommendation\/complementary?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewedOfCat": "most\/viewed\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostBoughtOfCat": "most\/bought\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewed": "most\/viewed\/partner\/?partnerid={partnerId}&with_item_details=1&size={size}"
                        },
                        "checkoutRecommendationCartValue": "0"
                    },
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "148": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "10",
                        "top": "651.453125",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/siparis-adim\/sepetim.aspx",
                        "selectedElement": "a#btnCompleteOrder",
                        "insertAction": "after",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": {
                        "pId": "10002017",
                        "pageUrl": "https:\/\/m.ikea.com.tr\/siparis-adim\/sepetim.aspx",
                        "feedType": "xml",
                        "feedSource": "similarBought",
                        "feedSize": "10",
                        "feedLang": "tr_TR",
                        "recommendationStrategies": ["similarViewed", "similarBought"],
                        "productConsistency": "false",
                        "endpoints": {
                            "serviceUrl": "https:\/\/predictive.api.useinsider.com\/",
                            "userBased": "recommendation\/user\/v2\/{userId}?partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarViewed": "recommendation\/product?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarBought": "recommendation\/complementary?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewedOfCat": "most\/viewed\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostBoughtOfCat": "most\/bought\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewed": "most\/viewed\/partner\/?partnerid={partnerId}&with_item_details=1&size={size}"
                        },
                        "checkoutRecommendationCartValue": "0"
                    },
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "161": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "162": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "530",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.7",
                        "overlayClose": "true",
                        "width": "650",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": "adaptiveImageUpload",
                        "autofitSizeReference": {
                            "max-width": "650",
                            "max-height": "530"
                        }
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "gridIsActive": "true",
                        "mode": "adaptive",
                        "xPositionClass": "adaptive-x-position-center",
                        "yPositionClass": "adaptive-y-position-middle",
                        "position": "fixed",
                        "left": "475",
                        "top": "36.5",
                        "type": "0",
                        "windowHeight": "603",
                        "windowWidth": "1600",
                        "windowHref": "https:\/\/www.ikea.com.tr\/arama\/?k=stuva",
                        "productAlias": "info"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "603"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "169": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "170": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "530",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.7",
                        "overlayClose": "true",
                        "width": "650",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": "adaptiveImageUpload",
                        "autofitSizeReference": {
                            "max-width": "650",
                            "max-height": "530"
                        }
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "gridIsActive": "true",
                        "mode": "adaptive",
                        "xPositionClass": "adaptive-x-position-center",
                        "yPositionClass": "adaptive-y-position-middle",
                        "position": "fixed",
                        "left": "475",
                        "top": "36.5",
                        "type": "0",
                        "windowHeight": "603",
                        "windowWidth": "1600",
                        "windowHref": "https:\/\/www.ikea.com.tr\/arama\/?k=stuva",
                        "productAlias": "info"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "603"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "171": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "172": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "530",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.7",
                        "overlayClose": "true",
                        "width": "650",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": "adaptiveImageUpload",
                        "autofitSizeReference": {
                            "max-width": "650",
                            "max-height": "530"
                        }
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "gridIsActive": "true",
                        "mode": "adaptive",
                        "xPositionClass": "adaptive-x-position-center",
                        "yPositionClass": "adaptive-y-position-middle",
                        "position": "fixed",
                        "left": "475",
                        "top": "36.5",
                        "type": "0",
                        "windowHeight": "603",
                        "windowWidth": "1600",
                        "windowHref": "https:\/\/www.ikea.com.tr\/arama\/?k=stuva",
                        "productAlias": "info"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "651"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "173": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "174": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "530",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.7",
                        "overlayClose": "true",
                        "width": "650",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": "adaptiveImageUpload",
                        "autofitSizeReference": {
                            "max-width": "650",
                            "max-height": "530"
                        }
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "gridIsActive": "true",
                        "mode": "adaptive",
                        "xPositionClass": "adaptive-x-position-center",
                        "yPositionClass": "adaptive-y-position-middle",
                        "position": "fixed",
                        "left": "475",
                        "top": "36.5",
                        "type": "0",
                        "windowHeight": "603",
                        "windowWidth": "1600",
                        "windowHref": "https:\/\/www.ikea.com.tr\/arama\/?k=stuva",
                        "productAlias": "info"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "603"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "268": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "270": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "500",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.6",
                        "overlayClose": "true",
                        "width": "500",
                        "shadow": "none",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": "adaptiveImageUpload",
                        "autofitSizeReference": {
                            "max-width": "500",
                            "max-height": "500"
                        }
                    },
                    "effectConfig": {
                        "open": {
                            "keyframe": {
                                "name": "annie",
                                "0%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                },
                                "100%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        },
                        "close": {
                            "keyframe": {
                                "name": "annie-close",
                                "0%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                },
                                "100%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie-close",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        }
                    },
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "gridIsActive": "true",
                        "mode": "adaptive",
                        "xPositionClass": "adaptive-x-position-center",
                        "yPositionClass": "adaptive-y-position-middle",
                        "position": "fixed",
                        "left": "550",
                        "top": "27",
                        "type": "0",
                        "windowHeight": "554",
                        "windowWidth": "1600",
                        "windowHref": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=http%3A%2F%2Faction-builder.proxyins.us%2Fget-content-from-url%3Furl%3Dhttp%253A%252F%252Faction-builder.proxyins.us%252Fget-content-from-url%253Furl%253Dhttp%25253A%25252F%25252Faction-builder.proxyins.us%25252Fget-content-from-url%25253Furl%25253Dhttps%2525253A%2525252F%2525252Fwww.ikea.com.tr%2525252F",
                        "productAlias": "info"
                    },
                    "noteSettings": {
                        "upgraded": true,
                        "assistColor": "#004cbc",
                        "showCoupon": true,
                        "showTimer": true,
                        "assistTexts": {
                            "title": "Kupon Asistan\u0131",
                            "desc": "S\u00fcre dolmadan sipari\u015finizi tamamlay\u0131n, \u00f6zel f\u0131rsat\u0131 ka\u00e7\u0131rmay\u0131n!",
                            "copy": "Kopyala",
                            "close": "Asistan\u0131 Sil"
                        },
                        "webPosition": "bottom-right",
                        "mobilePosition": "bottom",
                        "couponExpDate": 1551398400,
                        "couponExpireDate1": "0",
                        "couponExpireDate2": "45",
                        "couponTimerWarningTime": "15",
                        "couponTimerWarningText": "",
                        "couponTimerNotAppliedText": "",
                        "ntWarningBackground": "ffffff",
                        "ntWarningText": "000000",
                        "ntNotWarningBackground": "ffffff",
                        "ntNotWarningText": "000000",
                        "couponTimerWarningEffect": "-1",
                        "couponTimerRuleId": "0"
                    },
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "651"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "274": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(1) > div:eq(1)",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": null,
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "285": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "500",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.6",
                        "overlayClose": "true",
                        "width": "500",
                        "shadow": "none",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": "adaptiveImageUpload",
                        "autofitSizeReference": {
                            "max-width": "500",
                            "max-height": "500"
                        }
                    },
                    "effectConfig": {
                        "open": {
                            "keyframe": {
                                "name": "annie",
                                "0%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                },
                                "100%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        },
                        "close": {
                            "keyframe": {
                                "name": "annie-close",
                                "0%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                },
                                "100%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie-close",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        }
                    },
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "gridIsActive": "true",
                        "mode": "adaptive",
                        "xPositionClass": "adaptive-x-position-center",
                        "yPositionClass": "adaptive-y-position-middle",
                        "position": "fixed",
                        "left": "550",
                        "top": "51.5",
                        "type": "0",
                        "windowHeight": "603",
                        "windowWidth": "1600",
                        "windowHref": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=http%3A%2F%2Faction-builder.proxyins.us%2Fget-content-from-url%3Furl%3Dhttp%253A%252F%252Faction-builder.proxyins.us%252Fget-content-from-url%253Furl%253Dhttps%25253A%25252F%25252Fwww.ikea.com.tr%25252F",
                        "productAlias": "info"
                    },
                    "noteSettings": {
                        "upgraded": true,
                        "assistColor": "#004cbc",
                        "showCoupon": true,
                        "showTimer": true,
                        "assistTexts": {
                            "title": "Kupon Asistan\u0131",
                            "desc": "S\u00fcre dolmadan sipari\u015finizi tamamlay\u0131n, \u00f6zel f\u0131rsat\u0131 ka\u00e7\u0131rmay\u0131n!",
                            "copy": "Kopyala",
                            "close": "Asistan\u0131 Sil"
                        },
                        "webPosition": "bottom-right",
                        "mobilePosition": "bottom",
                        "couponExpDate": 1551398400,
                        "couponExpireDate1": "0",
                        "couponExpireDate2": "45",
                        "couponTimerWarningTime": "15",
                        "couponTimerWarningText": "",
                        "couponTimerNotAppliedText": "",
                        "ntWarningBackground": "ffffff",
                        "ntWarningText": "000000",
                        "ntNotWarningBackground": "ffffff",
                        "ntNotWarningText": "000000",
                        "couponTimerWarningEffect": "-1",
                        "couponTimerRuleId": "0"
                    },
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "602"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[]",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "287": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "288": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "#fff",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "0px",
                        "height": "360",
                        "overlay": "block",
                        "overlayColor": "#000000",
                        "overlayOpacity": "0.9",
                        "overlayClose": "true",
                        "width": "799",
                        "shadow": "rgba(0, 0, 0, 0.5) 0px 0px 3px 1px",
                        "borderStyle": "none",
                        "paginationType": "none",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "0",
                        "paginationPassiveColor": "0",
                        "slideEffect": "slide",
                        "specificMenu": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {
                        "closeOnClick": "true",
                        "closeOnEsc": "true",
                        "scroll": "false",
                        "scrollSize": "0",
                        "scrollSpeed": "500",
                        "customSelector": "false"
                    },
                    "locationConfig": {
                        "position": "fixed",
                        "left": "357",
                        "top": "175.5",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1600",
                        "windowHref": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=http%3A%2F%2Faction-builder.proxyins.us%2Fget-content-from-url%3Furl%3Dhttp%253A%252F%252Faction-builder.proxyins.us%252Fget-content-from-url%253Furl%253Dhttp%25253A%25252F%25252Faction-builder.proxyins.us%25252Fget-content-from-url%25253Furl%25253Dhttp%2525253A%2525252F%2525252Faction-builder.proxyins.us%2525252Fget-content-from-url%2525253Furl%2525253Dhttp%252525253A%252525252F%252525252Faction-builder.proxyins.us%252525252Fget-content-from-url%252525253Furl%252525253Dhttp%25252525253A%25252525252F%25252525252Faction-builder.proxyins.us%25252525252Fget-content-from-url%25252525253Furl%25252525253Dhttp%2525252525253A%2525252525252F%2525252525252Faction-builder.proxyins.us%2525252525252Fget-content-from-url%2525252525253Furl%2525252525253Dhttps%252525252525253A%252525252525252F%252525252525252Fwww.ikea.com.tr%252525252525252F",
                        "productAlias": "info",
                        "gridIsActive": "false",
                        "mode": "advanced",
                        "right": "auto",
                        "bottom": "auto",
                        "marginTop": "-150px",
                        "marginLeft": "-250px"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "1",
                        "position": {
                            "left": "0",
                            "right": "0",
                            "top": "0",
                            "bottom": "0",
                            "windowWidth": "1583",
                            "windowHeight": "651"
                        },
                        "showFirst": "false"
                    },
                    "formConfig": "[{\"type\":\"scale\",\"id\":\"5107226562046\",\"uid\":\"question-5107226562046\",\"text\":\"<div style=\\\"text-align: center;\\\"><span style=\\\"font-size:19px;\\\"><span style=\\\"font-family:verdana,geneva,sans-serif\\\"><strong>IKEA'y\\u0131 arkada\\u015flar\\u0131na veya yak\\u0131n \\u00e7evrene tavsiye eder misin?<\\\/strong><\\\/span><\\\/span><\\\/div>\",\"page_id\":\"page-1547226532834\",\"required_question\":true,\"settings\":{\"element\":{\"background-color\":\"rgb(239, 239, 239)\",\"width\":\"572px\",\"height\":\"202.796875px\",\"box-shadow\":\"none\",\"border\":\"0px none rgb(0, 0, 0)\",\"opacity\":\"1\"},\"wrap\":{\"left\":\"186px\",\"top\":\"77px\"},\"children\":[{\"id\":\"question-text-5107226562046\",\"left\":\"75px\",\"top\":\"6px\",\"width\":\"387px\",\"isEditable\":false},{\"id\":\"question-option-list-5107226562046\",\"left\":\"13px\",\"top\":\"115.375px\",\"width\":\"514px\",\"isEditable\":false}]},\"options\":[{\"id\":\"5930786481517\",\"type\":\"radio\",\"text\":0,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":0,\"values\":[],\"validation\":{}},{\"id\":\"1557319478068\",\"type\":\"radio\",\"text\":1,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":1,\"values\":[],\"validation\":{}},{\"id\":\"3185694715870\",\"type\":\"radio\",\"text\":2,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":2,\"values\":[],\"validation\":{}},{\"id\":\"0761875451938\",\"type\":\"radio\",\"text\":3,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":3,\"values\":[],\"validation\":{}},{\"id\":\"8155489773601\",\"type\":\"radio\",\"text\":4,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":4,\"values\":[],\"validation\":{}},{\"id\":\"8759038765141\",\"type\":\"radio\",\"text\":5,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":5,\"values\":[],\"validation\":{}},{\"id\":\"9068351787451\",\"type\":\"radio\",\"text\":6,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":6,\"values\":[],\"validation\":{}},{\"id\":\"1154895787306\",\"type\":\"radio\",\"text\":7,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":7,\"values\":[],\"validation\":{}},{\"id\":\"5983681774051\",\"type\":\"radio\",\"text\":8,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":8,\"values\":[],\"validation\":{}},{\"id\":\"4657839158107\",\"type\":\"radio\",\"text\":9,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":9,\"values\":[],\"validation\":{}},{\"id\":\"7874160985135\",\"type\":\"radio\",\"text\":10,\"placeholder\":\"\",\"redirect_page\":\"\",\"label\":\"\",\"otherOption\":false,\"order\":10,\"values\":[],\"validation\":{}}],\"labelLeft\":\"<strong><span style=\\\"font-family:verdana,geneva,sans-serif\\\"><span style=\\\"font-size:14px\\\">Tavsiye etmem<\\\/span><\\\/span><\\\/strong>\",\"labelRight\":\"<span style=\\\"font-family:verdana,geneva,sans-serif\\\"><span style=\\\"font-size:14px\\\"><strong>Kesinlikle tavsiye ederim<\\\/strong><\\\/span><\\\/span>\"}]",
                    "mode": "advanced",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "296": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "297": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "102.5",
                        "windowHeight": "895",
                        "windowWidth": "1920",
                        "windowHref": "https:\/\/www.ikea.com.tr\/",
                        "selectedElement": "",
                        "frameless": "true",
                        "showAlways": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "left",
                            "yDirection": "middle"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "298": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": null,
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "299": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {
                        "open": {
                            "keyframe": {
                                "name": "annie",
                                "0%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                },
                                "100%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        },
                        "close": {
                            "keyframe": {
                                "name": "annie-close",
                                "0%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                },
                                "100%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie-close",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        }
                    },
                    "highlightConfig": null,
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "164",
                        "top": "278",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/",
                        "selectedElement": "",
                        "frameless": "true",
                        "showAlways": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "right",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "302": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": null,
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "430",
                        "top": "661",
                        "windowHeight": "958",
                        "windowWidth": "1920",
                        "windowHref": "https:\/\/www.ikea.com.tr\/",
                        "selectedElement": "form#aspnetForm > section > div:eq(0) > div:eq(0) > div:eq(1) > div:eq(1)",
                        "insertAction": "after",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": {
                        "pId": "10002017",
                        "pageUrl": "",
                        "feedType": "xml",
                        "feedSource": "userBased",
                        "feedSize": "10",
                        "feedLang": "tr_TR",
                        "recommendationStrategies": ["userBased", "mostViewed"],
                        "productConsistency": "false",
                        "endpoints": {
                            "serviceUrl": "https:\/\/predictive.api.useinsider.com\/",
                            "userBased": "recommendation\/user\/v2\/{userId}?partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarViewed": "recommendation\/product?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarBought": "recommendation\/complementary?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewedOfCat": "most\/viewed\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostBoughtOfCat": "most\/bought\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewed": "most\/viewed\/partner\/?partnerid={partnerId}&with_item_details=1&size={size}"
                        },
                        "checkoutRecommendationCartValue": "0"
                    },
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "305": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "306": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "488",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/",
                        "selectedElement": "",
                        "frameless": "true",
                        "showAlways": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "center",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "309": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "div#page > section > div:eq(0) > div:eq(1)",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "310": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "429.453125",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/",
                        "selectedElement": "div#page > section > div:eq(0) > div:eq(1)",
                        "insertAction": "after",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": {
                        "pId": "10002017",
                        "pageUrl": "",
                        "feedType": "xml",
                        "feedSource": "userBased",
                        "feedSize": "10",
                        "feedLang": "tr_TR",
                        "recommendationStrategies": ["userBased", "mostViewed"],
                        "productConsistency": "false",
                        "endpoints": {
                            "serviceUrl": "https:\/\/predictive.api.useinsider.com\/",
                            "userBased": "recommendation\/user\/v2\/{userId}?partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarViewed": "recommendation\/product?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarBought": "recommendation\/complementary?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewedOfCat": "most\/viewed\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostBoughtOfCat": "most\/bought\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewed": "most\/viewed\/partner\/?partnerid={partnerId}&with_item_details=1&size={size}"
                        },
                        "checkoutRecommendationCartValue": "0"
                    },
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "317": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": null,
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "318": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": null,
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "488",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/",
                        "selectedElement": "",
                        "frameless": "true",
                        "showAlways": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "center",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "319": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "320": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {
                        "open": {
                            "keyframe": {
                                "name": "annie",
                                "0%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                },
                                "100%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        },
                        "close": {
                            "keyframe": {
                                "name": "annie-close",
                                "0%": {
                                    "opacity": "1",
                                    "transform": "translate3d(0, 0, 0)"
                                },
                                "100%": {
                                    "opacity": "0",
                                    "transform": "translate3d(0, 50px, 0)"
                                }
                            },
                            "dialog": {
                                "name": "annie-close",
                                "duration": "0.5s",
                                "fillMode": "forwards"
                            }
                        }
                    },
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "488",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/",
                        "selectedElement": "",
                        "frameless": "true",
                        "showAlways": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "center",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "331": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "body",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "332": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(207, 3, 2)",
                        "countdown-type": "timer",
                        "countdown-hours": "1",
                        "countdown-minutes": "30",
                        "countdown-date": "01\/01\/2018",
                        "countdown-hour": "12:00",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=http%3A%2F%2Faction-builder.proxyins.us%2Fget-content-from-url%3Furl%3Dhttp%253A%252F%252Faction-builder.proxyins.us%252Fget-content-from-url%253Furl%253Dhttp%25253A%25252F%25252Faction-builder.proxyins.us%25252Fget-content-from-url%25253Furl%25253Dhttps%2525253A%2525252F%2525252Fm.ikea.com.tr%2525252F",
                        "selectedElement": "body",
                        "insertAction": "insert-beginning",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": "",
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "335": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": null,
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "336": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgba(0, 0, 0, 0)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": null,
                    "locationConfig": {
                        "type": "0",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "0",
                        "top": "488",
                        "windowHeight": "568",
                        "windowWidth": "320",
                        "windowHref": "https:\/\/m.ikea.com.tr\/",
                        "selectedElement": "",
                        "frameless": "true",
                        "showAlways": "true",
                        "gridIsActive": "true",
                        "gridConfig": {
                            "gridIsActive": "true",
                            "mode": "adaptive",
                            "xDirection": "center",
                            "yDirection": "bottom"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "337": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": ""
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": null,
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "338": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "overlay-visibility": "false",
                        "overlay-color": "rgb(0,0,0)",
                        "overlay-opacity": "0.6",
                        "overlay-close": "true",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "5px"
                    },
                    "effectConfig": {},
                    "highlightConfig": null,
                    "locationConfig": {
                        "position": "fixed",
                        "left": "0",
                        "top": "0",
                        "type": "0",
                        "selectedElement": "",
                        "gridIsActive": "false",
                        "relativePositioning": "true",
                        "relativePosition": {
                            "element": "div#page > header > div:eq(1) > a:eq(1) > i",
                            "position": {
                                "x": "0",
                                "y": "0"
                            }
                        },
                        "relativeConfig": {
                            "x": "0",
                            "y": "0",
                            "left": "254",
                            "templateAlignment": "right"
                        },
                        "frameless": "true",
                        "gridConfig": {
                            "xDirection": "left",
                            "yDirection": "top",
                            "gridIsActive": "false"
                        }
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "339": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "div#ctl00_ContentPlaceHolder1_ctrlSearchProduct > div",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "341": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "397.5",
                        "top": "477",
                        "windowHeight": "903",
                        "windowWidth": "1875",
                        "windowHref": "https:\/\/www.ikea.com.tr\/urun-katalogu\/calisma-alanlari\/masalar\/calisma-masalari.aspx",
                        "selectedElement": "div#ctl00_ContentPlaceHolder1_ctrlSearchProduct > div",
                        "insertAction": "before",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": {
                        "pId": "10002017",
                        "pageUrl": "https:\/\/m.ikea.com.tr\/urun-katalogu\/banyolar.aspx",
                        "feedType": "xml",
                        "feedSource": "mostViewedOfCat",
                        "feedSize": "10",
                        "feedLang": "tr_TR",
                        "partnerIndustry": "1",
                        "recommendationStrategies": ["mostViewedOfCat", "mostBoughtOfCat"],
                        "productConsistency": "false",
                        "endpoints": {
                            "serviceUrl": "https:\/\/predictive.api.useinsider.com\/",
                            "userBased": "recommendation\/user\/v2\/{userId}?partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarViewed": "recommendation\/product?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarBought": "recommendation\/complementary?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewedOfCat": "most\/viewed\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostBoughtOfCat": "most\/bought\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewed": "most\/viewed\/partner\/?partnerid={partnerId}&with_item_details=1&size={size}"
                        },
                        "checkoutRecommendationCartValue": "0",
                        "generateMixedStrategy": "true"
                    },
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "342": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "backgroundColor": "transparent",
                        "borderColor": "rgb(51, 51, 51)",
                        "borderRadius": "0px",
                        "borderWidth": "1px",
                        "height": "0",
                        "overlay": "none",
                        "overlayColor": "rgb(0, 0, 0)",
                        "overlayOpacity": "0",
                        "width": "0",
                        "shadow": "none",
                        "paginationType": "bullet",
                        "paginationNextPrev": "true",
                        "paginationActiveColor": "",
                        "paginationPassiveColor": ""
                    },
                    "effectConfig": {},
                    "highlightConfig": {},
                    "locationConfig": {
                        "position": "relative",
                        "left": "0",
                        "top": "0",
                        "type": "2",
                        "windowHeight": "651",
                        "windowWidth": "1903",
                        "selectedElement": "form#aspnetForm > section > div:eq(2)",
                        "insertAction": "after",
                        "gridActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": false,
                    "formConfig": "",
                    "mode": "advanced",
                    "predictiveFeedSettings": null,
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                },
                "343": {
                    "notifCpnStatus": 0,
                    "cssConfig": {
                        "background-color": "rgb(255, 255, 255)",
                        "background-image": "none",
                        "border-width": "0px",
                        "border-style": "none",
                        "border-color": "rgb(68, 81, 89)",
                        "border-radius": "0px"
                    },
                    "effectConfig": {},
                    "highlightConfig": "",
                    "locationConfig": {
                        "type": "2",
                        "mode": "adaptive",
                        "position": "fixed",
                        "left": "397.5",
                        "top": "240",
                        "windowHeight": "903",
                        "windowWidth": "1875",
                        "windowHref": "https:\/\/www.ikea.com.tr\/siparis-adim\/sepetim.aspx",
                        "selectedElement": "form#aspnetForm > section > div:eq(2)",
                        "insertAction": "before",
                        "frameless": "true",
                        "gridIsActive": "false"
                    },
                    "noteSettings": false,
                    "triggerIsActive": "0",
                    "triggerSettings": {
                        "status": "0",
                        "effect": "none",
                        "positionDirection": "left",
                        "image": "none",
                        "fixed": "0",
                        "showFirst": "false"
                    },
                    "formConfig": "null",
                    "mode": "adaptive",
                    "predictiveFeedSettings": {
                        "pId": "10002017",
                        "pageUrl": "https:\/\/m.ikea.com.tr\/siparis-adim\/sepetim.aspx",
                        "feedType": "xml",
                        "feedSource": "similarViewed",
                        "feedSize": "10",
                        "feedLang": "tr_TR",
                        "partnerIndustry": "1",
                        "recommendationStrategies": ["similarViewed", "similarBought"],
                        "productConsistency": "false",
                        "endpoints": {
                            "serviceUrl": "https:\/\/predictive.api.useinsider.com\/",
                            "userBased": "recommendation\/user\/v2\/{userId}?partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarViewed": "recommendation\/product?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "similarBought": "recommendation\/complementary?itemid={itemId}&category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewedOfCat": "most\/viewed\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostBoughtOfCat": "most\/bought\/product?category={category}&subcategory={subcategory}&partnerid={partnerId}&with_item_details=1&size={size}",
                            "mostViewed": "most\/viewed\/partner\/?partnerid={partnerId}&with_item_details=1&size={size}"
                        },
                        "checkoutRecommendationCartValue": "0",
                        "generateMixedStrategy": "true"
                    },
                    "content": "",
                    "socialProofSettings": {},
                    "kkbSettings": [],
                    "waitForKKBData": false
                }
            },
            customizationCamps: [{
                "id": "c2",
                "campName": "|-x-|JTI4Tk8lMjklMjBPdmVyYWxsJTIwU2FsZXMlMjBEYXRh",
                "isActive": "1",
                "activeDateStart": "1526646540",
                "activeDateEnd": "1718713740",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [5]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "5",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c4",
                "campName": "|-x-|TW9iaWxlJTIwTWVudQ==",
                "isActive": "1",
                "activeDateStart": "1527019080",
                "activeDateEnd": "1683230400",
                "locationData": false,
                "showIn": {
                    "trigger": [6]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function(self) {\n    var campId = spApi.userSegments[6];\n    var hamburgerImage = 'https:\/\/image.useinsider.com\/ikea\/c4\/g3G9oLVDtE0WQ8qnnQ8N1530618075.png';\n    var menuItems = [{\n        name: '\u0130ND\u0130R\u0130M',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/kis-indirimi.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/GtjVb4KddUR9NbpQPvUb1545290127.png'\n    }, {\n        name: 'Oturma Odalar\u0131',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/oturma-odalari.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/uht15Y4rtmD3klgBZlW01529928234.png'\n    }, {\n        name: 'Yemek Odalar\u0131',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/yemek-odalari.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/gx8GhPVfIdBP5WsNtjCS1529928295.png'\n    }, {\n        name: 'Yatak Odalar\u0131',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/yatak-odalari.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/v5M1QUuvtB3y3rKYeipV1529928268.png'\n    }, {\n        name: 'IKEA \u00c7ocuk',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/ikea-cocuk.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/bkG4UWDoQdEaYPeTYkUW1529927936.png'\n    }, {\n        name: '\u00c7al\u0131\u015fma Alanlar\u0131',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/calisma-alanlari.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/U8KNOhjJmN20JfiTDG071529924865.png'\n    }, {\n        name: '\u0130\u015f Yeriniz \u0130\u00e7in',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/is-yeriniz-icin.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/Z1Gok90w11nwn9PePNLj1529927962.png'\n    }, {\n        name: 'Kitapl\u0131klar ve Raflar',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/kitapliklar-ve-raflar.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/pRKrlx9onZd26cKz5B5R1529928166.png'\n    }, {\n        name: 'TV-Dolap Sistemleri',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/MB9uz1gHEyNNHjCDxAoL1529928256.png'\n    }, {\n        name: 'Ev D\u00fczenleme',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/ev-duzenleme.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/F8jmgoFbc5F7mvi7QIO91529924884.png'\n    }, {\n        name: 'Ev Tekstili',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/ev-tekstili.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/NqFYSSB45VbTd3IuXhLA1529927908.png'\n    }, {\n        name: 'Ev Dekorasyonu',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/ev-dekorasyonu.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/yrg9p9P0YtPfNypPjpo41529924875.png'\n    }, {\n        name: 'Antreler',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/antreler.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/5np3lLRLUTpWIZH2KdUX1529924800.png',\n    }, {\n        name: 'Ardiye Alanlar\u0131',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/ardiye-alanlari.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/TAvaBwYzYKFWIlf738Rl1529924814.png'\n    }, {\n        name: 'Ayd\u0131nlatma',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/aydinlatma.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/U30k70lbYNIDleFiPqEW1529924834.png'\n    }, {\n        name: 'Yemek Pi\u015firme',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/yemek-pisirme.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/fBNOVHJQmKqTJdDRPXfU1529928308.png'\n    }, {\n        name: 'Sofralar',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/sofralar.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/kzUgoTBxR446H1xH1t3d1529928246.png'\n    }, {\n        name: 'Mutfaklar',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/mutfaklar.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/p65ddP68FUu8E2EnmnP21529928190.png'\n    }, {\n        name: 'Banyolar',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/banyolar.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/uxgau3iRtTw0FHTgHEPU1529924842.png'\n    }, {\n        name: 'Yaz \u00dcr\u00fcnleri',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/yaz-urunleri.aspx',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/5YxnrankEEQGRmLU0vUT1529928284.png'\n    }, {\n        name: 'T\u00fcm \u00dcr\u00fcnler',\n        url: 'https:\/\/m.ikea.com.tr\/urun-katalogu\/',\n        img: 'https:\/\/image.useinsider.com\/ikea\/c4\/N50PwddQppMlfohH1Adi1530618126.png'\n    }];\n    var menuSelector = '.ins-hamburger-wrapper';\n\n    self.construct = function () {\n        self.createHamburgerIcon();\n        self.createHamburgerItems();\n    };\n\n    self.createHamburgerIcon = function () {\n        sQuery('header nav.nav ul').append('<li><a class=\"ins-hamburger-trigger\" href=\"#\">' +\n            '<img src=\"' + hamburgerImage + '\"><\/a><\/li>');\n    };\n\n    self.createHamburgerItems = function() {\n        var html = '';\n\n        sQuery.each(menuItems, function (index, item) {\n            html += '<div class=\"ins-hamburger-item sp-custom-'+ campId +'-' + index + '\" data-url=\"' + item.url + '\">' +\n            \t'<img src=\"' + item.img + '\">' +\n                '<div>' + item.name + '<\/div>' +\n                '<\/div>';\n        });\n\n        sQuery('header nav.nav ul').after('<div class=\"ins-hamburger-wrapper closed\" style=\"display:none;\">' +\n            '<div class=\"ins-hamburger-content\">' +\n            html +\n            '<\/div>' +\n            '<\/div>');\n\n        self.setEvents();\n    };\n\n    self.setEvents = function () {\n    \tsQuery('.ins-hamburger-trigger').on('click.insHamburger', function () {\n    \t\tif (!sQuery(menuSelector).hasClass('closed')) {\n    \t\t\tsQuery(menuSelector).addClass('closed').hide();\n    \t\t} else {\n    \t\t\tsQuery(menuSelector).removeClass('closed').show();\n    \t\t}\n    \t});\n\n    \tsQuery('.ins-hamburger-item').on('click.insHamburgerItem', function () {\n    \t\tlocation.href = sQuery(this).data('url');\n    \t});\n    };\n\n    return self.construct();\n})({});",
                "customCss": ".ins-hamburger-wrapper {\r\n    background:white !important;\r\n}\r\n.ins-hamburger-content {\r\n    min-height: 330px;\r\n    background:white !important;\r\n}\r\n.ins-hamburger-content .ins-hamburger-item {\r\n    width: 50% !important;\r\n    height: 30px;\r\n    line-height: 25px;\r\n    background: white;\r\n    border-bottom: 2px solid #ebe6e6;\r\n    float: left;\r\n    border-right: 1px solid white;\r\n    text-align: center;\r\n    font-size: 9px;\r\n}\r\n\r\n.ins-hamburger-content .ins-hamburger-item div {\r\n    margin:auto;\r\n    line-height: 11px !important;\r\n    color: #7f7f7f !important;\r\n    line-height: 25px !important;\r\n    padding: 0px !important;\r\n    text-align: left;\r\n  \tmargin-right: -10px !important;\r\n  \tmargin-left: 50px !important;\r\n}\r\n\r\n.ins-hamburger-content div img {\r\n    position: relative;\r\n    height:29.5px;\r\n    border-bottom:2px solid #ebe6e6;\r\n    left: 10px;\r\n    float: left;\r\n}\r\n\r\n.ins-hamburger-trigger {\r\n    text-align:center;\r\n}\r\n\r\n.ins-hamburger-trigger img{\r\n    height: 24%;\r\n    width:25%;\r\n  \tmargin-right: -20px;\r\n}\r\n\r\na.ins-hamburger-trigger:hover {\r\n\tbackground: none !important;\r\n}\r\n\r\n.header .nav ul li {\r\n    width:22% !important;\r\n\tmargin-top:5px!important;\r\n}\r\n\r\n.header .nav ul li:nth-child(2) {\r\n    width:30% !important;\r\n}\r\n\r\n.header .nav ul li:nth-child(4) a:after {\r\n    content:\"\";\r\n    background: #004cbc;\r\n}\r\n.header .nav ul li:nth-child(3) a:after{\r\n    content: \"\";\r\n    width: 1px;\r\n    height: 30px;\r\n    background: #0162b1;\r\n    display: inline-block;\r\n    position: absolute;\r\n    right: -10px;\r\n    top: 50%;\r\n    margin-top: -15px;\r\n}\r\n\r\n@media only screen and (max-width: 375px) {\r\n    nav.nav li:last-child a{\r\n        padding:0 !important;\r\n        float: right;\r\n    }\r\n     nav.nav li:last-child {\r\n        width: 10% !important;\r\n        margin-left: 14px;\r\n     }\r\n  \r\n    nav.nav li:last-child img {\r\n        width: 45% !important;\r\n\t\tmargin-right: 0px;\r\n    \tmargin-left: 15px;      \t\r\n    }\r\n  \r\n  \t.header .nav ul li:nth-child(2) {\r\n        width:37% !important;\r\n    }\r\n  \t\r\n}\r\n\r\n",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "6",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c15",
                "campName": "|-x-|T3ZlcmFsbCUyMFNhbGVzJTIwRGF0YSUyME1vYmlsZQ==",
                "isActive": "1",
                "activeDateStart": "1527080760",
                "activeDateEnd": "1686143160",
                "locationData": false,
                "showIn": {
                    "trigger": [14]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "24",
                "cookieTime": "1",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "11",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c36",
                "campName": "|-x-|JUMzJTk2bmVyaWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVyJTIwJUM0JUIwbmRpcmltJTIwQmFkZ2U=",
                "isActive": "1",
                "activeDateStart": "1528234080",
                "activeDateEnd": "1654637280",
                "locationData": false,
                "showIn": {
                    "trigger": [33],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\r\n    'use strict';\r\n\r\n    var targetProducts = [];\r\n\r\n    self.init = function () {\r\n        self.findDiscountedAndWithoutBadgeProducts();\r\n        self.addDiscountBadge(targetProducts);\r\n        self.setLogs();\r\n    };\r\n\r\n    self.findDiscountedAndWithoutBadgeProducts = function () {\r\n        sQuery('#productGallery .owl-item').each(function (index, product) {\r\n            if (sQuery('.price.old', product).exists() &&\r\n                sQuery('.type span:not(.CampaingTxt)', product).length === 0) {\r\n                targetProducts.push(product);\r\n            }\r\n        });\r\n    };\r\n\r\n    self.addDiscountBadge = function (products) {\r\n        sQuery.each(products, function (index, product) {\r\n            var oldPrice = self.formPrice(sQuery('.price.old', product).text());\r\n            var newPrice = self.formPrice(sQuery('.price:not(.old)', product).text());\r\n            var percentage = self.calculateDiscountPercentage(oldPrice, newPrice);\r\n\r\n            if (percentage > 0 && newPrice > 0) {\r\n            sQuery(product).append('<div class=\"ins-badge-36\">' +\r\n                  '<div class=\"ins-subBadge-36\">' +\r\n                    '<span class=\"ins-percentage\">%' + percentage + '<\/span>' +\r\n                    '<span class=\"ins-discount\">indirim<\/span>' +\r\n                  '<\/div>' +\r\n                '<\/div>');\r\n            }\r\n        });\r\n    };\r\n\r\n    self.setLogs = function () {\r\n        sQuery.each(targetProducts, function (index, product) {\r\n            sQuery('.addToCart', product).addClass('sp-custom-36-1');\r\n            sQuery('.ProductWrapper > div:eq(2) a, .image a', product)\r\n                .addClass('sp-custom-36-2');\r\n        });\r\n    };\r\n\r\n    self.formPrice = function (price) {\r\n        return parseFloat(price.replace(\/[^0-9,]\/g, '').replace(',', '.') || 0);\r\n    };\r\n\r\n    self.calculateDiscountPercentage = function (oldPrice, newPrice) {\r\n        return 100 - (newPrice \/ oldPrice * 100).toFixed(0);\r\n    };\r\n\r\n    return self.init();\r\n})({});",
                "customCss": ".ins-badge-36 {\r\n    position: absolute;\r\n    display: block;\r\n    top: 0;\r\n    left: 0;\r\n    width: 25%;\r\n    background: red;\r\n    z-index: 99999;\r\n}\r\n\r\n.ins-subBadge-36 {\r\n    border: 1.3px dashed #fff;\r\n    display: block;\r\n    margin-top: 2.5px;\r\n    margin-bottom: 2px;\r\n    margin-left: 2.5px;\r\n    width: 87%;\r\n    background: red;\r\n}\r\n\r\n.ins-badge-36 span {\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    color: white;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    line-height: 1.4;\r\n    font-size: 14px;\r\n}\r\n\r\n.ins-badge-36 .ins-discount {\r\n    font-size: 10px !important;\r\n    margin-bottom: 2px;\r\n}\r\n\r\n.ins-badge-36 .ins-percentage {\r\n    margin-top: 2px;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "23",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c114",
                "campName": "|-x-|S29udHJvbCUyMEdydWJ1JTIwLSUyMCVDMyU5Nm5lcmlsZW4lMjAlQzMlOUNyJUMzJUJDbmxlciUyMCVDNCVCMG5kaXJpbSUyMEJhZGdl",
                "isActive": "1",
                "activeDateStart": "1528234080",
                "activeDateEnd": "1654637280",
                "locationData": false,
                "showIn": {
                    "trigger": [33],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\r\n    'use strict';\r\n\r\n    var targetProducts = [];\r\n\r\n    self.init = function () {\r\n        self.findDiscountedAndWithoutBadgeProducts();\r\n        self.setLogs();\r\n    };\r\n\r\n    self.findDiscountedAndWithoutBadgeProducts = function () {\r\n        sQuery('#productGallery .owl-item').each(function (index, product) {\r\n            if (sQuery('.price.old', product).exists() && sQuery('.type span:not(.CampaingTxt)', product).length === 0) {\r\n                targetProducts.push(product);\r\n            }\r\n        });\r\n    };\r\n\r\n    self.setLogs = function () {\r\n        sQuery.each(targetProducts, function (index, product) {\r\n            sQuery('.addToCart', product).addClass('sp-custom-114-1');\r\n            sQuery('.ProductWrapper > div:eq(2) a, .image a', product)\r\n                .addClass('sp-custom-114-2');\r\n        });\r\n    };\r\n\r\n    return self.init();\r\n})({});\r\n",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "23",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c40",
                "campName": "|-x-|JUMzJTk2bmVyaWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVyJTIwJUMzJTk2emVsJTIwJUM0JUIwbmRpcmltJTIwQmFkZ2U=",
                "isActive": "1",
                "activeDateStart": "1528357320",
                "activeDateEnd": "1685432520",
                "locationData": false,
                "showIn": {
                    "trigger": [38],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\r\n\r\n    var internetDiscountedProducts = sQuery('.owl-item .type .discount:not(.CampaingTxt)')\r\n        .parents('.owl-item');\r\n\r\n    self.init = function (products) {\r\n        self.addDiscountBadge(products);\r\n        self.setLogs(internetDiscountedProducts);\r\n    };\r\n\r\n    self.addDiscountBadge = function (products) {\r\n        if (!sQuery('.ins-badge-40', products).exists() &&\r\n            sQuery('.type .discount:not(.CampaingTxt)', products).exists()) {\r\n            sQuery.each(products, function(index, product) {\r\n                var oldPrice = self.formPrice(sQuery('.price.old', product).text());\r\n                var newPrice = self.formPrice(sQuery('.price.cf', product).text());\r\n              \tvar percentage = self.calculateDiscountPercentage(oldPrice, newPrice);\r\n\r\n\t\t\t\tif (percentage > 0 && newPrice > 0) {\r\n                sQuery(product).append(\r\n                '<div class=\"ins-badge-40\">' +\r\n                    '<span>\u0130nternete \u00d6zel<\/span>' +\r\n                    '<span class=\"ins-percentage-40\">%' + self.calculateDiscountPercentage(oldPrice, newPrice) + '<\/span>' +\r\n                    '<span class=\"ins-discount-40\">indirim<\/span>' +\r\n                '<\/div>');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    self.formPrice = function (price) {\r\n        return parseFloat(price.replace(\/[^0-9,]\/g, '').replace(',', '.') || 0);\r\n    };\r\n\r\n    self.calculateDiscountPercentage = function (oldPrice, newPrice) {\r\n        return 100 - (newPrice \/ oldPrice * 100).toFixed(0);\r\n    };\r\n\r\n    self.setLogs = function (products) {\r\n        sQuery('.addToCart', products).addClass('sp-custom-40-1');\r\n        sQuery('.image a, .ProductWrapper > div:eq(2) a', products).addClass('sp-custom-40-2');\r\n    };\r\n\r\n    return self.init(internetDiscountedProducts);\r\n})({});\r\n",
                "customCss": ".ins-badge-40 {\r\n    position: absolute;\r\n    display: block;\r\n    top: 0;\r\n    width: 26%;\r\n    background: #ffce05;\r\n    border: dotted 2px black;\r\n    z-index: 9999;\r\n}\r\n\r\n.ins-badge-40 span {\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    color: black;\r\n    font-size: 6px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    line-height: 1.3;\r\n}\r\n\r\n.ins-percentage-40 {\r\n    position: relative;\r\n    display: block;\r\n    font-size: 12px !important;\r\n}\r\n\r\n.ins-discount-40 {\r\n    font-size: 10px !important;\r\n}\r\n\r\n.type .discount{\r\n    opacity: 0;\r\n}\r\n\r\n.ins-badge-40 > span:nth-child(1) {\r\n    margin-top: 2px\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "28",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c123",
                "campName": "|-x-|S29udHJvbCUyMEdydWJ1JTIwLSUyMCVDMyU5Nm5lcmlsZW4lMjAlQzMlOUNyJUMzJUJDbmxlciUyMCVDMyU5NnplbCUyMCVDNCVCMG5kaXJpbSUyMEJhZGdl",
                "isActive": "1",
                "activeDateStart": "1528357320",
                "activeDateEnd": "1685432520",
                "locationData": false,
                "showIn": {
                    "trigger": [38],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "var internetDiscountedProducts = sQuery('.owl-item .type .discount:not(.CampaingTxt)')\r\n        .parents('.owl-item');\r\n\r\nsQuery('.addToCart', internetDiscountedProducts).addClass('sp-custom-123-1');\r\nsQuery('.image a, .ProductWrapper > div:eq(2) a', internetDiscountedProducts).addClass('sp-custom-123-2');",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "28",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c48",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwR1IlQzMlOTZOTElE",
                "isActive": "1",
                "activeDateStart": "1528443240",
                "activeDateEnd": "1690473600",
                "locationData": false,
                "showIn": {
                    "trigger": [44]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/rahatiniz-icin-tasarlanmis-kanepe-gronlid.aspx\" class=\"insIdeasButton sp-custom-48\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-48 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "34",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c50",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwRUtFREFMRU4=",
                "isActive": "1",
                "activeDateStart": "1528452720",
                "activeDateEnd": "1688724720",
                "locationData": false,
                "showIn": {
                    "trigger": [46],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/ekedalen-misafir-listenizle-birlikte-buyuyen-yemek-masasi.aspx\" class=\"insIdeasButton sp-custom-50\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-50 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "35",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c52",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwS0FMTEFY",
                "isActive": "1",
                "activeDateStart": "1528453020",
                "activeDateEnd": "1718187420",
                "locationData": false,
                "showIn": {
                    "trigger": [48],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/kallax-raf-unitesini-kisisellestirin.aspx\" class=\"insIdeasButton sp-custom-52\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-52 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "36",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c54",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwS1JVWA==",
                "isActive": "1",
                "activeDateStart": "1528453320",
                "activeDateEnd": "1752056520",
                "locationData": false,
                "showIn": {
                    "trigger": [50],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/cocuk-odasi-aydinlatmasinin-yeni-oyuncusu-krux.aspx\" class=\"insIdeasButton sp-custom-54\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-54 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "37",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c56",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwU0tBRElT",
                "isActive": "1",
                "activeDateStart": "1528453500",
                "activeDateEnd": "1749637500",
                "locationData": false,
                "showIn": {
                    "trigger": [52],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/skadis-cok-amacli-panodan-ilham-alin.aspx\" class=\"insIdeasButton sp-custom-56\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-56 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "38",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c58",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBNT1NTTEFOREE=",
                "isActive": "1",
                "activeDateStart": "1528453620",
                "activeDateEnd": "1781087220",
                "locationData": false,
                "showIn": {
                    "trigger": [54],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/mosslanda-cerceve-rafinin-5-farkli-kullanimi.aspx\" class=\"insIdeasButton sp-custom-58\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-58 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "39",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c60",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBWQVJEQUdFTg==",
                "isActive": "1",
                "activeDateStart": "1528453740",
                "activeDateEnd": "1717583340",
                "locationData": false,
                "showIn": {
                    "trigger": [56],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/vardagen-muffin-kalibinin-4-farkli-kullanimi.aspx\" class=\"insIdeasButton sp-custom-60\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-60 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "40",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c62",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwR1IlQzMlOTZOTElEJTIwRU5H",
                "isActive": "1",
                "activeDateStart": "1528457760",
                "activeDateEnd": "1623843360",
                "locationData": false,
                "showIn": {
                    "trigger": [58],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/gronlid-a-sofa-made-for-comfort.aspx\" class=\"insIdeasButton sp-custom-62\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>');",
                "customCss": "a.insIdeasButton.sp-custom-62 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "41",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c64",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwRUtFREFMRU4lMjBFTkc=",
                "isActive": "1",
                "activeDateStart": "1528461660",
                "activeDateEnd": "1623847260",
                "locationData": false,
                "showIn": {
                    "trigger": [59],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/ekedalen-dining-that-grows-with-your-guest-list.aspx\" class=\"insIdeasButton sp-custom-64\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-64 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "42",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c66",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwS0FMTEFYJTIwRU5H",
                "isActive": "1",
                "activeDateStart": "1528462500",
                "activeDateEnd": "1623848100",
                "locationData": false,
                "showIn": {
                    "trigger": [60],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/make-your-kallax-unit-truly-yours.aspx\" class=\"insIdeasButton sp-custom-66\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-66 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "43",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c68",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwS1JVWCUyMEVORw==",
                "isActive": "1",
                "activeDateStart": "1528462860",
                "activeDateEnd": "1623330060",
                "locationData": false,
                "showIn": {
                    "trigger": [61],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/new-in-childrens-lighting-the-playful-krux-lamp.aspx\" class=\"insIdeasButton sp-custom-68\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-68 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "44",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c70",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwU0tBRElTJTIwRU5H",
                "isActive": "1",
                "activeDateStart": "1528463040",
                "activeDateEnd": "1625144640",
                "locationData": false,
                "showIn": {
                    "trigger": [62],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/get-inspired-by-skadis-pegboards.aspx\" class=\"insIdeasButton sp-custom-70\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-70 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "45",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c72",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwTU9TU0xBTkRBJTIwRU5H",
                "isActive": "1",
                "activeDateStart": "1528463040",
                "activeDateEnd": "1623935040",
                "locationData": false,
                "showIn": {
                    "trigger": [63]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/5-unexpected-uses-for-mosslanda-picture-ledges.aspx\" class=\"insIdeasButton sp-custom-72\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-72 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "46",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c74",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwVkFSREFHRU4lMjBFTkc=",
                "isActive": "1",
                "activeDateStart": "1528463040",
                "activeDateEnd": "1625144640",
                "locationData": false,
                "showIn": {
                    "trigger": [64],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/4-new-ways-to-use-your-vardagen-muffin-tin.aspx\" class=\"insIdeasButton sp-custom-74\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-74 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "47",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c135",
                "campName": "|-x-|Tm9TbGlkZXIlMjAtJTIwTW9iaWxlJTIwSG9tZQ==",
                "isActive": "1",
                "activeDateStart": "1530624180",
                "activeDateEnd": "2050234260",
                "locationData": false,
                "showIn": {
                    "trigger": [98]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "css",
                    "settings": {
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        },
                        "display": {
                            "value": "none",
                            "defaultVal": "block"
                        }
                    },
                    "selectorString": "div#page > section > div:eq(0) > div:eq(0) > div",
                    "id": "sp-custom-135-1530694539062",
                    "parentNodeSelector": "div#page > section > div:eq(0) > div:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c132\/ghXyJk3GamSdovF8yrUe1530693181.jpg",
                    "insertOption": "elementAfter",
                    "selectorString": "div#page > section > div:eq(0) > div:eq(1)",
                    "id": "sp-custom-135-1530694584072",
                    "parentNodeSelector": "div#page > section > div:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "css",
                    "settings": {
                        "width": {
                            "value": "100%",
                            "defaultVal": "320px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "div#page > section > div:eq(0) > img",
                    "id": "sp-custom-135-1530694603337",
                    "parentNodeSelector": "div#page > section > div:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "css",
                    "settings": {
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        },
                        "display": {
                            "value": "none",
                            "defaultVal": "block"
                        }
                    },
                    "selectorString": "div#page > section > div:eq(0) > div:eq(1)",
                    "id": "sp-custom-135-1530694630275",
                    "parentNodeSelector": "div#page > section > div:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c132\/ghXyJk3GamSdovF8yrUe1530693181.jpg",
                    "insertOption": "elementBefore",
                    "selectorString": "div#page > section > div:eq(1) > ul > li:eq(0) > a",
                    "id": "sp-custom-135-1530694949866",
                    "parentNodeSelector": "div#page > section > div:eq(1) > ul > li:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "css",
                    "settings": {
                        "width": {
                            "value": "100%",
                            "defaultVal": "415px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "div#page > section > div:eq(1) > ul > li:eq(0) > img",
                    "id": "sp-custom-135-1530694964646",
                    "parentNodeSelector": "div#page > section > div:eq(1) > ul > li:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "remove",
                    "selectorString": "div#page > section > div:eq(0) > img",
                    "id": "sp-custom-135-1530694968185",
                    "parentNodeSelector": "div#page > section > div:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c135\/aDiQTsvSkH1QmlMnZibq1530695856.jpg",
                    "insertOption": "elementAfter",
                    "selectorString": "div#page > section > div:eq(1) > ul > li:eq(0) > img",
                    "id": "sp-custom-135-1530695858181",
                    "parentNodeSelector": "div#page > section > div:eq(1) > ul > li:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }, {
                    "type": "css",
                    "settings": {
                        "width": {
                            "value": "100%",
                            "defaultVal": "415px"
                        },
                        "margin-top": {
                            "value": "10px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "div#page > section > div:eq(1) > ul > li:eq(0) > img:eq(1)",
                    "id": "sp-custom-135-1530695883839",
                    "parentNodeSelector": "div#page > section > div:eq(1) > ul > li:eq(0)",
                    "editUrl": "https:\/\/m.ikea.com.tr\/"
                }],
                "customJs": "",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "80",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c141",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwUExBVFNB",
                "isActive": "1",
                "activeDateStart": "1531218960",
                "activeDateEnd": "1828954800",
                "locationData": false,
                "showIn": {
                    "trigger": [103],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/platsa-dolap-sistemleri-ile-kucuk-alanlar-icin-esnek-cozumler.aspx\" class=\"insIdeasButton sp-custom-52\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-52 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "85",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c143",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwUExBVFNBJTIwJTIwRU5H",
                "isActive": "1",
                "activeDateStart": "1531219680",
                "activeDateEnd": "2036140800",
                "locationData": false,
                "showIn": {
                    "trigger": [104],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/en\/ideas\/platsa-flexible-storage-that-works-in-small-spaces.aspx\" class=\"insIdeasButton sp-custom-66\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c62\/1sqli233b79czJ51Ny7X1528457929.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-66 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 42%;\r\n    margin-bottom: -38px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "86",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c165",
                "campName": "|-x-|SUtFQSUyMEt1cnVtc2FsJTIwQml6ZSUyMFVsYSVDNSU5RiVDNCVCMW4lMjAtJTIwQmFudA==",
                "isActive": "1",
                "activeDateStart": "1532604960",
                "activeDateEnd": "1661427300",
                "locationData": false,
                "showIn": {
                    "trigger": [127]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c161\/o0USfoPvVig28wB3c7OG1532605905.png",
                    "insertOption": "elementBefore",
                    "selectorString": "div#mainWrapper > div:eq(0)",
                    "id": "sp-custom-165-1532606833010",
                    "parentNodeSelector": "div#mainWrapper",
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx"
                }, {
                    "oldPosition": {
                        "top": "auto",
                        "left": "auto",
                        "width": "1060px",
                        "height": "190px",
                        "position": "static",
                        "z-index": "auto",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "-16px",
                        "left": "3px",
                        "width": "0px",
                        "height": "0px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx",
                    "type": "moveElement",
                    "selectorString": "div#mainWrapper > img",
                    "id": "sp-custom-165-1532606850499",
                    "parentNodeSelector": "div#mainWrapper"
                }, {
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c161\/o0USfoPvVig28wB3c7OG1532605905.png",
                    "insertOption": "elementAfter",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(0) > p",
                    "id": "sp-custom-165-1532606859693",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(0)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx"
                }, {
                    "oldPosition": {
                        "top": "auto",
                        "left": "auto",
                        "width": "1060px",
                        "height": "190px",
                        "position": "static",
                        "z-index": "auto",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "9px",
                        "left": "-1px",
                        "width": "1060px",
                        "height": "190px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx",
                    "type": "moveElement",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(0) > img",
                    "id": "sp-custom-165-1532606869059",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(0)"
                }, {
                    "type": "changedText",
                    "html": "Talep ve Yorumlar\u0131n\u0131z*",
                    "selectorString": "div#blockComments > table > tbody > tr:eq(0) > td:eq(0) > label",
                    "id": "sp-custom-165-1532607074166",
                    "parentNodeSelector": "div#blockComments > table > tbody > tr:eq(0) > td:eq(0)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        },
                        "visibility": {
                            "value": "hidden",
                            "defaultVal": "visible"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(0) > p",
                    "id": "sp-custom-165-1532608008028",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(0)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx"
                }, {
                    "oldPosition": {
                        "top": "9px",
                        "left": "-1px",
                        "width": "1060px",
                        "height": "190px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "-7px",
                        "left": "-1px",
                        "width": "1060px",
                        "height": "190px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx",
                    "type": "moveElement",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(0) > img",
                    "id": "sp-custom-165-1532608021004",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(0)"
                }, {
                    "oldPosition": {
                        "top": "-7px",
                        "left": "-1px",
                        "width": "1060px",
                        "height": "190px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "-7px",
                        "left": "0px",
                        "width": "1060px",
                        "height": "190px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "https:\/\/www.ikea.com.tr\/ikeakurumsal\/musteri-hizmetleri\/bize-ulasin.aspx",
                    "type": "moveElement",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(0) > img",
                    "id": "sp-custom-165-1532608038370",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(0)"
                }],
                "customJs": "",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "111",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c175",
                "campName": "|-x-|U2VwZXQlMjBCbyVDNSU5RmtlbiUyMFNlcGV0JTIwSWNvbnVuYSUyMFQlQzQlQjFrbGF5YW5sYXI=",
                "isActive": "1",
                "activeDateStart": "1533554340",
                "activeDateEnd": "1696504740",
                "locationData": false,
                "showIn": {
                    "trigger": [135]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.shop-basket a').addClass('sp-custom-175')",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "24",
                "cookieTime": "1",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "122",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c177",
                "campName": "|-x-|U2VwZXQlMjBEb2x1eWtlbiUyMFNlcGV0JTIwSWNvbnVuYSUyMFQlQzQlQjFrbGF5YW5sYXI=",
                "isActive": "1",
                "activeDateStart": "1533554460",
                "activeDateEnd": "1659784860",
                "locationData": false,
                "showIn": {
                    "trigger": [137],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.shop-basket a').addClass('sp-custom-177-1');\r\nsQuery('.btn.close').addClass('sp-custom-177-2');\r\nsQuery('.btn.mr0.fr').addClass('sp-custom-177-3');",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "24",
                "cookieTime": "1",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "123",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c179",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDUxNDg4NjIz",
                "isActive": "1",
                "activeDateStart": "1533796560",
                "activeDateEnd": "1662705420",
                "locationData": false,
                "showIn": {
                    "trigger": [142],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "insertedHTML",
                    "insertOption": "elementAfter",
                    "html": "<div>\n\t<img src=\"https:\/\/image.useinsider.com\/ikea\/c179\/yrFl6a2ixDWVcyMDz14s1533796992.png\" style=\"float:left; margin: 5px 10px 0px 0px; \">\n\t\n\t<p>Planlay\u0131c\u0131 kullanarak EKET Serisinin farkl\u0131 par\u00e7alar\u0131n\u0131n ihtiyac\u0131n\u0131za g\u00f6re birle\u015ftirin.<br\/>\n\t\t<a href=\"https:\/\/www.ikea.com.tr\/eket-planner\">Planlamaya ba\u015flamak i\u00e7in t\u0131klay\u0131n.<\/a>\n\t<\/p>\n\n\n<\/div>",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > ul",
                    "id": "sp-custom-179-1533799337808",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "20px",
                            "defaultVal": "0px"
                        },
                        "border-width": {
                            "value": "1px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        },
                        "border-style": {
                            "value": "dashed",
                            "defaultVal": "none"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-179-1533799355227",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-left": {
                            "value": "55px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(0, 102, 179)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p > a",
                    "id": "sp-custom-179-1533799438628",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-179-1533799490280",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > img",
                    "id": "sp-custom-179-1533799493044",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "insertedHTML",
                    "insertOption": "elementAfter",
                    "html": "<div>\n\t<img src=\"https:\/\/image.useinsider.com\/ikea\/c179\/yrFl6a2ixDWVcyMDz14s1533796992.png\" style=\"float:left; margin: 5px 10px 5px 5px; \">\n\t\n\t<p>Planlay\u0131c\u0131 kullanarak EKET Serisinin farkl\u0131 par\u00e7alar\u0131n\u0131n ihtiyac\u0131n\u0131za g\u00f6re birle\u015ftirin.<br\/>\n\t\t<a href=\"https:\/\/www.ikea.com.tr\/eket-planner\" style=\"color:#3278ad; margin-left:60px;\">Planlamaya ba\u015flamak i\u00e7in t\u0131klay\u0131n.<\/a>\n\t<\/p>\n\n\n<\/div>",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > ul",
                    "id": "sp-custom-179-1533799499630",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-left": {
                            "value": "65px",
                            "defaultVal": "60px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(50, 120, 173)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p > a",
                    "id": "sp-custom-179-1533799522161",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "border-width": {
                            "value": "1px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        },
                        "border-style": {
                            "value": "dashed",
                            "defaultVal": "none"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-179-1533799551520",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-top": {
                            "value": "25px",
                            "defaultVal": "5px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > img",
                    "id": "sp-custom-179-1533799616342",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-top": {
                            "value": "15px",
                            "defaultVal": "25px"
                        },
                        "margin-left": {
                            "value": "15px",
                            "defaultVal": "5px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > img",
                    "id": "sp-custom-179-1533799627439",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-left": {
                            "value": "35px",
                            "defaultVal": "65px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(50, 120, 173)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p > a",
                    "id": "sp-custom-179-1533799642687",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-left": {
                            "value": "15px",
                            "defaultVal": "35px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(50, 120, 173)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p > a",
                    "id": "sp-custom-179-1533799650831",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-left": {
                            "value": "0px",
                            "defaultVal": "15px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(50, 120, 173)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p > a",
                    "id": "sp-custom-179-1533799662997",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-top": {
                            "value": "10px",
                            "defaultVal": "15px"
                        },
                        "margin-bottom": {
                            "value": "10px",
                            "defaultVal": "5px"
                        },
                        "margin-left": {
                            "value": "10px",
                            "defaultVal": "15px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > img",
                    "id": "sp-custom-179-1533799703839",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "5px",
                            "defaultVal": "10px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > img",
                    "id": "sp-custom-179-1533799713437",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-top": {
                            "value": "15px",
                            "defaultVal": "10px"
                        },
                        "margin-bottom": {
                            "value": "0px",
                            "defaultVal": "5px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > img",
                    "id": "sp-custom-179-1533799728372",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-179-1533800154615",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > img",
                    "id": "sp-custom-179-1533800157186",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "insertedHTML",
                    "insertOption": "elementAfter",
                    "html": "<div style=\"border-width: 1px; border-style: dashed;\">\n\t<img src=\"https:\/\/image.useinsider.com\/ikea\/c179\/yrFl6a2ixDWVcyMDz14s1533796992.png\" style=\"float:left; margin: 15px 10px 0px; \">\n\t\n\t<p><span style=\"color:#FE2F03; font-weight:bold;\">Yeni<\/span> EKET Planlay\u0131c\u0131y\u0131 kullanarak istedi\u011finiz dolap kombinasyonunu olu\u015fturun.\t\n\t<br\/>\n\t\t<a href=\"https:\/\/www.ikea.com.tr\/eket-planner\" target=\"_blank\" style=\"color:#3278ad; margin-left:0px;\">Planlamaya ba\u015flamak i\u00e7in t\u0131klay\u0131n.<\/a>\n\t<\/p> \n\n\n<\/div>",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > ul",
                    "id": "sp-custom-179-1533800270456",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/tv-dolap-sistemleri\/dolap-sistemleri\/20333951\/eket-kapakli-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "30px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-179-1543829136268",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Fdolap-sistemleri%2F49221038%2Feket-dolap-kombinasyonu.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "30px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "id": "sp-custom-179-1543829152605",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Fdolap-sistemleri%2F49221038%2Feket-dolap-kombinasyonu.aspx"
                }, {
                    "oldPosition": {
                        "top": "auto",
                        "left": "auto",
                        "width": "423px",
                        "height": "60px",
                        "position": "static",
                        "z-index": "auto",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "0px",
                        "left": "0px",
                        "width": "423px",
                        "height": "60px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Fdolap-sistemleri%2F49221038%2Feket-dolap-kombinasyonu.aspx",
                    "type": "moveElement",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-179-1543829159886",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "0px",
                            "defaultVal": "30px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-179-1543829166506",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Fdolap-sistemleri%2F49221038%2Feket-dolap-kombinasyonu.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(3) > p",
                    "id": "sp-custom-179-1543924173824",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(3)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(4) > p",
                    "id": "sp-custom-179-1543924176356",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(4)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(4) > img",
                    "id": "sp-custom-179-1543924179081",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(4)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "remove",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(3) > img",
                    "id": "sp-custom-179-1543924180848",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(3)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "50px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2) > p",
                    "id": "sp-custom-179-1543924194122",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "50px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2)",
                    "id": "sp-custom-179-1543924204829",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "0px",
                            "defaultVal": "50px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2)",
                    "id": "sp-custom-179-1543924212872",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "0px",
                            "defaultVal": "50px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2) > p",
                    "id": "sp-custom-179-1543924222878",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "50px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2) > p",
                    "id": "sp-custom-179-1543924235384",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "50px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2)",
                    "id": "sp-custom-179-1543924245403",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "0px",
                            "defaultVal": "50px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2) > p",
                    "id": "sp-custom-179-1543924257181",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(2)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Ftv-dolap-sistemleri%2Ftv-uniteleri%2F29204431%2Fbestaeket-tv-unitesi.aspx"
                }],
                "customJs": "",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "126",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c181",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDc5OTA0Njcw",
                "isActive": "1",
                "activeDateStart": "1533804780",
                "activeDateEnd": "1662713700",
                "locationData": false,
                "showIn": {
                    "trigger": [143],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "insertedHTML",
                    "insertOption": "elementAfter",
                    "html": "<div style=\"border-width: 1px; border-style: dashed;\">\n\t<img src=\"https:\/\/image.useinsider.com\/ikea\/c179\/yrFl6a2ixDWVcyMDz14s1533796992.png\" style=\"float:left; margin: 15px 10px 0px; \">\n\t\n\t<p><span style=\"color:#FE2F03; font-weight:bold;\">Yeni<\/span> ALGOT Planlay\u0131c\u0131y\u0131 kullanarak istedi\u011finiz raf \u00fcnitesini olu\u015fturun.\t\n\t<br\/>\n\t\t<a href=\"https:\/\/www.ikea.com.tr\/algot-planner\" target=\"_blank\" style=\"color:#3278ad; margin-left:0px;\">Planlamaya ba\u015flamak i\u00e7in t\u0131klay\u0131n.<\/a>\n\t<\/p> \n\n\n<\/div>",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > ul",
                    "id": "sp-custom-181-1533804979832",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/ardiye-alanlari\/acik-raf-sistemleri\/tum-parcalar\/10218517\/algot-file-sepet.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "30px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "id": "sp-custom-181-1543829525080",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Fantreler%2Facik-raf-sistemleri%2Facik-raf-uniteleri%2F99903806%2Falgot-raf-unitesi.aspx"
                }],
                "customJs": "",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "127",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c183",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDYyOTE1MTI=",
                "isActive": "1",
                "activeDateStart": "1533805500",
                "activeDateEnd": "1662714420",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [144]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "insertedHTML",
                    "insertOption": "elementAfter",
                    "html": "<div style=\"border-width: 1px; border-style: dashed;\">\n\t<img src=\"https:\/\/image.useinsider.com\/ikea\/c179\/yrFl6a2ixDWVcyMDz14s1533796992.png\" style=\"float:left; margin: 15px 10px 0px; \">\n\t\n\t<p><span style=\"color:#FE2F03; font-weight:bold;\">Yeni<\/span> ELVARLI Planlay\u0131c\u0131y\u0131 kullanarak istedi\u011finiz a\u00e7\u0131k dolap sistemini olu\u015fturun.\t\n\t<br\/>\n\t\t<a href=\"https:\/\/www.ikea.com.tr\/elvarli-planner\" target=\"_blank\" style=\"color:#3278ad; margin-left:0px;\">Planlamaya ba\u015flamak i\u00e7in t\u0131klay\u0131n.<\/a>\n\t<\/p> \n\n\n<\/div>",
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > ul",
                    "id": "sp-custom-183-1533805552447",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "https:\/\/www.ikea.com.tr\/urun-katalogu\/ardiye-alanlari\/acik-raf-sistemleri\/tum-parcalar\/00317532\/elvarli-yan-unite.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "30px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-183-1543829723682",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Fantreler%2Facik-raf-sistemleri%2Facik-raf-uniteleri%2F39157387%2Felvarli-acik-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "30px",
                            "defaultVal": "0px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "id": "sp-custom-183-1543829732831",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Fantreler%2Facik-raf-sistemleri%2Facik-raf-uniteleri%2F39157387%2Felvarli-acik-dolap.aspx"
                }, {
                    "type": "css",
                    "settings": {
                        "margin-bottom": {
                            "value": "0px",
                            "defaultVal": "30px"
                        },
                        "text-decoration": {
                            "value": "",
                            "defaultVal": "none solid rgb(68, 81, 89)"
                        }
                    },
                    "selectorString": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1) > p",
                    "id": "sp-custom-183-1543829741885",
                    "parentNodeSelector": "form#aspnetForm > section > div:eq(0) > div:eq(2) > div:eq(1) > div > div:eq(1)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2Furun-katalogu%2Fantreler%2Facik-raf-sistemleri%2Facik-raf-uniteleri%2F39157387%2Felvarli-acik-dolap.aspx"
                }],
                "customJs": "",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "128",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c190",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDg5MzkxNzUx",
                "isActive": "1",
                "activeDateStart": "1535417940",
                "activeDateEnd": "1893373140",
                "locationData": false,
                "showIn": {
                    "trigger": [152]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "var insightIds = [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45];\r\nvar clickedItems = [];\r\nvar builderId = 133;\r\nvar goalIds = [];\r\nvar variationId = 'c190';\r\nvar userId = (sQuery.cookie('spUID') || spApi.localStorageGet('spUID') || '').toString();\r\nvar goalBuilderList = (spApi.personalizationCamps[builderId] || [])['goalBuilderList'];\r\n\r\nif (goalBuilderList !== undefined) {\r\n    sQuery.each(insightIds, function (index, id) {\r\n        var insightName = 'ins-insight-' + id;\r\n\r\n        if (spApi.localStorageGet(insightName) !== null) {\r\n            var insight = JSON.parse(spApi.storageData('ins-insight-' + id));\r\n            var items = [];\r\n\r\n            sQuery.each(insight.units, function (key, item) {\r\n                if (Number(item.c) > 0) {\r\n                    items.push(key);\r\n                }\r\n            });\r\n\r\n            if (items.length > 0) {\r\n                clickedItems.push(Number(id));\r\n            }\r\n        }\r\n    });\r\n\r\n    if (clickedItems.length > 0) {\r\n        var prodCats = JSON.parse(spApi.storageData('prodCats') || '[]');\r\n        var cartProductList = JSON.parse(spApi.storageData('ins-cart-product-list') || '[]').productList || [];\r\n        var productList = [];\r\n\r\n        sQuery.each(cartProductList, function (index, item) {\r\n            var productId = item.id || '';\r\n\r\n            \/\/ \u00c7OCUK SAYFASINDAK\u0130 \u00dcR\u00dcNLER \u0130\u00c7\u0130N - START\r\n\r\n            if (productId === '30389607' && clickedItems.indexOf(37) > -1) {\r\n                goalIdPushToArray(45);\r\n            }\r\n\r\n            if (productId === '40404462' && clickedItems.indexOf(38) > -1) {\r\n                goalIdPushToArray(44);\r\n            }\r\n\r\n            if (productId === '00404464' && clickedItems.indexOf(39) > -1) {\r\n                goalIdPushToArray(46);\r\n            }\r\n\r\n            if (productId === '20404458' && clickedItems.indexOf(40) > -1) {\r\n                goalIdPushToArray(47);\r\n            }\r\n\r\n            if (productId === '50404466' && clickedItems.indexOf(41) > -1) {\r\n                goalIdPushToArray(48);\r\n            }\r\n\r\n            if (productId === '60404456' && clickedItems.indexOf(42) > -1) {\r\n                goalIdPushToArray(49);\r\n            }\r\n\r\n            \/\/ \u00c7OCUK SAYFASINDAK\u0130 \u00dcR\u00dcNLER \u0130\u00c7\u0130N - END\r\n\r\n            sQuery.each(prodCats, function (catIndex, catItem) {\r\n                if (catItem.id === productId) {\r\n                    productList.push(catItem);\r\n                }\r\n            });\r\n        });\r\n\r\n        if (productList.length > 0) {\r\n            var checkFor35 = clickedItems.indexOf(35) > -1 &&\r\n                checkWithCategory(productList, ['PAX Gard\u0131rop Sistemleri']);\r\n            var checkFor36 = clickedItems.indexOf(36) > -1 &&\r\n                checkWithName(productList, ['KOMPLEMENT']);\r\n            var checkFor43 = clickedItems.indexOf(43) > -1 &&\r\n                checkWithCategory(productList, ['PAX Gard\u0131rop Sistemleri']);\r\n            var checkFor45 = clickedItems.indexOf(45) > -1 &&\r\n                checkWithName(productList, ['PLATSA', 'LATTHET', 'HJALPA', 'STUK']);\r\n\r\n            if (checkFor35) {\r\n                goalIdPushToArray(39);\r\n                goalIdPushToArray(37);\r\n            }\r\n\r\n            if (checkFor36) {\r\n                goalIdPushToArray(40);\r\n                goalIdPushToArray(37);\r\n            }\r\n\r\n            if (checkFor43) {\r\n                goalIdPushToArray(41);\r\n            }\r\n\r\n            if (checkFor45) {\r\n                goalIdPushToArray(42);\r\n            }\r\n\r\n            if (clickedItems.indexOf(44) > -1 && checkFor43) {\r\n                goalIdPushToArray(43);\r\n            }\r\n\r\n            if (clickedItems.indexOf(44) > -1 && checkFor45) {\r\n                goalIdPushToArray(43);\r\n            }\r\n\r\n            if (clickedItems.indexOf(45) > -1) {\r\n                goalIdPushToArray(42);\r\n            }\r\n        }\r\n    }\r\n\r\n    function checkWithCategory(list, cats) {\r\n        var counter = 0;\r\n\r\n        sQuery.each(list, function (index, item) {\r\n            sQuery.each(cats, function () {\r\n                if ((item.cat || '').indexOf(this) > -1) {\r\n                    counter++;\r\n                }\r\n            });\r\n        });\r\n\r\n        return counter > 0;\r\n    }\r\n\r\n    function checkWithName(list, names) {\r\n        var counter = 0;\r\n\r\n        sQuery.each(list, function (index, item) {\r\n            sQuery.each(names, function () {\r\n                if ((item.name || '').indexOf(this) > -1) {\r\n                    counter++;\r\n                }\r\n            });\r\n        });\r\n\r\n        return counter > 0;\r\n    }\r\n\r\n    function goalIdPushToArray(id) {\r\n        if (goalIds.indexOf(id) === -1) {\r\n            goalIds.push(id);\r\n        }\r\n    }\r\n\r\n    function getSubId(goalId) {\r\n        if (goalBuilderList[goalId] === undefined) {\r\n            return false;\r\n        } else {\r\n            return (goalBuilderList[goalId].goalList[0].id || '').split('-').pop();\r\n        }\r\n    }\r\n\r\n    function customLog(goalId) {\r\n        var goalType = JSON.parse(spApi.getGoalStorageData(variationId, goalId.toString()) || '{}').goalType || 'join';\r\n        var subId = getSubId(goalId);\r\n        var newGoalType = goalType === 'join' ? 'engage' : 'join';\r\n\r\n        if (subId !== false) {\r\n            sQuery.ajax({\r\n                url: 'https:\/\/ikea.api.sociaplus.com\/ajax.php',\r\n                data: {\r\n                    't': 'storeGoalBuilderLog',\r\n                    'type': goalType,\r\n                    'builderId': builderId.toString(),\r\n                    'varId': variationId,\r\n                    'campId': variationId,\r\n                    'goalId': goalId.toString(),\r\n                    'productType': 'goalBuilder',\r\n                    'goalType': 'rules',\r\n                    'subId': subId,\r\n                    'userId': userId,\r\n                    'ref': spApi.getUrl(),\r\n                    'url': spApi.getUrl(),\r\n                    'referer': document.referrer,\r\n                    'other': 1\r\n                },\r\n                success: function () {\r\n                    spApi.conLog(goalId + ' ID\\'li goal custom olarak at\u0131ld\u0131. Variation ID: ' + variationId);\r\n\r\n                    spApi.updateCookie({\r\n                        key: 'sp-goal-' + variationId + '-' + goalId,\r\n                        obj: {\r\n                            'goalType': newGoalType\r\n                        },\r\n                        campId: variationId\r\n                    }, 'nolog');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    if (goalIds.length > 0) {\r\n        sQuery.each(goalIds, function (index, goalId) {\r\n            customLog(goalId);\r\n        });\r\n    }\r\n}",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "133",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c192",
                "campName": "|-x-|U2VhcmNoJTIwVGV4dA==",
                "isActive": "1",
                "activeDateStart": "1536059640",
                "activeDateEnd": "1664882040",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [154]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "elementAttr",
                    "attrs": [{
                        "key": "placeholder",
                        "val": "\u00dcr\u00fcn Ara",
                        "type": "added"
                    }],
                    "selectorString": "input#txtSearchBox",
                    "id": "sp-custom-192-1536059724824",
                    "parentNodeSelector": "header#top > div:eq(1) > div:eq(0) > div:eq(1)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/"
                }],
                "customJs": "",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "134",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c208",
                "campName": "|-x-|U2VrbWUlMjBBbGFuJUM0JUIxbmRhJTIwU2VwZXQlMjBCaWxnaWxlbmRpcm1l",
                "isActive": "1",
                "activeDateStart": "1538326860",
                "activeDateEnd": "1666890060",
                "locationData": false,
                "showIn": {
                    "trigger": [167]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "var insItem = spApi.getCartCount();\r\nwindow.insTitleBackup = document.title;\r\nwindow.insTitleChanged = true;\r\nif (insItem > 0) {\r\n    window.insTitleNew = 'Sepetinizde ' + insItem + ' adet \u00fcr\u00fcn var!';\r\n}\r\n\r\nfunction stopBlink() {\r\n    if (typeof window.insTitleTracker != 'undefined') {\r\n        clearInterval(window.insTitleTracker);\r\n    }\r\n    document.title = window.insTitleBackup;\r\n    window.insTitleChanged = false;\r\n}\r\n\r\nfunction playBlink() {\r\n    window.insTitleTracker = setInterval(function() {\r\n        if (!window.insTitleChanged) {\r\n            document.title = window.insTitleNew;\r\n            window.insTitleChanged = true;\r\n        } else {\r\n            document.title = window.insTitleBackup;\r\n            window.insTitleChanged = false;\r\n        }\r\n    }, 2000);\r\n}\r\nsQuery(window).off('focus.insider').on('focus.insider', function() {\r\n    stopBlink();\r\n});\r\nsQuery(window).off('blur.insider').on('blur.insider', function() {\r\n    playBlink();\r\n});",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "148",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c210",
                "campName": "|-x-|U2VhcmNoYmFyYSUyMFNvbiUyMCVDMyU5Q3IlQzMlQkNuJTIwRGVza3RvcA==",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671016380",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [262]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\r\n    var selector = '#txtSearchBox';\r\n\/*    var lastVisitedProductName = sQuery.cookie('ins-last-visited-product-name') || '';*\/\r\n  \tif (spApi.isOnProductPage()) {\r\n        var lastVisitedProductName = sQuery('.product-info #ctl00_ContentPlaceHolder1_pnlCatalogProductBox h1 span').text().split(\",\")[0] || '';\r\n    }\r\n\r\n    self.init = function () {\r\n        self.reset();\r\n\r\n        sQuery(selector).elementLoadComplete(function () {\r\n            self.setSearchBarAttributes();\r\n            self.addInsClass();\r\n            self.setSearchIconClickEvent();\r\n        }, {\r\n            i: 100,\r\n            t: 15000\r\n        });\r\n    };\r\n\r\n    self.reset = function () {\r\n        sQuery('.search.clearfix .btn').removeClass('sp-custom-210-1');\r\n        sQuery('#txtSearchBox').removeClass('sp-custom-210-2');\r\n    };\r\n\r\n    self.setSearchBarAttributes = function () {\r\n        if (lastVisitedProductName !== '') {\r\n            sQuery(selector).attr('placeholder', lastVisitedProductName);\r\n            sQuery(selector).attr('value', lastVisitedProductName);\r\n        }\r\n    };\r\n\r\n    self.addInsClass = function () {\r\n        sQuery('.search.clearfix .btn').addClass('sp-custom-210-1');\r\n        sQuery('#txtSearchBox').addClass('sp-custom-210-2');\r\n    };\r\n\r\n  \tself.setSearchIconClickEvent = function () {\r\n        sQuery(selector).off('click.insClick210')\r\n            .on('click.insClick210', function () {\r\n                sQuery(selector).attr('placeholder', '');\r\n                sQuery(selector).attr('value', '');\r\n            });\r\n    };\r\n\r\n    self.init();\r\n})({});",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "155",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c284",
                "campName": "|-x-|S29udHJvbCUyMEdydWJ1JTIwLSUyMFNlYXJjaGJhcmElMjBTb24lMjAlQzMlOUNyJUMzJUJDbiUyMERlc2t0b3A=",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671016380",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [262]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.search.clearfix .btn').addClass('sp-custom-284-1');\r\nsQuery('#txtSearchBox').addClass('sp-custom-284-2');",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "155",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c212",
                "campName": "|-x-|U2VhcmNoYmFyYSUyMFNvbiUyMCVDMyU5Q3IlQzMlQkNuJTIwTW9iaWxl",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671016440",
                "locationData": false,
                "showIn": {
                    "trigger": [187],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\r\n    var selector = '#txtMainSearch';\r\n\/*    var lastVisitedProductName = sQuery.cookie('ins-last-visited-product-name') || '';\t*\/\r\n  \tif (spApi.isOnProductPage()) {\r\n        var lastVisitedProductName = sQuery('.product-detail #ctl00_body_pnlCatalogProductBox p').text().split(\",\")[0] || '';\r\n    }\r\n\r\n    self.init = function () {\r\n        self.reset();\r\n\r\n        sQuery(selector).elementLoadComplete(function () {\r\n            self.setSearchBarAttributes();\r\n            self.addInsClass();\r\n            self.setSearchIconClickEvent();\r\n            self.setSearchIconBlurEvent();\r\n        }, {\r\n            i: 100,\r\n            t: 15000\r\n        });\r\n    };\r\n\r\n    self.reset = function () {\r\n        sQuery('.search.clearfix .btn').removeClass('sp-custom-212-1');\r\n        sQuery('#txtMainSearch').removeClass('sp-custom-212-2');\r\n    };\r\n\r\n    self.setSearchBarAttributes = function () {\r\n        if (lastVisitedProductName !== '') {\r\n            sQuery(selector).attr('placeholder', lastVisitedProductName);\r\n            sQuery(selector).attr('value', lastVisitedProductName);\r\n        }\r\n    };\r\n\r\n    self.addInsClass = function () {\r\n        sQuery('.search.clearfix .btn').addClass('sp-custom-212-1');\r\n        sQuery('#txtMainSearch').addClass('sp-custom-212-2');\r\n    };\r\n\r\n    self.setSearchIconClickEvent = function () {\r\n        sQuery(selector).off('click.insClick212')\r\n            .on('click.insClick212', function () {\r\n                sQuery(selector).attr('placeholder', '');\r\n                sQuery(selector).attr('value', '');\r\n            });\r\n    };\r\n\r\n    self.setSearchIconBlurEvent = function () {\r\n        sQuery(selector).blur(function () {\r\n            sQuery(selector).attr('placeholder', lastVisitedProductName);\r\n            sQuery(selector).attr('value', lastVisitedProductName);\r\n        });\r\n    };\r\n\r\n    self.init();\r\n})({});",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "156",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c288",
                "campName": "|-x-|U2VhcmNoYmFyYSUyMFNvbiUyMCVDMyU5Q3IlQzMlQkNuJTIwTW9iaWxlJTIwLSUyMENvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTU2JTI5",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671016440",
                "locationData": false,
                "showIn": {
                    "trigger": [187],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.search.clearfix .btn').addClass('sp-custom-288-1');\r\nsQuery('#txtMainSearch').addClass('sp-custom-288-2');",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "156",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c214",
                "campName": "|-x-|Q2FydCUyMFJlbWluZGVyJTIwRGVza3RvcA==",
                "isActive": "1",
                "activeDateStart": "1539088860",
                "activeDateEnd": "1637239260",
                "locationData": false,
                "showIn": {
                    "trigger": [188]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\r\n    'use strict';\r\n\r\n    var campId = 214;\r\n    var headerText = 'Sepetinizde bekleyen \u00fcr\u00fcnler var!';\r\n    var widgetNotDisplayingTime = 168; \/\/ AFTER TEST PLEASE CHANGE TO 168 !!!!!\r\n    var products = spApi.getCartProductStorage() || [];\r\n    var product = (spApi.storageData('ins-is-visit-cart-page') ? products.shift() : products.pop()) || {};\r\n\r\n    self.construct = function () {\r\n        if (product) {\r\n            self.reset();\r\n            self.buildHtml();\r\n            self.setEvents();\r\n        }\r\n    };\r\n\r\n    self.reset = function () {\r\n        sQuery('.ins-cart-reminder-wrapper').remove();\r\n    };\r\n\r\n    self.buildHtml = function () {\r\n        var imgUrl = self.changeImgSize(product.img || '\/');\r\n        var productTitleInfo = self.getProductNameInfo(product.name || '');\r\n\r\n        sQuery('body').append(\r\n            '<div class=\"ins-cart-reminder-wrapper\">' +\r\n            '<div class=\"ins-cart-reminder-header\">' +\r\n            '<div class=\"ins-cart-reminder-title\">' + headerText + '<\/div>' +\r\n            '<div class=\"ins-cart-reminder-close sp-custom-' + campId + '-1\">&#215;<\/div>' +\r\n            '<\/div>' +\r\n            '<div class=\"ins-cart-reminder-body\">' +\r\n            '<div class=\"ins-cart-reminder-product-image-wrapper\">' +\r\n            '<img class=\"ins-cart-reminder-product-image\" src=\"' + decodeURIComponent(imgUrl) + '\"><\/img>' +\r\n            '<\/div>' +\r\n            '<div class=\"ins-cart-reminder-info-wrapper\">' +\r\n            '<div class=\"cart-reminder-product-brand\">' + decodeURIComponent(productTitleInfo.title) + '<\/div>' +\r\n            '<div class=\"cart-reminder-product-description\">' + decodeURIComponent(productTitleInfo.name) + '<\/div>' +\r\n            '<\/div>' +\r\n            '<\/div>' +\r\n            '<div class=\"ins-cart-reminder-footer\">' +\r\n            '<div class=\"ins-cart-reminder-go-cart-wrapper\">' +\r\n            '<img src=\"https:\/\/cdn.ikea.com.tr\/_assets\/images\/icon-add-to-basket-new.png\"' +\r\n            'alt=\"\" class=\"ins-cart-reminder-cart\">' +\r\n            '<span class=\"ins-cart-reminder-go-cart sp-custom-' + campId + '-2\">Sepete Git<\/span>' +\r\n            '<\/div>' +\r\n            '<\/div>' +\r\n            '<\/div>'\r\n        );\r\n    };\r\n\r\n    self.changeImgSize = function (imgUrl) {\r\n        var imgSizeMatherRegex = \/\\\/([\\d\\_]+)\/;\r\n\r\n        if (imgSizeMatherRegex.test(imgUrl)) {\r\n            return imgUrl.replace(imgSizeMatherRegex, '\/220_220');\r\n        }\r\n\r\n        return imgUrl;\r\n    };\r\n\r\n    self.getProductNameInfo = function (productName) {\r\n        var productNameTitleRegex = \/([A-Z\u015e\u011e\u00dc\u0130\u00c7\u00d6\u0130\\ \\d]*)(.*)\/;\r\n        var endWithANumberMatcherRegex = \/\\w+\\ +\\b\\d{1}\\b\/;\r\n        var regexResult = productNameTitleRegex.exec(productName);\r\n        var productInfo = {};\r\n\r\n        if (regexResult && regexResult[1]) {\r\n            productInfo.title = regexResult[1].trim();\r\n        }\r\n\r\n        if (regexResult && regexResult[2]) {\r\n            var name = regexResult[2].trim();\r\n\r\n            if (endWithANumberMatcherRegex.test(productInfo.title)) {\r\n                name = productInfo.title.slice(productInfo.title.length - 1) + name;\r\n\r\n                productInfo.title = productInfo.title.slice(0, productInfo.title.length - 1);\r\n            }\r\n\r\n            if (name && name[0]) {\r\n                productInfo.name = name[0].toLocaleUpperCase() + name.slice(1);\r\n            } else {\r\n                productInfo.name = name;\r\n            }\r\n        }\r\n\r\n        return productInfo;\r\n    };\r\n\r\n    self.setEvents = function () {\r\n        sQuery('.ins-cart-reminder-go-cart, .ins-cart-reminder-close').off('click.ins-' + campId)\r\n            .on('click.ins-' + campId, function () {\r\n                spApi.setCustomCookie(\r\n                    'ins-cart-reminder-live-time', spApi.getExpiredHoursDate(widgetNotDisplayingTime).getTime(), 365\r\n                );\r\n\r\n                spApi.storageData('ins-is-visit-cart-page', null);\r\n\r\n                self.reset();\r\n\r\n                if (sQuery(this).hasClass('ins-cart-reminder-go-cart')) {\r\n                    location.href = '\/siparis-adim\/sepetim.aspx';\r\n                }\r\n            });\r\n    };\r\n\r\n    self.construct();\r\n})({});",
                "customCss": ".ins-cart-reminder-wrapper {\r\n    border: 1px solid #c3b0b0;\r\n    padding: 5px;\r\n    width: 315px;\r\n    border-radius: 8px;\r\n    background-color: white;\r\n    box-shadow: 2px 5px #c3b0b0;\r\n    position: fixed;\r\n    bottom: 20px;\r\n    left: 15px;\r\n    z-index: 99999990;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 30px;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-title {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 30px;\r\n    font-weight: bold;\r\n    font-size: 14px;\r\n    color: black;\r\n    text-align: center;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-close {\r\n    width: 15px;\r\n    border: 1px solid black;\r\n    border-radius: 21px;\r\n    height: 15px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-body {\r\n    display: flex;\r\n    padding: 0 10px 10px 10px;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-product-image-wrapper img {\r\n    width: 70px;\r\n    height: 70px;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-info-wrapper {\r\n    margin-left: 17px;\r\n    padding-top: 13px;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .cart-reminder-product-description {\r\n    margin-top: 10px;\r\n    font-size: 14px;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .cart-reminder-product-brand {\r\n    font-weight: bold;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-footer {\r\n    display: flex;\r\n    justify-content: center;\r\n    position: relative;\r\n    bottom: 7px;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-go-cart-wrapper {\r\n    width: 128px;\r\n    background-color: #004cbc;\r\n    color: white;\r\n    display: flex;\r\n    height: 27px;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    border-radius: 3px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-go-cart-wrapper:hover {\r\n    background: #fd6802;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-go-cart {\r\n    position: relative;\r\n    right: 4px;\r\n  \tfont-weight: normal;\r\n    font-size: 14px;\r\n    font-family: inherit;\r\n}\r\n\r\n.ins-cart-reminder-wrapper .ins-cart-reminder-cart {\r\n    width: 20px;\r\n    position: relative;\r\n    bottom: 2px\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "157",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c233",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMEJvJUM1JTlGJTIwU2VwZXQlMjBTYXlmYXMlQzQlQjE=",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671012000",
                "locationData": false,
                "showIn": {
                    "trigger": [205]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\r\n    var variationId = spApi.userSegments[170] || 'Development';\r\n    var partnerId = 10002017;\r\n    var userId = sQuery.cookie('spUID') || spApi.localStorageGet('spUID') || '';\r\n    var prependSelector = '.page-content-area';\r\n    var basketImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/ik0oJ9iDQeCO3WuZuMgQ1540984791.png';\r\n    var favoriteImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/25k82xK4fliteBIJEtiB1540984819.png';\r\n    var endPoint = 'https:\/\/predictive.api.sociaplus.com\/recommendation\/user\/v2\/' + userId + '?partnerid=' + partnerId +\r\n        '&lang=tr_TR&with_item_details=1&size=20';\r\n\r\n    self.init = function () {\r\n        self.reset();\r\n\r\n        self.getData(function () {\r\n            self.setEvents();\r\n        });\r\n    };\r\n\r\n    self.reset = function () {\r\n        sQuery('.ins-slider-container-' + variationId).remove();\r\n    };\r\n\r\n    self.getData = function (callback) {\r\n        sQuery.ajax({\r\n            url: sQuery.trim(endPoint),\r\n            success: function (response) {\r\n                if (response.length > 0) {\r\n                    response = response.slice(0, 8);\r\n\r\n                    self.buildStructure(response);\r\n\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    self.buildStructure = function (data) {\r\n        var userLoginButtonHtml = '';\r\n\t\tvar userLoginDescriptionHtml = 'Al\u0131\u015fveri\u015finize sizin i\u00e7in \u00f6nerdi\u011fimiz \u00fcr\u00fcnlere g\u00f6z atarak ba\u015flayabilirsiniz.';\r\n\r\n        if (!spApi.isUserLoggedIn()) {\r\n            userLoginButtonHtml = '<a class=\"sp-custom-' + variationId + '-5\" href=\"\/uyelik\/uye-girisi.aspx\">' +\r\n                '\u00dcye Giri\u015fi<\/a>';\r\n\t\t\tvar userLoginDescriptionHtml = 'Al\u0131\u015fveri\u015finize sizin i\u00e7in \u00f6nerdi\u011fimiz \u00fcr\u00fcnlere g\u00f6z atarak ba\u015flayabilirsiniz. <br>Veya \u00fcye giri\u015fi yaparak, daha \u00f6nce sepetinize ekledi\u011finiz \u00fcr\u00fcn varsa hemen g\u00f6r\u00fcnt\u00fcleyebilirsiniz.';\r\n        }\r\n\r\n        var html = '<div class=\"ins-slider-container-' + variationId + '\">' +\r\n            '<div class=\"ins-recommendation-container\">' +\r\n            '<div class=\"ins-empty-cart\">' +\r\n            '<div class=\"ins-empty-cart-header\">Sepetiniz Bo\u015f<\/div>' +\r\n            '<p class=\"ins-empty-cart-description\">' +\r\n            \/*'Al\u0131\u015fveri\u015finize sizin i\u00e7in \u00f6nderdi\u011fimiz \u00fcr\u00fcnlere g\u00f6z atarak ba\u015flayabilirsiniz.' +*\/\r\n\t\t\tuserLoginDescriptionHtml +\r\n            '<\/p>' +\r\n            '<div class=\"ins-empty-cart-buttons\">' +\r\n            userLoginButtonHtml +\r\n            '<a class=\"sp-custom-' + variationId + '-4\" href=\"\/\">Ana Sayfaya D\u00f6n<\/a>' +\r\n            '<\/div>' +\r\n            '<\/div>' +\r\n            '<div class=\"ins-recommendation-header\">' +\r\n\t\t\t\/*'<p>Sizin \u0130\u00e7in Se\u00e7tiklerimiz<\/p>' +*\/\r\n            '<p><\/p>' +\r\n            '<\/div>' +\r\n            '<div class=\"ins-slider-wrapper\">' +\r\n            self.populateProducts(data) +\r\n            '<div style=\"clear: both;\"><\/div>' +\r\n            '<\/div>' +\r\n            '<\/div>' +\r\n            '<\/div>';\r\n\r\n        sQuery(prependSelector).html(html);\r\n    };\r\n\r\n    self.formatThePrice = function (price) {\r\n        return (price || '').toString().replace('.', ',').split(' ').shift().replace(\/(\\d)(?=(\\d\\d\\d)+(?!\\d))\/g, '$1.');\r\n    };\r\n\r\n    self.populateProducts = function (data) {\r\n        var productsHtml = '';\r\n\r\n        sQuery(data).each(function () {\r\n            var checkConditions = this.item_url.indexOf('yil-boyu-indirim') === -1 &&\r\n                this.item_url.indexOf('yaz-urunleri') === -1 &&\r\n                this.item_url.indexOf('is-yeriniz-icin') === -1 &&\r\n                this.item_url.indexOf('isvec-gida-marketi') === -1;\r\n\r\n            if (checkConditions) {\r\n                var newTurkishLira = this.item_price.split(' ')[0];\r\n                var newTurkishLiraWithDot = self.formatThePrice(newTurkishLira);\r\n                var productNameArray = this.item_name.split(' ') || '';\r\n                var productUrl = this.item_url.replace('http:\/\/', 'https:\/\/') || '';\r\n                var productImageUrl = this.item_image.replace('http:\/\/', 'https:\/\/') || '';\r\n\r\n                productsHtml += '<div class=\"ins-slider-item\">' +\r\n                    '<a class=\"sp-custom-' + variationId + '-1\" href=\"' + productUrl + '\"><\/a>' +\r\n                    '<div class=\"ins-item-image\">' +\r\n                    '<img src=\"' + productImageUrl + '\">' +\r\n                    '<\/div>' +\r\n                    '<div class=\"ins-item-name\"><span class=\"ins-item-name-bold\">' +\r\n                    decodeURIComponent(productNameArray.splice(0, 1)) + '<\/span>' +\r\n                    decodeURIComponent(productNameArray.splice(0, productNameArray.length).join(' ')) + '<\/div>' +\r\n                    '<div class=\"ins-item-price line\">' + newTurkishLiraWithDot +\r\n                    ' <span class=\"tl\"><i>t<\/i><\/span><\/div>' +\r\n                    '<div class=\"ins-cart-buttons\">' +\r\n                    '<div class=\"ins-cart-button ins-add-to-cart first sp-custom-' + variationId + '-2\" ' +\r\n                    'onclick=\"shopping.addCartItem(\\'' + this.item_id + '\\', this);\">' +\r\n                    '<img src=\"' + basketImageUrl + '\" class=\"ins-cart-sepet-icon\"\/> <span>Sepete Ekle<\/span><\/div>' +\r\n                    '<div class=\"ins-cart-button ins-cart-favori-btn sp-custom-' + variationId + '-3\" ' +\r\n                    'onclick=\"user.favorite.addItem(\\'' + this.item_id + '\\', this);\">' +\r\n                    '<img src=\"' + favoriteImageUrl + '\"\/> <span>Favorilere Ekle<\/span><\/div>' +\r\n                    '<\/div>' +\r\n                    '<\/div>';\r\n            }\r\n        });\r\n\r\n        return productsHtml;\r\n    };\r\n\r\n    self.setEvents = function () {\r\n        var ajaxListener = function (callback) {\r\n            var originalOpenFunction = XMLHttpRequest.prototype.open;\r\n\r\n            XMLHttpRequest.prototype.open = function (method, url) {\r\n                originalOpenFunction.apply(this, arguments);\r\n\r\n                this.addEventListener('readystatechange', function () {\r\n                    if (this.readyState === 4 && this.status === 200) {\r\n                        if (typeof callback === 'function') {\r\n                            try {\r\n                                callback(url, this.responseText);\r\n                            } catch (error) {\r\n                                spApi.conLog('Something is crashed, Event:' + error);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        };\r\n\r\n        ajaxListener(function (url, response) {\r\n            if (url.indexOf('\/general.aspx\/AddShoppingCart') > -1) {\r\n                response = JSON.parse(response || '{}');\r\n\r\n                if (typeof response.d !== 'undefined' && response.d.StatusCode === 200) {\r\n                    location.reload();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    self.init();\r\n})({});",
                "customCss": ".ins-recommendation-container {\r\n    position: relative;\r\n    width: 1060px;\r\n    margin: 20px 0px;\r\n    margin-bottom: 0px;\r\n    left: 10px;\r\n    font-family: 'Verdana' !important;\r\n    margin-top: 50px;\r\n}\r\n\r\n.ins-slider-header {\r\n    color: #585858;\r\n    font-size: 27px;\r\n    font-weight: 300;\r\n    z-index: 1;\r\n    position: relative;\r\n    font-family: 'Montserrat', sans-serif;\r\n    width: 100%;\r\n    font-weight: 600;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.ins-slider-wrapper {\r\n    display: block;\r\n    height: 100%;\r\n}\r\n\r\n.ins-slider-item {\r\n    display: block;\r\n    position: relative;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    padding: 15px;\r\n    border: 1px #cecaca solid;\r\n    box-sizing: border-box;\r\n    margin-right: 20px;\r\n    margin-bottom: 20px;\r\n    width: calc(25% - 15px);\r\n    background-color: #FFF;\r\n    float: left;\r\n}\r\n\r\n.ins-slider-item:hover {\r\n    border: 1px solid #cecaca;\r\n    box-shadow: inset 0px 0px 0px 1px #cecaca;\r\n}\r\n\r\n.ins-slider-item>a {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 305px;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n}\r\n\r\n.ins-item-image {\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.ins-item-image img {\r\n    width: 100%;\r\n    object-fit: contain;\r\n}\r\n\r\n.ins-item-name {\r\n    width: 100%;\r\n    \/* flex: 0.3; *\/\r\n    align-items: center;\r\n    text-align: left !important;\r\n    font-size: 13px;\r\n    font-weight: lighter;\r\n    margin-top: 15px;\r\n    line-height: 18px;\r\n    min-height: 60px;\r\n    max-height: 60px;\r\n}\r\n\r\n.ins-item-price {\r\n    width: 100%;\r\n    display: flex;\r\n    line-height: 1;\r\n    font-weight: lighter;\r\n    font-size: 14px !important;\r\n    font-family: verdana;\r\n}\r\n\r\n.ins-item-price.line {\r\n    color: black;\r\n    font-size: 17px;\r\n    font-weight: bold;\r\n}\r\n\r\n.ins-item-price.sale {\r\n    color: #e03601;\r\n}\r\n\r\n.ins-add-to-cart:hover {\r\n    background-color: #fd6802 !important;\r\n}\r\n\r\n.ins-cart-buttons {\r\n    z-index: 9;\r\n    display: none;\r\n    width: calc(100% + 2px);\r\n    padding-left: 15px;\r\n    font-size: 14px !important;\r\n    font-family: Verdana, tahoma, sans-serif;\r\n    position: absolute;\r\n    bottom: -98px;\r\n    left: -1px;\r\n    box-sizing: border-box;\r\n    background-color: #FFF;\r\n    border: 1px #cecaca solid;\r\n    border-top: 0;\r\n}\r\n\r\n.ins-recommendation-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.ins-item-name-bold {\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    margin-right: 3px;\r\n    color: #000000;\r\n}\r\n\r\n.ins-item-image img {\r\n    max-width: 100%;\r\n}\r\n\r\n.ins-slider-item:hover .ins-cart-buttons {\r\n    display: block;\r\n    box-shadow: inset 0px -1px 0px 1px #cecaca;\r\n    border-bottom: 0;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n.ins-cart-button {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 150px;\r\n    height: 30px;\r\n    padding: 0;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    line-height: 30px;\r\n    padding: 0px 0px 0px 10px;\r\n}\r\n\r\n.ins-cart-favori-btn:hover {\r\n    color: #445159;\r\n    background: #c9cccf\r\n}\r\n\r\n.ins-add-to-cart img {\r\n    width: 20px !important;\r\n    height: 16px;\r\n}\r\n\r\n.ins-cart-favori-btn img {\r\n    max-width: 16px !important;\r\n    max-height: 16px !important;\r\n}\r\n\r\n.ins-add-to-cart {\r\n    background: #004cbc;\r\n    color: white;\r\n}\r\n\r\n.ins-cart-favori-btn {\r\n    background: #d7d7d7;\r\n    color: #848b8f;\r\n    font-size: 13px;\r\n}\r\n\r\n.ins-cart-button img {\r\n    margin-right: 5px;\r\n}\r\n\r\n.ins-recommendation-header p {\r\n    color: #000;\r\n    font-size: 20px;\r\n    font-weight: 100;\r\n    background: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    line-height: 36px;\r\n    margin: 0;\r\n}\r\n\r\n.ins-empty-cart-header {\r\n    color: #000;\r\n    font-size: 22px;\r\n    background: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    line-height: 36px;\r\n    margin: 0;\r\n    font-weight: bold;\r\n}\r\n\r\n.ins-slider-item .addToCartContent {\r\n    background: #ecedee;\r\n    width: calc(100% - 22px) !important;\r\n    height: auto !important;\r\n    position: absolute;\r\n    bottom: 2px;\r\n    left: 1px;\r\n    top: auto !important;\r\n    z-index: 1200;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent p {\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    margin: 10px 0 0;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent a {\r\n    color: #0066b3 !important;\r\n    padding: 0 !important;\r\n    float: none;\r\n    width: auto;\r\n    height: auto;\r\n    line-height: 14px;\r\n    display: inline-block;\r\n    margin-top: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small {\r\n    font-size: 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent.fav {\r\n    padding-bottom: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small a {\r\n    margin-top: 0;\r\n}\r\n\r\n.ins-slider-item .blockElement img {\r\n    width: 128px;\r\n    height: 128px;\r\n}\r\n\r\n.ins-slider-item .blockElement {\r\n    top: 100px !important;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.ins-slider-item:nth-child(4n) {\r\n    margin-right: 0px;\r\n}\r\n\r\n.ins-empty-cart {\r\n    text-align: center;\r\n}\r\n\r\np.ins-empty-cart-description {\r\n    color: #111;\r\n    font-family: Verdana;\r\n    font-size: 15px;\r\n    margin-top: 15px;\r\n}\r\n\r\n.ins-empty-cart {\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.ins-empty-cart-buttons {\r\n    margin-top: 45px;\r\n}\r\n\r\n.ins-empty-cart-buttons a {\r\n    display: inline-block;\r\n    align-items: center;\r\n    width: 150px;\r\n    height: 30px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    line-height: 30px;\r\n    background: #004cbc;\r\n    color: white;\r\n    text-align: center;\r\n    padding: 0 10px;\r\n    margin-right: 15px;\r\n    font-size: 15px;\r\n}\r\n\r\n.ins-empty-cart-buttons a:last-child {\r\n    margin-right: 0px;\r\n}\r\n\r\n.ins-empty-cart-buttons a:hover {\r\n    background-color: #fd6802 !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "170",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c272",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMFByb2R1Y3QlMjBQYWdlJTIwVFIlMjB2Mw==",
                "isActive": "1",
                "activeDateStart": "1540988580",
                "activeDateEnd": "1696508580",
                "locationData": false,
                "showIn": {
                    "trigger": [246],
                    "segment": [288]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\n    var variationId = spApi.userSegments[204] || 'Development';\n    var partnerId = 10002017;\n    var itemsPerSlide = 5;\n    \/\/ OPT-6365 START\n    var prependSelector = '.product-tab .adviced-product-title:first';\n    var basketImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/ik0oJ9iDQeCO3WuZuMgQ1540984791.png';\n    var favoriteImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/25k82xK4fliteBIJEtiB1540984819.png';\n    \/\/ OPT-6365 START\n    var categories = spApi.getProductCategories();\n    var mainCategory = encodeURI(categories[0] || '');\n    var subCategory = encodeURI(categories[1] || '');\n    var productId = spApi.getCurrentProduct().id;\n\n    var endPoint = 'https:\/\/predictive.api.sociaplus.com\/recommendation\/product?itemid=' + productId +\n        '&category=' + mainCategory + '&subcategory=' + subCategory + '&partnerid=' + partnerId +\n        '&lang=tr_TR&with_item_details=1&size=10';\n\n    self.construct = function () {\n        self.destruct();\n\n        self.getData(function () {\n            self.initialize();\n            self.setEvents();\n        });\n    };\n\n    self.getData = function (callback) {\n        sQuery.ajax({\n            url: sQuery.trim(endPoint),\n            success: function (response) {\n                self.buildStructure(self.shuffle(response));\n\n                callback();\n            }\n        });\n    };\n\n    self.shuffle = function (o) {\n        for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\n        return o;\n    };\n\n    self.buildStructure = function (data) {\n        if (data.length === 0) {\n            return;\n        }\n\n        \/\/ OPT-6365 START\n        var html = '<div class=\"ins-slider-container-' + variationId + '\">' +\n            '<div class=\"ins-prev-' + variationId + '\"><\/div>' +\n            '<div class=\"ins-next-' + variationId + '\"><\/div>' +\n            '<div class=\"ins-recommendation-container\">' +\n            '<div class=\"ins-recommendation-header\">' +\n            '<h4><span>Bu \u00fcr\u00fcnleri de sevebilirsiniz...<\/span><\/h4>' +\n            '<\/div>' +\n            '<div class=\"ins-slider-wrapper\">' +\n            self.populateProducts(data) +\n            '<\/div>' +\n            '<\/div>' +\n            '<\/div>';\n        \/\/ OPT-6365 END\n\n        sQuery(html).insertBefore(prependSelector);\n\n        sQuery('.ins-slider-item').each(function () {\n            if (sQuery('.ins-item-price:not(.sale)', this).text() === sQuery('.ins-item-price.sale', this).text()) {\n                sQuery('.ins-item-price.sale', this).hide();\n            } else {\n                sQuery('.ins-item-price:not(.sale)', this).addClass('line');\n            }\n        });\n    };\n\n    self.adjustPrice = function (price) {\n        var length = price.length;\n        var indexOfComma = price.indexOf('.');\n        var i = length;\n\n        if (indexOfComma !== -1) {\n            price = price.replace('.', ',');\n            i = indexOfComma;\n        }\n\n        var arrayPrice = price.split('');\n        var counter = 0;\n\n        for (var j = i; j > 0; j--) {\n            if (counter === 3) {\n                arrayPrice.splice(j, 0, '.');\n                counter = 0;\n            }\n\n            counter++;\n        }\n\n        return arrayPrice.join('');\n    };\n\n    \/\/ OPT-6365 START\n    self.populateProducts = function (data) {\n        var productsHtml = '';\n\n        sQuery(data).each(function () {\n            var checkConditions = this.item_url.indexOf('yil-boyu-indirim') === -1 &&\n                this.item_url.indexOf('yaz-urunleri') === -1 &&\n                this.item_url.indexOf('is-yeriniz-icin') === -1 &&\n                this.item_url.indexOf('isvec-gida-marketi') === -1;\n\n            if (checkConditions) {\n                var newTurkishLira = this.sale_price.split(' ')[0];\n                var newTurkishLiraWithDot = self.adjustPrice(newTurkishLira);\n                var productNameArray = this.item_name.split(' ') || '';\n                var productUrl = this.item_url.replace('http:\/\/', 'https:\/\/') || '';\n                var productImageUrl = this.item_image.replace('http:\/\/', 'https:\/\/') || '';\n\n                productsHtml += '<div class=\"ins-slider-item\">' +\n                    '<a class=\"sp-custom-' + variationId + '-1\" href=\"' + productUrl + '\"><\/a>' +\n                    '<div class=\"ins-item-image\">' +\n                    '<img src=\"' + productImageUrl + '\">' +\n                    '<\/div>' +\n                    '<div class=\"ins-item-name\"><span class=\"ins-item-name-bold\">' +\n                    decodeURIComponent(productNameArray.splice(0, 1)) + '<\/span>' +\n                    decodeURIComponent(productNameArray.splice(0, productNameArray.length).join(' ')) + '<\/div>' +\n                    '<div class=\"ins-item-price\">' + newTurkishLiraWithDot + ' <span class=\"tl\"><i>t<\/i><\/span><\/div>' +\n                    '<div class=\"ins-cart-buttons\">' +\n                    '<div class=\"ins-add-to-cart first sp-custom-' + variationId + '-2\" ' +\n                    'onclick=\"shopping.addCartItem(\\'' + this.item_id + '\\', this);\">' +\n                    '<img src=\"' + basketImageUrl + '\" class=\"ins-cart-sepet-icon\"\/><\/div>' +\n                    '<div class=\"ins-cart-favori-btn sp-custom-' + variationId + '-3\" ' +\n                    'onclick=\"user.favorite.addItem(\\'' + this.item_id + '\\', this);\">' +\n                    '<img src=\"' + favoriteImageUrl + '\"\/><\/div>' +\n                    '<\/div>' +\n                    '<\/div>';\n            }\n        });\n\n        return productsHtml;\n    };\n\n    self.initialize = function () {\n        $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').owlCarousel({\n            nav: true,\n            items: itemsPerSlide,\n            loop: true\n        });\n    };\n\n    self.setEvents = function () {\n        $('.ins-next-' + variationId).click(function () {\n            $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').trigger('next.owl.carousel');\n        });\n\n        $('.ins-prev-' + variationId).click(function () {\n            $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').trigger('prev.owl.carousel', [300]);\n        });\n    };\n    \/\/ OPT-6365 END\n\n    self.destruct = function () {\n        sQuery('.ins-slider-container-' + variationId).remove();\n    };\n\n    self.construct();\n})({});\n\nsQuery('.adviced-product-title:first').attr('style', 'display:none');\nsQuery('.adviceList:first').attr('style', 'display:none');",
                "customCss": ".ins-recommendation-container {\r\n    position: relative;\r\n    display: flex;\r\n    height: 450px;\r\n    width: 1055px;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    margin: 20px 0px;\r\n    left: 10px;\r\n}\r\n\r\n.ins-slider-header {\r\n    color: #585858;\r\n    font-size: 27px;\r\n    font-weight: 300;\r\n    z-index: 1;\r\n    position: relative;\r\n    font-family: 'Montserrat', sans-serif;\r\n    width: 100%;\r\n    font-weight: 600;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.ins-recommendation-header span {\r\n    color: #262626;\r\n    font-size: 22px;\r\n    background: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    float: none;\r\n}\r\n\r\n.ins-slider-wrapper {\r\n    display: flex;\r\n    height: 100%;\r\n    transition: all .5s ease;\r\n}\r\n\r\n.ins-slider-item {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    height: 284px;\r\n    padding: 10px;\r\n    transition: all .3s ease;\r\n    border: 1px rgba(0, 0, 0, 0) solid;\r\n    box-sizing: border-box;\r\n    width: 190px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 29px;\r\n}\r\n\r\n.ins-slider-item:hover {\r\n    border: 1px solid #e64100;\r\n}\r\n\r\n.ins-item-image {\r\n    display: flex;\r\n    height: 140px;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.ins-item-image img {\r\n    width: 100%;\r\n    object-fit: contain;\r\n    height: 100%;\r\n}\r\n\r\n.ins-item-name {\r\n    width: 100%;\r\n    flex: 0.3;\r\n    align-items: center;\r\n    text-align: left !important;\r\n    font-size: 13px;\r\n    font-weight: lighter;\r\n    margin-top: 15px;\r\n    padding-left: 10px;\r\n    line-height: 18px;\r\n    margin-bottom: 15px;\r\n    min-height: 72px;\r\n    max-height: 72px;\r\n    overflow: hidden;\r\n}\r\n\r\n.ins-item-name:hover {\r\n    color: #445159;\r\n}\r\n\r\n.ins-item-price {\r\n    width: 100%;\r\n    display: flex;\r\n    line-height: 1;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    margin-left: 10px;\r\n}\r\n\r\n.ins-item-price.line {\r\n    color: black;\r\n    font-size: 17px;\r\n    font-weight: bold;\r\n}\r\n\r\n.ins-item-price.sale {\r\n    color: #e03601;\r\n}\r\n\r\n.ins-add-to-cart {\r\n    width: 70px;\r\n    height: 30px;\r\n    text-align: center;\r\n    display: flex;\r\n    background: #004cbc;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    float: left;\r\n}\r\n\r\n.ins-add-to-cart:hover {\r\n    background-color: #e64100 !important;\r\n}\r\n\r\n.ins-cart-buttons {\r\n    z-index: 99999999;\r\n    margin-top: 10px !important;\r\n    display: block !important;\r\n    width: 100%;\r\n    padding-left: 10px;\r\n}\r\n\r\n.ins-cart-sepet-icon {\r\n    width: 20px !important;\r\n    height: 16px !important;\r\n}\r\n\r\n.ins-cart-favori-btn {\r\n    background: #ecedee;\r\n    margin-left: 10px;\r\n    color: #848b8f;\r\n    display: inline-block;\r\n    align-items: center;\r\n    width: 50px;\r\n    height: 30px;\r\n    padding: 0 10px;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    float: left;\r\n    margin-top: 0px;\r\n}\r\n\r\n\r\n.ins-cart-favori-btn:hover {\r\n    color: #445159;\r\n    background: #c9cccf url(..\/images\/icon-add-to-favorites-dark.png) 10px center no-repeat !important;\r\n}\r\n\r\n.ins-slider-item {\r\n    width: 183px !important;\r\n    height: auto;\r\n}\r\n\r\n.ins-recommendation-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.ins-prev-c272 {\r\n    position: relative;\r\n    float: left;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: -20px !important;\r\n    transform: rotateZ(-135deg) !important;\r\n    top: 200px;\r\n    z-index: 99999999 !important;\r\n}\r\n\r\n.ins-next-c272 {\r\n    position: relative;\r\n    float: right;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: 20px !important;\r\n    transform: rotateZ(45deg) !important;\r\n    top: 200px;\r\n    z-index: 9999 !important;\r\n}\r\n\r\n.ins-item-name-bold {\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    margin-right: 3px;\r\n    color: #000000;\r\n}\r\n\r\n.ins-slider-container-c272 .adviced-product-title {\r\n    display: none !important;\r\n}\r\n\r\n.ins-cart-favori-btn img {\r\n    margin: auto !important;\r\n    margin-top: 7px !important;\r\n    width: 16px !important;\r\n    height: 16px !important;\r\n}\r\n\r\n.ins-slider-container-c272 {\r\n    font-family: Verdana, tahoma, sans-serif;\r\n}\r\n\r\n.ins-slider-container-c272 .owl-carousel img {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.ins-slider-item .addToCartContent {\r\n    background: #ecedee;\r\n    width: calc(100% - 20px) !important;\r\n    height: auto !important;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    top: auto !important;\r\n    z-index: 1200;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent p {\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    margin: 10px 0 0;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent a {\r\n    color: #0066b3!important;\r\n    padding: 0!important;\r\n    float: none;\r\n    width: auto;\r\n    height: auto;\r\n    line-height: 14px;\r\n    display: inline-block;\r\n    margin-top: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small {\r\n    font-size: 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent.fav {\r\n    padding-bottom: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small a {\r\n    margin-top: 0;\r\n}\r\n\r\n.ins-slider-container-c272 .owl-stage-outer {\r\n    padding-left: 6px;\r\n}\r\n\r\n.ins-slider-item > a {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 245px;\r\n    z-index: 2;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "204",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c274",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMFNvbiUyMENhdGVnb3J5JTIwUGFnZSUyMFRSJTIwdjM=",
                "isActive": "1",
                "activeDateStart": "1540991820",
                "activeDateEnd": "1699881420",
                "locationData": false,
                "showIn": {
                    "trigger": [248],
                    "segment": [287]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\n    var variationId = spApi.userSegments[205] || 'Development';\n    var partnerId = 10002017;\n    var itemsPerSlide = 4;\n    \/\/ OPT-6365 START\n    var prependSelector = '.product-list:first';\n    var basketImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/ik0oJ9iDQeCO3WuZuMgQ1540984791.png';\n    var favoriteImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/25k82xK4fliteBIJEtiB1540984819.png';\n    \/\/ OPT-6365 START\n    var categories = spApi.getCategories();\n    var mainCategory = encodeURI(categories[0] || '');\n    var subCategory = encodeURI(categories[1] || '');\n\n    var endPoint = ' https:\/\/predictive.api.sociaplus.com\/most\/viewed\/product\/' +\n        mainCategory + '\/' + subCategory +\n        '?partnerid=' + partnerId + '&lang=tr_TR&with_item_details=1&size=10';\n\n    self.construct = function () {\n        self.destruct();\n\n        self.getData(function () {\n            self.initialize();\n            self.setEvents();\n        });\n    };\n\n    self.getData = function (callback) {\n        sQuery.ajax({\n            url: sQuery.trim(endPoint),\n            success: function (response) {\n                self.buildStructure(self.shuffle(response));\n\n                callback();\n            }\n        });\n    };\n\n    self.shuffle = function (o) {\n        for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\n        return o;\n    };\n\n    self.buildStructure = function (data) {\n        if (data.length === 0) {\n            return;\n        }\n\n        \/\/ OPT-6365 START\n        var html = '<div class=\"ins-slider-container-' + variationId + '\">' +\n            '<div class=\"ins-prev-' + variationId + '\"><\/div>' +\n            '<div class=\"ins-next-' + variationId + '\"><\/div>' +\n            '<div class=\"ins-recommendation-container\">' +\n            '<div class=\"ins-recommendation-header\">' +\n            '<p>En \u00e7ok g\u00f6r\u00fcnt\u00fclenenler<\/p>' +\n            '<\/div>' +\n            '<div class=\"ins-slider-wrapper\">' +\n            self.populateProducts(data) +\n            '<\/div>' +\n            '<\/div>' +\n            '<p class=\"ins-after-recommendation-header\">T\u00fcm \u00dcr\u00fcnler<\/p>' +\n\/*            '<hr class=\"line\">' +     *\/\n            '<\/div>';\n        \/\/ OPT-6365 END\n\n        sQuery(prependSelector).prepend(html);\n\n        sQuery('.ins-slider-item').each(function () {\n            if (sQuery('.ins-item-price:not(.sale)', this).text() === sQuery('.ins-item-price.sale', this).text()) {\n                sQuery('.ins-item-price.sale', this).hide();\n            } else {\n                sQuery('.ins-item-price:not(.sale)', this).addClass('line');\n            }\n        });\n    };\n\n    self.adjustPrice = function (price) {\n        var length = price.length;\n        var indexOfComma = price.indexOf('.');\n        var i = length;\n\n        if (indexOfComma !== -1) {\n            price = price.replace('.', ',');\n            i = indexOfComma;\n        }\n\n        var arrayPrice = price.split('');\n        var counter = 0;\n\n        for (var j = i; j > 0; j--) {\n            if (counter === 3) {\n                arrayPrice.splice(j, 0, '.');\n                counter = 0;\n            }\n\n            counter++;\n        }\n\n        return arrayPrice.join('');\n    };\n\n    \/\/ OPT-6365 START\n    self.populateProducts = function (data) {\n        var productsHtml = '';\n\n        sQuery(data).each(function () {\n            var checkConditions = this.item_url.indexOf('yil-boyu-indirim') === -1 &&\n                this.item_url.indexOf('yaz-urunleri') === -1 &&\n                this.item_url.indexOf('is-yeriniz-icin') === -1 &&\n                this.item_url.indexOf('isvec-gida-marketi') === -1;\n\n            if (checkConditions) {\n                var newTurkishLira = this.sale_price.split(' ')[0];\n                var newTurkishLiraWithDot = self.adjustPrice(newTurkishLira);\n                var productNameArray = this.item_name.split(' ') || '';\n                var productUrl = this.item_url.replace('http:\/\/', 'https:\/\/') || '';\n                var productImageUrl = this.item_image.replace('http:\/\/', 'https:\/\/') || '';\n\n                productsHtml += '<div class=\"ins-slider-item\">' +\n                    '<a class=\"sp-custom-' + variationId + '-1\" href=\"' + productUrl + '\"><\/a>' +\n                    '<div class=\"ins-item-image\">' +\n                    '<img src=\"' + productImageUrl + '\">' +\n                    '<\/div>' +\n                    '<div class=\"ins-item-name\"><span class=\"ins-item-name-bold\">' +\n                    decodeURIComponent(productNameArray.splice(0, 1)) + '<\/span>' +\n                    decodeURIComponent(productNameArray.splice(0, productNameArray.length).join(' ')) + '<\/div>' +\n                    '<div class=\"ins-item-price\">' + newTurkishLiraWithDot + ' <span class=\"tl\"><i>t<\/i><\/span><\/div>' +\n                    '<div class=\"ins-cart-buttons\">' +\n                    '<div class=\"ins-cart-button ins-add-to-cart first sp-custom-' + variationId + '-2\" ' +\n                    'onclick=\"shopping.addCartItem(\\'' + this.item_id + '\\', this);\">' +\n                    '<img src=\"' + basketImageUrl + '\" class=\"ins-cart-sepet-icon\"\/> <span>Sepete Ekle<\/span><\/div>' +\n                    '<div class=\"ins-cart-button ins-cart-favori-btn sp-custom-' + variationId + '-3\" ' +\n                    'onclick=\"user.favorite.addItem(\\'' + this.item_id + '\\', this);\">' +\n                    '<img src=\"' + favoriteImageUrl + '\"\/> <span>Favorilere Ekle<\/span><\/div>' +\n                    '<\/div>' +\n                    '<\/div>';\n            }\n        });\n\n        return productsHtml;\n    };\n\n    self.initialize = function () {\n        $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').owlCarousel({\n            nav: true,\n            items: itemsPerSlide,\n            loop: true\n        });\n    };\n\n    self.setEvents = function () {\n        $('.ins-next-' + variationId).click(function () {\n            $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').trigger('next.owl.carousel');\n        });\n\n        $('.ins-prev-' + variationId).click(function () {\n            $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').trigger('prev.owl.carousel', [300]);\n        });\n    };\n    \/\/ OPT-6365 END\n\n    self.destruct = function () {\n        sQuery('.ins-slider-container-' + variationId).remove();\n    };\n\n    self.construct();\n})({});",
                "customCss": ".ins-recommendation-container {\r\n    position: relative;\r\n    display: flex;\r\n    height: 480px;\r\n    width: 1055px;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    margin: 20px 0px;\r\n    margin-bottom: 0px;\r\n    left: 18px;\r\n    font-family: \"Verdana\" !important;\r\n}\r\n\r\n.ins-slider-header {\r\n    color: #585858;\r\n    font-size: 27px;\r\n    font-weight: 300;\r\n    z-index: 1;\r\n    position: relative;\r\n    font-family: 'Montserrat', sans-serif;\r\n    width: 100%;\r\n    font-weight: 600;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.ins-slider-wrapper {\r\n    display: flex;\r\n    height: 100%;\r\n    transition: all .5s ease;\r\n    z-index: 1;\r\n}\r\n\r\n.ins-slider-item {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    padding: 10px;\r\n    border: 1px #cecaca solid;\r\n    box-sizing: border-box;\r\n    width: 190px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 21px;\r\n    width: 248px !important;\r\n    background-color: #FFF;\r\n}\r\n\r\n.ins-slider-item:hover {\r\n    border: 1px solid #cecaca;\r\n    box-shadow: inset 0px 0px 0px 1px #cecaca;\r\n}\r\n\r\n.ins-slider-item>a {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 305px;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n}\r\n\r\n.ins-item-image {\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.ins-item-image img {\r\n    width: 100%;\r\n    object-fit: contain;\r\n}\r\n\r\n.ins-item-name {\r\n    width: 100%;\r\n    flex: 0.3;\r\n    align-items: center;\r\n    text-align: left !important;\r\n    font-size: 13px;\r\n    font-weight: lighter;\r\n    margin-top: 15px;\r\n    padding-left: 10px;\r\n    line-height: 18px;\r\n    min-height: 60px;\r\n    max-height: 60px;\r\n}\r\n\r\n.ins-item-price {\r\n    width: 100%;\r\n    display: flex;\r\n    line-height: 1;\r\n    font-weight: lighter;\r\n    font-size: 14px !important;\r\n    font-family: verdana;\r\n    margin-left: 10px;\r\n}\r\n\r\n.ins-item-price.line {\r\n    color: black;\r\n    font-size: 17px;\r\n    font-weight: bold;\r\n}\r\n\r\n.ins-item-price.sale {\r\n    color: #e03601;\r\n}\r\n\r\n.ins-add-to-cart:hover {\r\n    background-color: #fd6802 !important;\r\n}\r\n\r\n.ins-cart-buttons {\r\n    z-index: 9;\r\n    margin-top: 10px !important;\r\n    display: none;\r\n    width: 100%;\r\n    padding-left: 10px;\r\n    font-size: 14px !important;\r\n    font-family: Verdana, tahoma, sans-serif;\r\n}\r\n\r\n.ins-recommendation-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.ins-prev-1917 {\r\n    position: relative;\r\n    float: left;\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: -29px !important;\r\n    transform: rotateZ(-135deg) !important;\r\n    top: 240px;\r\n    z-index: 99999999 !important;\r\n}\r\n\r\n.ins-next-1917 {\r\n    position: relative;\r\n    float: right;\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: 20px !important;\r\n    transform: rotateZ(45deg) !important;\r\n    top: 240px;\r\n    z-index: 9999 !important;\r\n}\r\n\r\n.ins-item-name-bold {\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    margin-right: 3px;\r\n    color: #000000;\r\n}\r\n\r\n.ins-item-image img {\r\n    max-width: 100%;\r\n}\r\n\r\n.ins-slider-item:hover .ins-cart-buttons {\r\n    display: block;\r\n}\r\n\r\n.ins-cart-button {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 150px;\r\n    height: 30px;\r\n    padding: 0;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    line-height: 30px;\r\n    padding: 0px 0px 0px 10px;\r\n}\r\n\r\n.ins-cart-favori-btn:hover {\r\n    color: #445159;\r\n    background: #c9cccf\r\n}\r\n\r\n.ins-add-to-cart img {\r\n    width: 20px !important;\r\n    height: 16px;\r\n}\r\n\r\n.ins-cart-favori-btn img {\r\n    max-width: 16px !important;\r\n    max-height: 16px !important;\r\n}\r\n\r\n.ins-add-to-cart {\r\n    background: #004cbc;\r\n    color: white;\r\n}\r\n\r\n.ins-cart-favori-btn {\r\n    background: #d7d7d7;\r\n    color: #848b8f;\r\n    font-size: 13px;\r\n}\r\n\r\n.ins-cart-button img {\r\n    margin-right: 5px;\r\n}\r\n\r\n.ins-prev-c274 {\r\n    position: relative;\r\n    float: left;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: -5px !important;\r\n    transform: rotateZ(-135deg) !important;\r\n    top: 200px;\r\n    z-index: 99999999 !important;\r\n}\r\n\r\n.ins-next-c274 {\r\n    position: relative;\r\n    float: right;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: 5px !important;\r\n    transform: rotateZ(45deg) !important;\r\n    top: 200px;\r\n    z-index: 9999 !important;\r\n}\r\n\r\n.ins-slider-wrapper .owl-stage-outer {\r\n    padding-left: 2px;\r\n}\r\n\r\n.ins-recommendation-header p {\r\n    color: #262626;\r\n    font-size: 22px;\r\n    background: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    font-weight: bold;\r\n    line-height: 36px;\r\n    margin: 0;\r\n}\r\n\r\n.ins-slider-container-c274 hr {\r\n    position: relative;\r\n    bottom: 39px;\r\n    left: 0;\r\n}\r\n\r\n.ins-slider-item .addToCartContent {\r\n    background: #ecedee;\r\n    width: calc(100% - 20px) !important;\r\n    height: auto !important;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    top: auto !important;\r\n    z-index: 1200;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent p {\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    margin: 10px 0 0;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent a {\r\n    color: #0066b3 !important;\r\n    padding: 0 !important;\r\n    float: none;\r\n    width: auto;\r\n    height: auto;\r\n    line-height: 14px;\r\n    display: inline-block;\r\n    margin-top: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small {\r\n    font-size: 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent.fav {\r\n    padding-bottom: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small a {\r\n    margin-top: 0;\r\n}\r\n\r\n.ins-slider-item .blockElement img {\r\n    width: 128px;\r\n    height: 128px;\r\n}\r\n\r\n.ins-slider-item .blockElement {\r\n    top: 100px !important;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.backdrop {\r\n    z-index: 2;\r\n}\r\n\r\np.ins-after-recommendation-header {\r\n    color: #262626;\r\n    font-size: 22px;\r\n    background: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    margin: 0px 10px;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "205",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c279",
                "campName": "|-x-|V2ViJTIwUHVzaCUyMCVDNCVCMHppbmxpJTIwUGFzaWYlMjBNb2JpbGU=",
                "isActive": "1",
                "activeDateStart": "1541415120",
                "activeDateEnd": "1670496720",
                "locationData": false,
                "showIn": {
                    "trigger": [251],
                    "segment": [253]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "1==1;",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "8640",
                "cookieTime": "360",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "208",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c280",
                "campName": "|-x-|V2ViJTIwUHVzaCUyMCVDNCVCMHppbmxpJTIwUGFzaWYlMjBEZXNrdG9w",
                "isActive": "1",
                "activeDateStart": "1541415120",
                "activeDateEnd": "1669891920",
                "locationData": false,
                "showIn": {
                    "trigger": [252],
                    "segment": [254]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "1==1;",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "8640",
                "cookieTime": "360",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "209",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c286",
                "campName": "|-x-|JUM0JUIwbmRpcmltJTIwQmFkZ2UlMjAlQzMlOUNyJUMzJUJDbiUyMERldGF5JTIwdjI=",
                "isActive": "1",
                "activeDateStart": "1542369480",
                "activeDateEnd": "1671191880",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [271]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function () {\r\n    var self = this;\r\n\r\n    self.product = spApi.getCurrentProduct();\r\n\r\n    self.construct = function () {\r\n        self.reset();\r\n\r\n        sQuery('#ctl00_ContentPlaceHolder1_pnlCatalogProductBox .price.old').after(self.buildLabel());\r\n\r\n        self.setPlacementOfDiscountHTML();\r\n    };\r\n\r\n    self.reset = function () {\r\n        sQuery('.ins-badge').remove();\r\n    };\r\n\r\n    self.buildLabel = function () {\r\n        var labelHtml = '<span class=\"ins-badge\">' +\r\n            '<span class=\"ins-sub-badge\">' +\r\n            '<span class=\"ins-percentage\">% ' +\r\n            (self.calculateDiscountRatio(product) * 100).toFixed(0) +\r\n            '<\/span>' +\r\n            '<span class=\"ins-discount\">indirim<\/span>' +\r\n            '<\/span>' +\r\n            '<\/span>';\r\n\r\n        return labelHtml;\r\n    };\r\n\r\n    self.calculateDiscountRatio = function (product) {\r\n        var discountRatio = 0;\r\n\r\n        if (product.price > 0 && product.originalPrice > 0) {\r\n            discountRatio = 1 - (product.price \/ product.originalPrice);\r\n        }\r\n\r\n        return discountRatio;\r\n    };\r\n    \/\/ OPT-8209 starts\r\n    self.setPlacementOfDiscountHTML = function () {\r\n    \tvar marginLeft = 15;\r\n        var productInfoArea = sQuery('#ctl00_ContentPlaceHolder1_pnlCatalogProductBox');\r\n        var oldPriceElement = sQuery('.price.old', productInfoArea);\r\n        var priceElements = sQuery('.price.cf > span', productInfoArea);\r\n        var oldPriceWidth = oldPriceElement.outerWidth(true) || 0;\r\n        var priceWidth = 0;\r\n\r\n        priceElements.each(function (index, element) {\r\n            priceWidth += sQuery(element).outerWidth(true) || 0;\r\n        });\r\n\r\n        marginLeft += oldPriceWidth > priceWidth ? 0 : priceWidth - oldPriceWidth;\r\n\r\n        sQuery('.product-info .ins-badge').css('margin-left', marginLeft);\r\n    }\r\n    \/\/ OPT-8209 ends\r\n    self.construct();\r\n})({});\r\n\r\nsQuery('.addToBasket.addToCart:visible').addClass('sp-custom-c286');",
                "customCss": ".ins-badge {\r\n    position: relative;\r\n    display: inline-block;\r\n    width: 100px;\r\n    background: red;\r\n    margin-top: -20px;\r\n\/*    margin-left: 30px;\t*\/\r\n    margin-left: 100px;\r\n    top: 33px;\r\n}\r\n\r\n.ins-sub-badge {\r\n    border: 1.3px dashed #fff;\r\n    background: red;\r\n    margin: 2%;\r\n}\r\n\r\n.ins-badge span {\r\n    position: relative;\r\n    display: block;\r\n    color: white;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    line-height: 1.4;\r\n    font-size: 25px;\r\n}\r\n\r\n.ins-discount {\r\n    font-size: 20px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "219",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c299",
                "campName": "|-x-|S29udHJvbCUyMEdydWJ1JTIwLSUyMCVDNCVCMG5kaXJpbSUyMEJhZGdlJTIwJUMzJTlDciVDMyVCQ24lMjBEZXRheSUyMHYy",
                "isActive": "1",
                "activeDateStart": "1542369480",
                "activeDateEnd": "1671191880",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [271]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.addToBasket.addToCart:visible').addClass('sp-custom-c299');",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "219",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c296",
                "campName": "|-x-|U3Blc2lmaWslMjAlQzMlOUNyJUMzJUJDbiUyMFByb2dyZXNzJTIwLSUyMERlc2t0b3A=",
                "isActive": "1",
                "activeDateStart": "1542798780",
                "activeDateEnd": "1891336380",
                "locationData": false,
                "showIn": {
                    "trigger": [276],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function(self) {\n    \/\/OPT-7133 START\n    var cartAmount = parseFloat((spApi.storageData('ins-array-product-total-cart') || 0));\n    var defaultLimit = 75;\n    var updatedLimit = parseFloat(sQuery.cookie('cart-amount-updated')) || 75;\n    var newLimitRatio = 0;\n\n    if (cartAmount >= updatedLimit) {\n        newLimitRatio = parseFloat((cartAmount \/ defaultLimit).toFixed());\n        updatedLimit = newLimitRatio * defaultLimit;\n        \n        if (cartAmount >= updatedLimit) {\n            updatedLimit = (newLimitRatio + 1) * defaultLimit;\n        }\n        \n        sQuery.cookie('cart-amount-updated', updatedLimit);\n    }\n\n    self.totalCartAmount = cartAmount; \n    self.limitOfCampPrice = updatedLimit || 0;\n    \/\/OPT-7133 END\n\n    self.animationCssCreate = function(currentWidth, nextWidth) {\n        return '<style>@keyframes progress {' +\n            'from {' +\n            'width: ' + currentWidth + ';' +\n            '} to {' +\n            'width: ' + nextWidth + '%;' +\n            '}' +\n            '}<\/style>';\n    };\n\n    self.buildHtml = function() {\n        var borderRadiusCss = self.totalCartAmount >= 50 ? borderRadiusCss = 'border-top-right-radius: 25px;border-bottom-right-radius: 25px;' : '';\n        var percentageCalculation = self.totalCartAmount * 100 \/ self.limitOfCampPrice;\n        \/\/SD-43179 start\n        if(percentageCalculation > 100){\n            percentageCalculation = 100;\n        }\n        \/\/SD-43179 end\n        var currentWidth = sQuery('.ins-container .progress-bar.progress-bar-custom').css('width');\n        sQuery('.ins-container').remove();\n        \n        sQuery('header:first').after('<div class=\"ins-container\">' +\n            self.animationCssCreate(currentWidth, percentageCalculation) +\n            '<div class=\"ins-progress-bar-container\">' +\n            '<div class=\"ins-right\">' +\n            \/\/OPT-7133 START\n            '<span><strong>' + ((self.limitOfCampPrice - (self.totalCartAmount)).toFixed(2).replace('.', ',')) +\n            'TL\\'lik<\/strong> daha ev dekorasyonu \u00fcr\u00fcn\u00fc ekle 1 adet 25 TL\u2019lik Ev Dekorasyonu kuponu kazan<\/span>' +\n            \/\/OPT-7133 END\n            '<div class=\"progress\">' +\n            '<div class=\"progress-bar progress-bar-custom\" style=\"width: ' + (percentageCalculation + '').replace('-', '') + '%; ' + borderRadiusCss + '\">' +\n            '<span>&nbsp;<\/span>' +\n            '<\/div>' +\n            '<\/div>' +\n            '<\/div>' +\n            '<\/div>' +\n            '<\/div>');\n    };\n\n    self.init = function() {\n        self.buildHtml();\n    };\n\n    return self.init();\n})({});",
                "customCss": ".ins-container {\r\n    height: 70px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n\r\n.ins-extramini{\r\n\tfont-weight: bold;\r\n    color: #004cbc;\r\n}\r\n\r\n.ins-progress-bar-container {\r\n    max-width: 4000px;\r\n    width: 100%;\r\n    background-color: #F6F6F6;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-direction: row;\r\n    padding: 10px;\r\n    z-index: 9999!important;\r\n\r\n}\r\n\r\n.ins-letter-spacing {\r\n    letter-spacing: -1px;\r\n}\r\n\r\n.ins-right {\r\n    max-width: 1130px;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    font-size: 14px;\r\n    text-align: center;\r\n}\r\n\r\n.progress {\r\n    background: #EEEEEE;\r\n    border: 0px solid rgba(245, 245, 245, 1);\r\n    border-radius: 10px;\r\n    height: 20px;\r\n    -moz-box-shadow: inset 0 0 10px #b2afaf;\r\n    -webkit-box-shadow: inset 0 0 10px #b2afaf;\r\n    box-shadow: inset 0 0 10px #b2afaf;\r\n}\r\n\r\n.progress-bar-custom {\r\n    background: #004cbc;\r\n    height: 20px;\r\n    border: 0px solid rgba(245, 245, 245, 1);\r\n    border-top-left-radius: 25px;\r\n    border-bottom-left-radius: 25px;\r\n    max-width: 100%;\r\n    animation: progress 1.5s ease-in-out forwards;\r\n}\r\n\r\n.fixed-header\t\t{\r\n    top: 70px !important;\r\n}\r\n\r\n.fixed-header.fixed\t{\r\n    top: 0px !important;\r\n}\r\n\r\n.wrapper.wrap_12\t{\r\n    margin-top: 207px;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "224",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c301",
                "campName": "|-x-|U2VwZXQlMjBJY29udW5hJTIwVCVDNCVCMWtsYXklQzQlQjFuY2ElMjBZJUMzJUI2bmxlbmRpcm1l",
                "isActive": "1",
                "activeDateStart": "1543508820",
                "activeDateEnd": "1639067220",
                "locationData": false,
                "showIn": {
                    "trigger": [291],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.shop-basket a').addClass('sp-custom-c301');\r\nsQuery('.shop-basket a').attr('href', 'https:\/\/www.ikea.com.tr\/siparis-adim\/sepetim.aspx');",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "233",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c303",
                "campName": "|-x-|U2VhcmNoQmFyJTIwLSUyMEFsdCUyMC0lMjBIaXpsaSUyMEFyYW1h",
                "isActive": "1",
                "activeDateStart": "1544617920",
                "activeDateEnd": "1564669800",
                "locationData": false,
                "showIn": {
                    "trigger": [293]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "oldPosition": {
                        "top": "auto",
                        "left": "auto",
                        "width": "91px",
                        "height": "15px",
                        "position": "static",
                        "z-index": "auto",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "18px",
                        "left": "-94px",
                        "width": "91px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2F",
                    "type": "moveElement",
                    "selectorString": "header#top > div:eq(1) > div:eq(1) > a > p > span",
                    "id": "sp-custom-303-1545657095600",
                    "parentNodeSelector": "header#top > div:eq(1) > div:eq(1) > a > p"
                }, {
                    "oldPosition": {
                        "top": "18px",
                        "left": "-94px",
                        "width": "91px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "18px",
                        "left": "-97px",
                        "width": "91px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2F",
                    "type": "moveElement",
                    "selectorString": "header#top > div:eq(1) > div:eq(1) > a > p > span",
                    "id": "sp-custom-303-1545657317350",
                    "parentNodeSelector": "header#top > div:eq(1) > div:eq(1) > a > p"
                }, {
                    "oldPosition": {
                        "top": "18px",
                        "left": "-97px",
                        "width": "91px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "18px",
                        "left": "-97px",
                        "width": "91px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2F",
                    "type": "moveElement",
                    "selectorString": "header#top > div:eq(1) > div:eq(1) > a > p > span",
                    "id": "sp-custom-303-1545657326536",
                    "parentNodeSelector": "header#top > div:eq(1) > div:eq(1) > a > p"
                }, {
                    "oldPosition": {
                        "top": "18px",
                        "left": "-97px",
                        "width": "91px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "18px",
                        "left": "-95px",
                        "width": "91px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2F",
                    "type": "moveElement",
                    "selectorString": "header#top > div:eq(1) > div:eq(1) > a > p > span",
                    "id": "sp-custom-303-1545657535408",
                    "parentNodeSelector": "header#top > div:eq(1) > div:eq(1) > a > p"
                }],
                "customJs": "\/*Search Keyword & Link*\/\nvar keyword1 = '\u00e7al\u0131\u015fma masas\u0131';\nvar link1 = 'https:\/\/www.ikea.com.tr\/arama\/?k=\u00e7al\u0131\u015fma%20masas\u0131&spinsSearch';\nvar keyword2 = 'sehpa';\nvar link2 = 'https:\/\/www.ikea.com.tr\/arama\/?k=sehpa&spinsSearch';\nvar keyword3 = 'hal\u0131';\nvar link3 = 'https:\/\/www.ikea.com.tr\/arama\/?k=hal\u0131&spinsSearch';\nvar keyword4 = '\u00e7er\u00e7eve';\nvar link4 = 'https:\/\/www.ikea.com.tr\/arama\/?k=\u00e7er\u00e7eve&spinsSearch';\nvar keyword5 = 'mum';\nvar link5 = 'https:\/\/www.ikea.com.tr\/arama\/?k=mum&spinsSearch';\n\nvar html ='<div class=\"sp-Search\">Pop\u00fcler Aramalar : <a href=\"'+link1+'\" class=\"sp-custom-303-1\">'+keyword1+'<\/a><a href=\"'+link2+'\" class=\"sp-custom-303-2\">'+keyword2+'<\/a> <a href=\"'+link3+'\" class=\"sp-custom-303-3\">'+keyword3+'<\/a> <a href=\"'+link4+'\" class=\"sp-custom-303-4\">'+keyword4+'<\/a> <a href=\"'+link5+'\" class=\"sp-custom-303-5\">'+keyword5+'<\/a><\/div>'\n\nsQuery('.search').append(html)",
                "customCss": ".sp-Search {\r\n    font-size: 11px;\r\n    padding: 7px 0 0 0px;\r\n    font-weight: bold;\r\n    position: absolute;\r\n}\r\n\r\n.sp-Search a {\r\n    margin-right: 10px;\r\n    text-decoration: underline;\r\n    color: #7d7d7d;\r\n    font-family: Verdana,tahoma,sans-serif;\r\n    font: inherit;\r\n    font-weight: normal;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "239",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c317",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMDAlMjBBcmFtYSUyMFNvbnUlQzMlQTclMjB2Mw==",
                "isActive": "1",
                "activeDateStart": "1546381740",
                "activeDateEnd": "1644272940",
                "locationData": false,
                "showIn": {
                    "trigger": [302]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "(function (self) {\n    var variationId = spApi.userSegments[205] || 'Development';\n    var partnerId = 10002017;\n    var itemsPerSlide = 4;\n    \/\/ OPT-6365 START\n    var prependSelector = '.search-page-wrap';\n    var basketImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/ik0oJ9iDQeCO3WuZuMgQ1540984791.png';\n    var favoriteImageUrl = 'https:\/\/image.useinsider.com\/ikea\/c103\/25k82xK4fliteBIJEtiB1540984819.png';\n    \/\/ OPT-6365 START\n    var categories = spApi.getCategories();\n    var mainCategory = encodeURI(categories[0] || '');\n    var subCategory = encodeURI(categories[1] || '');\n\tvar userId = sQuery.cookie('spUID');\n\n    var endPoint = ' https:\/\/predictive.api.sociaplus.com\/recommendation\/user\/v2\/' +\n        userId + '?partnerid=' + partnerId + '&lang=tr_TR&with_item_details=1&size=10';\n\n    self.construct = function () {\n        self.destruct();\n\n        self.getData(function () {\n            self.initialize();\n            self.setEvents();\n        });\n    };\n\n    self.getData = function (callback) {\n        sQuery.ajax({\n            url: sQuery.trim(endPoint),\n            success: function (response) {\n                self.buildStructure(self.shuffle(response));\n\n                callback();\n            }\n        });\n    };\n\n    self.shuffle = function (o) {\n        for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n\n        return o;\n    };\n\n    self.buildStructure = function (data) {\n        if (data.length === 0) {\n            return;\n        }\n\n        \/\/ OPT-6365 START\n        var html = '<div class=\"ins-slider-container-' + variationId + '\">' +\n            '<div class=\"ins-prev-' + variationId + '\"><\/div>' +\n            '<div class=\"ins-next-' + variationId + '\"><\/div>' +\n            '<div class=\"ins-recommendation-container\">' +\n            '<div class=\"ins-recommendation-header\">' +\n            '<p>\u0130lginizi \u00c7ekebilecek \u00dcr\u00fcnler<\/p>' +\n            '<\/div>' +\n            '<div class=\"ins-slider-wrapper\">' +\n            self.populateProducts(data) +\n            '<\/div>' +\n            '<\/div>' +\n\/*            '<p class=\"ins-after-recommendation-header\">T\u00fcm \u00dcr\u00fcnler<\/p>' +\t\t*\/\n\/*            '<hr class=\"line\">' +\t\t*\/\n            '<\/div>';\n        \/\/ OPT-6365 END\n\n        sQuery(prependSelector).append(html);\n\n        sQuery('.ins-slider-item').each(function () {\n            if (sQuery('.ins-item-price:not(.sale)', this).text() === sQuery('.ins-item-price.sale', this).text()) {\n                sQuery('.ins-item-price.sale', this).hide();\n            } else {\n                sQuery('.ins-item-price:not(.sale)', this).addClass('line');\n            }\n        });\n    };\n\n    self.adjustPrice = function (price) {\n        var length = price.length;\n        var indexOfComma = price.indexOf('.');\n        var i = length;\n\n        if (indexOfComma !== -1) {\n            price = price.replace('.', ',');\n            i = indexOfComma;\n        }\n\n        var arrayPrice = price.split('');\n        var counter = 0;\n\n        for (var j = i; j > 0; j--) {\n            if (counter === 3) {\n                arrayPrice.splice(j, 0, '.');\n                counter = 0;\n            }\n\n            counter++;\n        }\n\n        return arrayPrice.join('');\n    };\n\n    \/\/ OPT-6365 START\n    self.populateProducts = function (data) {\n        var productsHtml = '';\n\n        sQuery(data).each(function () {\n            var checkConditions = this.item_url.indexOf('yil-boyu-indirim') === -1 &&\n                this.item_url.indexOf('yaz-urunleri') === -1 &&\n                this.item_url.indexOf('is-yeriniz-icin') === -1 &&\n                this.item_url.indexOf('isvec-gida-marketi') === -1;\n\n            if (checkConditions) {\n                var newTurkishLira = this.sale_price.split(' ')[0];\n                var newTurkishLiraWithDot = self.adjustPrice(newTurkishLira);\n                var productNameArray = this.item_name.split(' ') || '';\n                var productUrl = this.item_url.replace('http:\/\/', 'https:\/\/') || '';\n                var productImageUrl = this.item_image.replace('http:\/\/', 'https:\/\/') || '';\n\n                productsHtml += '<div class=\"ins-slider-item\">' +\n                    '<a class=\"sp-custom-' + variationId + '-1\" href=\"' + productUrl + '\"><\/a>' +\n                    '<div class=\"ins-item-image\">' +\n                    '<img src=\"' + productImageUrl + '\">' +\n                    '<\/div>' +\n                    '<div class=\"ins-item-name\"><span class=\"ins-item-name-bold\">' +\n                    decodeURIComponent(productNameArray.splice(0, 1)) + '<\/span>' +\n                    decodeURIComponent(productNameArray.splice(0, productNameArray.length).join(' ')) + '<\/div>' +\n                    '<div class=\"ins-item-price\">' + newTurkishLiraWithDot + ' <span class=\"tl\"><i>t<\/i><\/span><\/div>' +\n                    '<div class=\"ins-cart-buttons\">' +\n                    '<div class=\"ins-cart-button ins-add-to-cart first sp-custom-' + variationId + '-2\" ' +\n                    'onclick=\"shopping.addCartItem(\\'' + this.item_id + '\\', this);\">' +\n                    '<img src=\"' + basketImageUrl + '\" class=\"ins-cart-sepet-icon\"\/> <span>Sepete Ekle<\/span><\/div>' +\n                    '<div class=\"ins-cart-button ins-cart-favori-btn sp-custom-' + variationId + '-3\" ' +\n                    'onclick=\"user.favorite.addItem(\\'' + this.item_id + '\\', this);\">' +\n                    '<img src=\"' + favoriteImageUrl + '\"\/> <span>Favorilere Ekle<\/span><\/div>' +\n                    '<\/div>' +\n                    '<\/div>';\n            }\n        });\n\n        return productsHtml;\n    };\n\n    self.initialize = function () {\n        $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').owlCarousel({\n            nav: true,\n            items: itemsPerSlide,\n            loop: true\n        });\n    };\n\n    self.setEvents = function () {\n        $('.ins-next-' + variationId).click(function () {\n            $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').trigger('next.owl.carousel');\n        });\n\n        $('.ins-prev-' + variationId).click(function () {\n            $('.ins-slider-container-' + variationId + ' .ins-slider-wrapper').trigger('prev.owl.carousel', [300]);\n        });\n    };\n    \/\/ OPT-6365 END\n\n    self.destruct = function () {\n        sQuery('.ins-slider-container-' + variationId).remove();\n    };\n\n    self.construct();\n})({});",
                "customCss": ".ins-recommendation-container {\r\n    position: relative;\r\n    display: flex;\r\n    height: 480px;\r\n    width: 1055px;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    margin: 20px 0px;\r\n    margin-bottom: 0px;\r\n    left: 18px;\r\n    font-family: \"Verdana\" !important;\r\n}\r\n\r\n.ins-slider-header {\r\n    color: #585858;\r\n    font-size: 27px;\r\n    font-weight: 300;\r\n    z-index: 1;\r\n    position: relative;\r\n    font-family: 'Montserrat', sans-serif;\r\n    width: 100%;\r\n    font-weight: 600;\r\n    letter-spacing: 2px;\r\n    margin-bottom: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.ins-slider-wrapper {\r\n    display: flex;\r\n    height: 100%;\r\n    transition: all .5s ease;\r\n    z-index: 1;\r\n}\r\n\r\n.ins-slider-item {\r\n    display: flex;\r\n    position: relative;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    padding: 10px;\r\n    border: 1px #cecaca solid;\r\n    box-sizing: border-box;\r\n    width: 190px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-right: 21px;\r\n    width: 248px !important;\r\n    background-color: #FFF;\r\n}\r\n\r\n.ins-slider-item:hover {\r\n    border: 1px solid #cecaca;\r\n    box-shadow: inset 0px 0px 0px 1px #cecaca;\r\n}\r\n\r\n.ins-slider-item>a {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 305px;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n}\r\n\r\n.ins-item-image {\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.ins-item-image img {\r\n    width: 100%;\r\n    object-fit: contain;\r\n}\r\n\r\n.ins-item-name {\r\n    width: 100%;\r\n    flex: 0.3;\r\n    align-items: center;\r\n    text-align: left !important;\r\n    font-size: 13px;\r\n    font-weight: lighter;\r\n    margin-top: 15px;\r\n    padding-left: 10px;\r\n    line-height: 18px;\r\n    min-height: 60px;\r\n    max-height: 60px;\r\n}\r\n\r\n.ins-item-price {\r\n    width: 100%;\r\n    display: flex;\r\n    line-height: 1;\r\n    font-weight: lighter;\r\n    font-size: 14px !important;\r\n    font-family: verdana;\r\n    margin-left: 10px;\r\n}\r\n\r\n.ins-item-price.line {\r\n    color: black;\r\n    font-size: 17px;\r\n    font-weight: bold;\r\n}\r\n\r\n.ins-item-price.sale {\r\n    color: #e03601;\r\n}\r\n\r\n.ins-add-to-cart:hover {\r\n    background-color: #fd6802 !important;\r\n}\r\n\r\n.ins-cart-buttons {\r\n    z-index: 9;\r\n    margin-top: 10px !important;\r\n    display: none;\r\n    width: 100%;\r\n    padding-left: 10px;\r\n    font-size: 14px !important;\r\n    font-family: Verdana, tahoma, sans-serif;\r\n}\r\n\r\n.ins-recommendation-header {\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.ins-prev-1917 {\r\n    position: relative;\r\n    float: left;\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: -29px !important;\r\n    transform: rotateZ(-135deg) !important;\r\n    top: 240px;\r\n    z-index: 99999999 !important;\r\n}\r\n\r\n.ins-next-1917 {\r\n    position: relative;\r\n    float: right;\r\n    width: 30px;\r\n    height: 30px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: 20px !important;\r\n    transform: rotateZ(45deg) !important;\r\n    top: 240px;\r\n    z-index: 9999 !important;\r\n}\r\n\r\n.ins-item-name-bold {\r\n    font-weight: bold;\r\n    display: inline-block;\r\n    margin-right: 3px;\r\n    color: #000000;\r\n}\r\n\r\n.ins-item-image img {\r\n    max-width: 100%;\r\n}\r\n\r\n.ins-slider-item:hover .ins-cart-buttons {\r\n    display: block;\r\n}\r\n\r\n.ins-cart-button {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 150px;\r\n    height: 30px;\r\n    padding: 0;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    line-height: 30px;\r\n    padding: 0px 0px 0px 10px;\r\n}\r\n\r\n.ins-cart-favori-btn:hover {\r\n    color: #445159;\r\n    background: #c9cccf\r\n}\r\n\r\n.ins-add-to-cart img {\r\n    width: 20px !important;\r\n    height: 16px;\r\n}\r\n\r\n.ins-cart-favori-btn img {\r\n    max-width: 16px !important;\r\n    max-height: 16px !important;\r\n}\r\n\r\n.ins-add-to-cart {\r\n    background: #004cbc;\r\n    color: white;\r\n}\r\n\r\n.ins-cart-favori-btn {\r\n    background: #d7d7d7;\r\n    color: #848b8f;\r\n    font-size: 13px;\r\n}\r\n\r\n.ins-cart-button img {\r\n    margin-right: 5px;\r\n}\r\n\r\n.ins-prev-c274 {\r\n    position: relative;\r\n    float: left;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: -5px !important;\r\n    transform: rotateZ(-135deg) !important;\r\n    top: 200px;\r\n    z-index: 99999999 !important;\r\n}\r\n\r\n.ins-next-c274 {\r\n    position: relative;\r\n    float: right;\r\n    width: 15px;\r\n    height: 15px;\r\n    cursor: pointer;\r\n    transition: all .5s ease;\r\n    font-size: 35px;\r\n    font-weight: bold;\r\n    user-select: none;\r\n    border-top: 2px #333 solid;\r\n    border-right: 2px #333 solid;\r\n    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\r\n    left: 5px !important;\r\n    transform: rotateZ(45deg) !important;\r\n    top: 200px;\r\n    z-index: 9999 !important;\r\n}\r\n\r\n.ins-slider-wrapper .owl-stage-outer {\r\n    padding-left: 2px;\r\n}\r\n\r\n.ins-recommendation-header p {\r\n    color: #262626;\r\n    font-size: 22px;\r\n    background: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    font-weight: bold;\r\n    line-height: 36px;\r\n    margin: 0;\r\n}\r\n\r\n.ins-slider-container-c274 hr {\r\n    position: relative;\r\n    bottom: 39px;\r\n    left: 0;\r\n}\r\n\r\n.ins-slider-item .addToCartContent {\r\n    background: #ecedee;\r\n    width: calc(100% - 20px) !important;\r\n    height: auto !important;\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    top: auto !important;\r\n    z-index: 1200;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent p {\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    margin: 10px 0 0;\r\n    padding: 0 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent a {\r\n    color: #0066b3 !important;\r\n    padding: 0 !important;\r\n    float: none;\r\n    width: auto;\r\n    height: auto;\r\n    line-height: 14px;\r\n    display: inline-block;\r\n    margin-top: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small {\r\n    font-size: 10px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent.fav {\r\n    padding-bottom: 8px;\r\n}\r\n\r\n.ins-slider-item .addToCartContent .small a {\r\n    margin-top: 0;\r\n}\r\n\r\n.ins-slider-item .blockElement img {\r\n    width: 128px;\r\n    height: 128px;\r\n}\r\n\r\n.ins-slider-item .blockElement {\r\n    top: 100px !important;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n}\r\n\r\n.backdrop {\r\n    z-index: 2;\r\n}\r\n\r\np.ins-after-recommendation-header {\r\n    color: #262626;\r\n    font-size: 22px;\r\n    background: 0;\r\n    padding: 0;\r\n    height: auto;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n    margin: 0px 10px;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "257",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c319",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBMVVNUSUdU",
                "isActive": "1",
                "activeDateStart": "1546523220",
                "activeDateEnd": "1641995220",
                "locationData": false,
                "showIn": {
                    "trigger": [304],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "sQuery('.product-links.clearfix').before('<a href=\"https:\/\/www.ikea.com.tr\/iyi-fikirler\/lustigt-koleksiyonu-ile-oyun-ve-eglence-dunyasina-adim-atin.aspx\" class=\"insIdeasButton sp-custom-319\"><img class=\"insIdeasImg\" src=\"https:\/\/image.useinsider.com\/ikea\/c50\/YzgFEUtwpYft5mIz2r4M1528455570.png\" alt=\"picture\"><\/a>')",
                "customCss": "a.insIdeasButton.sp-custom-319 {\r\n    margin-left: 153px !important;\r\n}\r\n\r\nimg.insIdeasImg {\r\n    width: 225px;\r\n    margin-bottom: -42px !important;\r\n    padding-top: 27px;\r\n}\r\n\r\nul.links.clearfix {\r\n    margin-top:30px !important;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "259",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c336",
                "campName": "|-x-|VGFiJTIwVGFsayUyMEIlQzMlQkN5JUMzJUJDayUyMCVDNCVCMG5kaXJpbQ==",
                "isActive": "1",
                "activeDateStart": "1548327780",
                "activeDateEnd": "1549213200",
                "locationData": false,
                "showIn": {
                    "trigger": [332]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [],
                "customJs": "var tempTitle = document.title;\n sQuery(window).blur(function(){ \n  document.title = 'B\u00fcy\u00fck IKEA indirimi devam ediyor.';\n });\n\n\n sQuery(window).focus(function(){ \n  document.title = tempTitle;\n });",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "283",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c335",
                "campName": "|-x-|VmFyaWF0aW9uJTIwLSUyMDgxMDM5OTY3",
                "isActive": "1",
                "activeDateStart": "1548329220",
                "activeDateEnd": "1551007620",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [333]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "slide",
                    "slideList": [{
                        "type": "move",
                        "newIndex": "0",
                        "oldIndex": "1",
                        "href": "\/duyurular\/mobil-app-kampanyasi.aspx",
                        "src": "\/\/cdn.ikea.com.tr\/Banner\/web\/mobilapp-100TLindirim-TR.jpg"
                    }],
                    "originalSliderList": [{
                        "src": "\/\/cdn.ikea.com.tr\/Banner\/web\/cy19-kis-indirimi-tr.jpg",
                        "href": "\/urun-katalogu\/kis-indirimi.aspx"
                    }, {
                        "src": "\/\/cdn.ikea.com.tr\/Banner\/web\/mobilapp-100TLindirim-TR.jpg",
                        "href": "\/duyurular\/mobil-app-kampanyasi.aspx"
                    }, {
                        "src": "\/\/cdn.ikea.com.tr\/Banner\/web\/peak-genel-magaza-TR.jpg",
                        "href": "https:\/\/www.ikea.com.tr\/duyurular\/ikeada-somestir-firsatlari.aspx"
                    }, {
                        "src": "\/\/cdn.ikea.com.tr\/Banner\/web\/somestir2019-banner-tr.jpg"
                    }, {
                        "src": "\/\/cdn.ikea.com.tr\/Banner\/web\/CY19-soft toy-TR.jpg"
                    }, {
                        "src": "\/\/cdn.ikea.com.tr\/Banner\/web\/kdv-indirimi-devam-tr.jpg",
                        "href": "\/p50058376.aspx"
                    }],
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2F"
                }],
                "customJs": "",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "284",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c344",
                "campName": "|-x-|S0RWJTIwJUM0JUIwbmRpcmltaSUyMEdlcmklMjBTYXklQzQlQjFt",
                "isActive": "1",
                "activeDateStart": "1548665040",
                "activeDateEnd": "1549226760",
                "locationData": false,
                "showIn": {
                    "trigger": [340],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": [{
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c148\/2PaIqH7N7ZENhGH3gm0u1531722417.jpg",
                    "insertOption": "before",
                    "selectorString": "header#top > div:eq(0)",
                    "id": "sp-custom-344-1548665097",
                    "parentNodeSelector": "header#top",
                    "editUrl": "https:\/\/www.ikea.com.tr\/"
                }, {
                    "oldPosition": {
                        "top": "auto",
                        "left": "auto",
                        "width": "43px",
                        "height": "15px",
                        "position": "static",
                        "z-index": "auto",
                        "max-width": "none"
                    },
                    "newPosition": {
                        "top": "55px",
                        "left": "-7px",
                        "width": "43px",
                        "height": "15px",
                        "position": "relative",
                        "z-index": "2147483642",
                        "max-width": "none"
                    },
                    "editUrl": "https:\/\/www.ikea.com.tr\/",
                    "type": "moveElement",
                    "selectorString": "header#top > div:eq(0) > ul:eq(1) > li:eq(1) > a",
                    "id": "sp-custom-344-1548665097",
                    "parentNodeSelector": "header#top > div:eq(0) > ul:eq(1) > li:eq(1)"
                }, {
                    "type": "remove",
                    "selectorString": "header#top > div:eq(0) > img",
                    "id": "sp-custom-344-1548665097",
                    "parentNodeSelector": "header#top > div:eq(0)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/"
                }, {
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c148\/2PaIqH7N7ZENhGH3gm0u1531722417.jpg",
                    "insertOption": "elementBefore",
                    "selectorString": "header#top > div:eq(0) > ul:eq(0)",
                    "id": "sp-custom-344-1548665097",
                    "parentNodeSelector": "header#top > div:eq(0)",
                    "editUrl": "https:\/\/www.ikea.com.tr\/"
                }, {
                    "type": "insertImage",
                    "src": "https:\/\/image.useinsider.com\/ikea\/c344\/YvY6BrK6rKKU4D16JexQ1548769183.png",
                    "insertOption": "elementAfter",
                    "selectorString": "div#ctl00_topMenu > ul > li:eq(4) > a",
                    "id": "sp-custom-344-1548769188072",
                    "parentNodeSelector": "div#ctl00_topMenu > ul > li:eq(4)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2F"
                }, {
                    "type": "remove",
                    "selectorString": "div#ctl00_topMenu > ul > li:eq(4) > img",
                    "id": "sp-custom-344-1548769196593",
                    "parentNodeSelector": "div#ctl00_topMenu > ul > li:eq(4)",
                    "editUrl": "http:\/\/action-builder.proxyins.us\/get-content-from-url?url=https%3A%2F%2Fwww.ikea.com.tr%2F"
                }],
                "customJs": "setTimeout(function(){\n\n  var campId = 163;\n\tsQuery('body').before(\n    '<div class=\"ins-camp-container\">' +\n    '<div class=\"ins-text\">'+\n    '<div class=\"ins-text1\"><span class=\"bigger50\"><\/span><span class=\"SpacerSon\">SON<\/span><\/div>'+\n    '<div class=\"ins-text2\"> <\/div>' +\n    '<div class=\"ins-gerisay\u0131m\">' +\n    '<div class=\"sp-gun\"><\/div>' +\n    '<div class=\"sp-saat\"><\/div>' +\n    '<div class=\"sp-dakika\"><\/div>' +\n    '<\/div>' +\n    '<\/div>' +\n    '<\/div>' +\n    '<\/a>');\n\nsQuery(\".sp-gun\").append('<div class=\"gunrakam\"><\/div><div class=\"gunyazi\">g\u00fcn<\/div>');\n sQuery(\".sp-saat\").append('<div class=\"saatrakam\"><\/div><div class=\"saatyazi\">saat<\/div>');\n sQuery(\".sp-dakika\").append('<div class=\"dakikarakam\"><\/div><div class=\"dakikayazi\">dakika<\/div>');    \n  \n    var $cd = spApi.widgets.countdown(1549220340);\n    \/*console.log($cd)*\/\n\tvar d, h, m = 0;\n    d = $cd.days;\n    h = $cd.hours;\n    m = $cd.minutes;\nvar guntext = +d+\" G\u00fcn\";\nvar saattext = +h+\" Saat\";\nvar dktext = +m+\" Dakika!\";\n sQuery(\".gunrakam\").text(d);\n sQuery(\".saatrakam\").text(h);\n sQuery(\".dakikarakam\").text(m);\n    \n}, 1000); \n\n  \nsQuery(document).on('click','.ins-button',function(e){\n  sQuery.cookie('ins-163-1-clicked', 1, {path:'\/', expires: 4, domain: partner_site.host});\n});\n\n\nsQuery(document).on('click','.ins-close-camp',function(e){\n  sQuery.cookie('ins-close-camp-clicked', 1, {path:'\/', expires: 4, domain: partner_site.host});\n});\n\n\nsQuery(document).on('click','.ins-close-camp',function(e) {\n    sQuery('.ins-camp-container').remove();\n  \tsQuery('.ins-close-camp').remove();\n});",
                "customCss": ".gunrakam {\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n    margin: 0 auto;\r\n    margin-right: 4px;\r\n    margin-top: -2px;\r\n    width: 100%;\r\n    text-align: center;\r\n}\r\n.gunyazi {\r\n    font-size: 10px;\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n    margin-right: 4px;\r\n    margin-top: 8px;\r\n    \/* text-align: center; *\/\r\n    \/* width: 100%; *\/\r\n}\r\n\r\n.sp-saat {\r\n    background: #000;\r\n    color: #FFF;\r\n    position: relative;\r\n    display: block;\r\n    height: 35px;\r\n    float: left;\r\n    left: 3px;\r\n}\r\n\r\n.saatrakam {\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n    margin: 0 auto;\r\n    margin-right: 4px;\r\n    margin-top: -2px;\r\n}\r\n\r\n.saatyazi {\r\n    font-size: 10px;\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n    margin-right: 4px;\r\n    margin-top: 8px;\r\n}\r\n\r\n.sp-dakika {\r\n    background: #000;\r\n    color: #FFF;\r\n    position: relative;\r\n    display: block;\r\n    height: 35px;\r\n    float: left;\r\n    left: 6px;\r\n}\r\n\r\n.dakikarakam {\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n    margin: 0 auto;\r\n    margin-right: 4px;\r\n    margin-top: -2px;\r\n}\r\n.dakikayazi {\r\n    font-size: 10px;\r\n    display: block;\r\n    position: relative;\r\n    height: 10px;\r\n    margin-right: 4px;\r\n    margin-top: 8px;\r\n}\r\n\r\n.ins-close-camp {\r\n    width: 20px;\r\n    height: 30px;\r\n    position: absolute;\r\n    top: 8px;\r\n    right: 30px;\r\n    object-fit: contain;\r\n    background-repeat: no-repeat!important;\r\n    cursor: pointer;\r\n  \tz-index: 99!important;\r\n}\r\n\r\n.ins-text2 {\r\n display: none!important;\r\n}\r\n.sp-gun, .sp-saat, .sp-dakika {\r\n    width: 45px!important;\r\n    border-radius: 7px;\r\n    height: 45px;\r\n\tmargin-top: 3.5px;\r\n    margin-left: 3px;\r\n}\r\n.sp-gun {\r\n    background: #000;\r\n    color: #FFF;\r\n    position: relative;\r\n    display: block;\r\n    float: left;\r\n}\r\n.ins-text1 {\r\n    display: inline-block;\r\n    position: relative;\r\n    line-height: 41px;\r\n    top: -8px;\r\n  \twidth: 80%;\r\n    text-align: right;\r\n}\r\n\r\n.gunyazi, .saatyazi, .dakikayazi {\r\n    text-align: center;\r\n    width: 100%;\r\n}\r\n\r\n.gunrakam, .saatrakam, .dakikarakam {\r\n    width: 100%;\r\n    text-align: center;\r\n}\r\n\r\n.ins-camp-container {\r\n    background: #CF0302 url(https:\/\/image.useinsider.com\/ikea\/c344\/YvY6BrK6rKKU4D16JexQ1548769183.png) 32% 50% no-repeat;\r\n    height: 55px;\r\n    width: 100%;\r\n    position: relative;\r\n    z-index: 9999;\r\n}\r\n\r\n.ins-text {\r\n    width: 100%;\r\n    right: auto;\r\n    font-family: Helvetica;\r\n    font-size: 18px;\r\n    line-height: 38px;\r\n    top: 0px;\r\n    bottom: auto;\r\n    font-weight: bold;\r\n    color: #ffffff;\r\n    text-align: center;\r\n    position: relative;\r\n    height: 100%;\r\n}\r\n\r\n\r\n.ins-gerisay\u0131m {\r\n    display: inline-block;\r\n    position: relative;\r\n    margin-left: -400px;\r\n}\r\n\r\nspan.bigger50 {\r\n    font-size: 23px;\r\n}\r\n\r\nspan.SpacerSon {\r\n    \/*padding-left: 15px;*\/\r\n  \tfont-size: 25px;\r\n\tdisplay:none;\r\n}",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "291",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c1",
                "campName": "|-x-|JTI4Tk8lMjklMjBPdmVyYWxsJTIwU2FsZXMlMjBEYXRhLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBNSUyOQ==",
                "isActive": "1",
                "activeDateStart": "1526646540",
                "activeDateEnd": "1718713740",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [5]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "5",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c3",
                "campName": "|-x-|TW9iaWxlJTIwTWVudS1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTYlMjk=",
                "isActive": "1",
                "activeDateStart": "1527019080",
                "activeDateEnd": "1683230400",
                "locationData": false,
                "showIn": {
                    "trigger": [6]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "6",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c14",
                "campName": "|-x-|T3ZlcmFsbCUyMFNhbGVzJTIwRGF0YSUyME1vYmlsZS1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTExJTI5",
                "isActive": "1",
                "activeDateStart": "1527080760",
                "activeDateEnd": "1686143160",
                "locationData": false,
                "showIn": {
                    "trigger": [14]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "24",
                "cookieTime": "1",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "11",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c35",
                "campName": "|-x-|JUMzJTk2bmVyaWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVyJTIwJUM0JUIwbmRpcmltJTIwQmFkZ2UtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyMyUyOQ==",
                "isActive": "1",
                "activeDateStart": "1528234080",
                "activeDateEnd": "1654637280",
                "locationData": false,
                "showIn": {
                    "trigger": [33],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "23",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c39",
                "campName": "|-x-|JUMzJTk2bmVyaWxlbiUyMCVDMyU5Q3IlQzMlQkNubGVyJTIwJUMzJTk2emVsJTIwJUM0JUIwbmRpcmltJTIwQmFkZ2UtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyOCUyOQ==",
                "isActive": "1",
                "activeDateStart": "1528357320",
                "activeDateEnd": "1685432520",
                "locationData": false,
                "showIn": {
                    "trigger": [38],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "28",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c47",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwR1IlQzMlOTZOTElELUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMzQlMjk=",
                "isActive": "1",
                "activeDateStart": "1528443240",
                "activeDateEnd": "1690473600",
                "locationData": false,
                "showIn": {
                    "trigger": [44]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "34",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c49",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwRUtFREFMRU4tQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EzNSUyOQ==",
                "isActive": "1",
                "activeDateStart": "1528452720",
                "activeDateEnd": "1688724720",
                "locationData": false,
                "showIn": {
                    "trigger": [46],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "35",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c51",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwS0FMTEFYLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMzYlMjk=",
                "isActive": "1",
                "activeDateStart": "1528453020",
                "activeDateEnd": "1718187420",
                "locationData": false,
                "showIn": {
                    "trigger": [48],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "36",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c53",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwS1JVWC1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTM3JTI5",
                "isActive": "1",
                "activeDateStart": "1528453320",
                "activeDateEnd": "1752056520",
                "locationData": false,
                "showIn": {
                    "trigger": [50],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "37",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c55",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwU0tBRElTLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMzglMjk=",
                "isActive": "1",
                "activeDateStart": "1528453500",
                "activeDateEnd": "1749637500",
                "locationData": false,
                "showIn": {
                    "trigger": [52],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "38",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c57",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBNT1NTTEFOREEtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EzOSUyOQ==",
                "isActive": "1",
                "activeDateStart": "1528453620",
                "activeDateEnd": "1781087220",
                "locationData": false,
                "showIn": {
                    "trigger": [54],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "39",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c59",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBWQVJEQUdFTi1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTQwJTI5",
                "isActive": "1",
                "activeDateStart": "1528453740",
                "activeDateEnd": "1717583340",
                "locationData": false,
                "showIn": {
                    "trigger": [56],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "40",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c61",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwR1IlQzMlOTZOTElEJTIwRU5HLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBNDElMjk=",
                "isActive": "1",
                "activeDateStart": "1528457760",
                "activeDateEnd": "1623843360",
                "locationData": false,
                "showIn": {
                    "trigger": [58],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "41",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c63",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwRUtFREFMRU4lMjBFTkctQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0E0MiUyOQ==",
                "isActive": "1",
                "activeDateStart": "1528461660",
                "activeDateEnd": "1623847260",
                "locationData": false,
                "showIn": {
                    "trigger": [59],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "42",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c65",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwS0FMTEFYJTIwRU5HLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBNDMlMjk=",
                "isActive": "1",
                "activeDateStart": "1528462500",
                "activeDateEnd": "1623848100",
                "locationData": false,
                "showIn": {
                    "trigger": [60],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "43",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c67",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwS1JVWCUyMEVORy1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTQ0JTI5",
                "isActive": "1",
                "activeDateStart": "1528462860",
                "activeDateEnd": "1623330060",
                "locationData": false,
                "showIn": {
                    "trigger": [61],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "44",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c69",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwU0tBRElTJTIwRU5HLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBNDUlMjk=",
                "isActive": "1",
                "activeDateStart": "1528463040",
                "activeDateEnd": "1625144640",
                "locationData": false,
                "showIn": {
                    "trigger": [62],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "45",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c71",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwTU9TU0xBTkRBJTIwRU5HLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBNDYlMjk=",
                "isActive": "1",
                "activeDateStart": "1528463040",
                "activeDateEnd": "1623935040",
                "locationData": false,
                "showIn": {
                    "trigger": [63]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "46",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c73",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwVkFSREFHRU4lMjBFTkctQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0E0NyUyOQ==",
                "isActive": "1",
                "activeDateStart": "1528463040",
                "activeDateEnd": "1625144640",
                "locationData": false,
                "showIn": {
                    "trigger": [64],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "47",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c130",
                "campName": "|-x-|Tm9TbGlkZXItQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0E4MCUyOQ==",
                "isActive": "1",
                "activeDateStart": "1530624180",
                "activeDateEnd": "2050234260",
                "locationData": false,
                "showIn": {
                    "trigger": [98]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "80",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c140",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJUM0JUIxbiUyMEJ1dG9uJTIwUExBVFNBLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBODUlMjk=",
                "isActive": "1",
                "activeDateStart": "1531218960",
                "activeDateEnd": "1828954800",
                "locationData": false,
                "showIn": {
                    "trigger": [103],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "85",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c142",
                "campName": "|-x-|SW5zcGlyYXRpb25hbCUyMElkZWFzJTIwQnV0dG9uJTIwS0FMTEFYJTIwRU5HJTIwQ29weS1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTg2JTI5",
                "isActive": "1",
                "activeDateStart": "1531219680",
                "activeDateEnd": "2036140800",
                "locationData": false,
                "showIn": {
                    "trigger": [104],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "en_US",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "86",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c160",
                "campName": "|-x-|SUtFQSUyMEt1cnVtc2FsJTIwQml6ZSUyMFVsYSVDNSU5RiVDNCVCMW4tQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExMTElMjk=",
                "isActive": "1",
                "activeDateStart": "1532604960",
                "activeDateEnd": "1661427300",
                "locationData": false,
                "showIn": {
                    "trigger": [127]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "111",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c174",
                "campName": "|-x-|U2VwZXQlMjBCbyVDNSU5RmtlbiUyMFNlcGV0JTIwSWNvbnVuYSUyMFQlQzQlQjFrbGF5YW5sYXItQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExMjIlMjk=",
                "isActive": "1",
                "activeDateStart": "1533554340",
                "activeDateEnd": "1696504740",
                "locationData": false,
                "showIn": {
                    "trigger": [135]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "24",
                "cookieTime": "1",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "122",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c176",
                "campName": "|-x-|U2VwZXQlMjBEb2x1eWtlbiUyMFNlcGV0JTIwSWNvbnVuYSUyMFQlQzQlQjFrbGF5YW5sYXItQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExMjMlMjk=",
                "isActive": "1",
                "activeDateStart": "1533554460",
                "activeDateEnd": "1659784860",
                "locationData": false,
                "showIn": {
                    "trigger": [137],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "24",
                "cookieTime": "1",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "123",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c178",
                "campName": "|-x-|RUtFVCUyMFBsYW5uZXItQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExMjYlMjk=",
                "isActive": "1",
                "activeDateStart": "1533796560",
                "activeDateEnd": "1662705420",
                "locationData": false,
                "showIn": {
                    "trigger": [142],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "126",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c180",
                "campName": "|-x-|QUxHT1QlMjBQbGFubmVyLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTI3JTI5",
                "isActive": "1",
                "activeDateStart": "1533804780",
                "activeDateEnd": "1662713700",
                "locationData": false,
                "showIn": {
                    "trigger": [143],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "127",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c182",
                "campName": "|-x-|RUxWQVJMSSUyMFBsYW5uZXItQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExMjglMjk=",
                "isActive": "1",
                "activeDateStart": "1533805500",
                "activeDateEnd": "1662714420",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [144]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "128",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c189",
                "campName": "|-x-|QmFubmVyJTIwQW5hbHl0aWNzJTIwaSVDMyVBN2luJTIwQ3VzdG9tJTIwR29hbC1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTEzMyUyOQ==",
                "isActive": "1",
                "activeDateStart": "1535417940",
                "activeDateEnd": "1893373140",
                "locationData": false,
                "showIn": {
                    "trigger": [152]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "133",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c191",
                "campName": "|-x-|U2VhcmNoJTIwVGV4dC1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTEzNCUyOQ==",
                "isActive": "1",
                "activeDateStart": "1536059640",
                "activeDateEnd": "1664882040",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [154]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "134",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c207",
                "campName": "|-x-|U2VrbWUlMjBBbGFuJUM0JUIxbmRhJTIwU2VwZXQlMjBCaWxnaWxlbmRpcm1lLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTQ4JTI5",
                "isActive": "1",
                "activeDateStart": "1538326860",
                "activeDateEnd": "1666890060",
                "locationData": false,
                "showIn": {
                    "trigger": [167]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "148",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c209",
                "campName": "|-x-|RGVsZXRlZCUyMCUyOGlkJTNBMTU1JTI5",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671016380",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [262]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "155",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c211",
                "campName": "|-x-|U2VhcmNoYmFyYSUyMFNvbiUyMCVDMyU5Q3IlQzMlQkNuJTIwTW9iaWxlLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMTU2JTI5",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671016440",
                "locationData": false,
                "showIn": {
                    "trigger": [187],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "156",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c213",
                "campName": "|-x-|Q2FydCUyMFJlbWluZGVyJTIwRGVza3RvcC1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTE1NyUyOQ==",
                "isActive": "1",
                "activeDateStart": "1539088860",
                "activeDateEnd": "1637239260",
                "locationData": false,
                "showIn": {
                    "trigger": [188]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "157",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c232",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMEJvJUM1JTlGJTIwU2VwZXQlMjBTYXlmYXMlQzQlQjEtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0ExNzAlMjk=",
                "isActive": "1",
                "activeDateStart": "1543815000",
                "activeDateEnd": "1671012000",
                "locationData": false,
                "showIn": {
                    "trigger": [205]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "170",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c271",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMFByb2R1Y3QlMjBQYWdlJTIwVFIlMjB2My1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTIwNCUyOQ==",
                "isActive": "1",
                "activeDateStart": "1540988580",
                "activeDateEnd": "1696508580",
                "locationData": false,
                "showIn": {
                    "trigger": [246],
                    "segment": [288]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "204",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c273",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMFNvbiUyMENhdGVnb3J5JTIwUGFnZSUyMFRSJTIwdjMtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyMDUlMjk=",
                "isActive": "1",
                "activeDateStart": "1540991820",
                "activeDateEnd": "1699881420",
                "locationData": false,
                "showIn": {
                    "trigger": [248],
                    "segment": [287]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "205",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c277",
                "campName": "|-x-|V2ViJTIwUHVzaCUyMCVDNCVCMHppbmxpJTIwUGFzaWYlMjBNb2JpbGUtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyMDglMjk=",
                "isActive": "1",
                "activeDateStart": "1541415120",
                "activeDateEnd": "1670496720",
                "locationData": false,
                "showIn": {
                    "trigger": [251],
                    "segment": [253]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "8640",
                "cookieTime": "360",
                "productAlias": "mobile-experiment",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "208",
                "platform": "mobile",
                "runDocReady": "0"
            }, {
                "id": "c278",
                "campName": "|-x-|V2ViJTIwUHVzaCUyMCVDNCVCMHppbmxpJTIwUGFzaWYlMjBEZXNrdG9wLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjA5JTI5",
                "isActive": "1",
                "activeDateStart": "1541415120",
                "activeDateEnd": "1669891920",
                "locationData": false,
                "showIn": {
                    "trigger": [252],
                    "segment": [254]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "8640",
                "cookieTime": "360",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "209",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c285",
                "campName": "|-x-|JUM0JUIwbmRpcmltJTIwQmFkZ2UlMjAlQzMlOUNyJUMzJUJDbiUyMERldGF5JTIwdjItQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyMTklMjk=",
                "isActive": "1",
                "activeDateStart": "1542369480",
                "activeDateEnd": "1671191880",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [271]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "219",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c295",
                "campName": "|-x-|U3Blc2lmaWslMjAlQzMlOUNyJUMzJUJDbiUyMFByb2dyZXNzJTIwLSUyMERlc2t0b3AtQ29udHJvbCUyMEdyb3VwJTIwJTI4aWQlM0EyMjQlMjk=",
                "isActive": "1",
                "activeDateStart": "1542798780",
                "activeDateEnd": "1891336380",
                "locationData": false,
                "showIn": {
                    "trigger": [276],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "224",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c300",
                "campName": "|-x-|U2VwZXQlMjBJY29udW5hJTIwVCVDNCVCMWtsYXklQzQlQjFuY2ElMjBZJUMzJUI2bmxlbmRpcm1lLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjMzJTI5",
                "isActive": "1",
                "activeDateStart": "1543508820",
                "activeDateEnd": "1639067220",
                "locationData": false,
                "showIn": {
                    "trigger": [291],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "233",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c302",
                "campName": "|-x-|U2VhcmNoQmFyJTIwLSUyMEFsdCUyMC0lMjBIaXpsaSUyMEFyYW1hLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjM5JTI5",
                "isActive": "1",
                "activeDateStart": "1544617920",
                "activeDateEnd": "1564669800",
                "locationData": false,
                "showIn": {
                    "trigger": [293]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "239",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c316",
                "campName": "|-x-|UmVjJTIwRW5naW5lJTIwLSUyMDAlMjBBcmFtYSUyMFNvbnUlQzMlQTclMjB2My1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTI1NyUyOQ==",
                "isActive": "1",
                "activeDateStart": "1546381740",
                "activeDateEnd": "1644272940",
                "locationData": false,
                "showIn": {
                    "trigger": [302]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "257",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c318",
                "campName": "|-x-|JUM0JUIweWklMjBGaWtpcmxlcmxlJTIwJUM0JUIwbGhhbSUyMEFsJTIwQnV0b24lMjBMVVNUSUdULUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjU5JTI5",
                "isActive": "1",
                "activeDateStart": "1546523220",
                "activeDateEnd": "1641995220",
                "locationData": false,
                "showIn": {
                    "trigger": [304],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "259",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c329",
                "campName": "|-x-|VGFiJTIwVGFsayUyMEIlQzMlQkN5JUMzJUJDayUyMCVDNCVCMG5kaXJpbS1Db250cm9sJTIwR3JvdXAlMjAlMjhpZCUzQTI4MyUyOQ==",
                "isActive": "1",
                "activeDateStart": "1548327780",
                "activeDateEnd": "1549213200",
                "locationData": false,
                "showIn": {
                    "trigger": [332]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "283",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c332",
                "campName": "|-x-|cWF0ZXN0LUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjg0JTI5",
                "isActive": "1",
                "activeDateStart": "1548329220",
                "activeDateEnd": "1551007620",
                "locationData": false,
                "showIn": {
                    "segment": null,
                    "trigger": [333]
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "1",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "284",
                "platform": "web",
                "runDocReady": "0"
            }, {
                "id": "c343",
                "campName": "|-x-|S0RWJTIwJUM0JUIwbmRpcmltaSUyMEdlcmklMjBTYXklQzQlQjFtLUNvbnRyb2wlMjBHcm91cCUyMCUyOGlkJTNBMjkxJTI5",
                "isActive": "1",
                "activeDateStart": "1548665040",
                "activeDateEnd": "1549226760",
                "locationData": false,
                "showIn": {
                    "trigger": [340],
                    "segment": null
                },
                "hideIn": null,
                "locationisActive": "0",
                "targetingCamp": "0",
                "customizationList": false,
                "customJs": "1==1",
                "customCss": "",
                "lang": "tr_TR",
                "trigTimeCount": "0",
                "priority": "0",
                "productType": "20",
                "gaEvents": {
                    "impression": "1",
                    "join": "1",
                    "sales": "0",
                    "close": "1",
                    "goal": "0"
                },
                "isTest": "0",
                "saLogDuration": "336",
                "cookieTime": "14",
                "productAlias": "custom",
                "dailyDisplay": "{\"status\":1,\"start\":\"00:00\",\"end\":\"23:59\",\"days\":[\"all\"]}",
                "builderId": "291",
                "platform": "web",
                "runDocReady": "0"
            }],
            bannerManagementCamps: [],
            journeyCamps: [],
            journeySegments: [],
            activeBannerManagementCamps: [],
            showedBMCampOfPage: [],
            gaCustomVar: 1,
            gaIsActiveCustom: 0,
            gaServiceIsActive: 1,
            gaNonInteraction: 1,
            userSegments: {},
            gaDataLayerIsActive: 1,
            gaDataLayerSettings: {
                "eventLabel": "eventlabel",
                "eventValue": "",
                "eventName": "INSIDER",
                "eventCategory": "eventcategory",
                "eventAction": "eventaction"
            },
            ajsData: {},
            bounceExcludeList: [""],
            bounceExcludeLeft: -1,
            bounceExcludeRight: 75,
            defaultVelocity: 200,
            lang: [],
            spLang: '',
            conditionCheckList: [],
            campCallbacks: [],
            userBounced: false,
            setAddCartCountFired: false,
            logsStack: {},
            _bindedEvents: {},
            coeff: {
                "ecommerce": true,
                "v": "4.2",
                "i": "0",
                "t": "0.5985111648910738",
                "tMobile": "0.6061908869615197",
                "iWeb": "-0.2063719231313677",
                "iMobile": "-0.9977264269976059",
                "fWeb": {
                    "1": ["1.682437368004884"],
                    "2": ["0.001123300922011674"],
                    "3": ["0.21309936316334205"],
                    "4": ["0.029967781677733507"],
                    "5": ["0.0"],
                    "6": ["-0.6145725774892457"],
                    "7": ["-0.5056186083768879"],
                    "8": ["-0.566034550317525"],
                    "9": ["-0.27697551444309454"],
                    "10": ["0.30646797694891514"],
                    "11": ["-0.09313562771882189"],
                    "12": ["-0.12077890030695605"],
                    "13": ["3.2933982906205886E-4"],
                    "14": ["0.0038692572966001837"],
                    "15": ["-0.0045215586128764754"],
                    "16": ["0.0"],
                    "17": ["0.0"],
                    "18": ["-2.700799480745623E-4"],
                    "19": ["0.02882369391895953"],
                    "20": ["-0.9537080858795354"],
                    "21": ["0.24344898506435173"],
                    "22": ["-0.11692832711175735"],
                    "23": ["-0.07576341204160922"],
                    "24": ["-0.03736855344034653"],
                    "25": ["0.0"],
                    "26": ["0.3758156131372973"],
                    "27": ["-1.1796300224400448E-5"],
                    "28": ["0.001522917775396402"],
                    "29": ["0.050492321170049516"],
                    "30": ["1.6691433931717965"],
                    "31": ["-0.5908922953201701"],
                    "32": ["0.0"]
                },
                "fMobile": {
                    "1": ["1.9995777095093707"],
                    "2": ["0.004653267400495174"],
                    "3": ["0.2085796928490723"],
                    "4": ["0.009552277338236569"],
                    "5": ["0.0"],
                    "6": ["-0.007185400350152091"],
                    "7": ["-0.024790023378860767"],
                    "8": ["0.13658556336934097"],
                    "9": ["-0.12675861002161937"],
                    "10": ["0.30016140365569133"],
                    "11": ["0.21101935982897005"],
                    "12": ["2.539628046208087E-4"],
                    "13": ["-3.502806902796044E-4"],
                    "14": ["-2.8453770375273905E-5"],
                    "15": ["-0.006847833196894443"],
                    "16": ["0.0"],
                    "17": ["0.0"],
                    "18": ["-4.196916755100865E-4"],
                    "19": ["0.028504358110711094"],
                    "20": ["-1.3459295160038154"],
                    "21": ["-0.8289594621854058"],
                    "22": ["-0.3658387613079451"],
                    "23": ["0.01973761475733375"],
                    "24": ["-0.026991606305012086"],
                    "25": ["0.0"],
                    "26": ["0.08459469388105408"],
                    "27": ["-1.1220752044464952E-5"],
                    "28": ["-0.0011593136139405778"],
                    "29": ["0.10122913799004302"],
                    "30": ["2.4635104384755104"],
                    "31": ["-0.39038176658824936"],
                    "32": ["0.0"]
                }
            },
            customUserAttributes: [{
                "attributeType": "String",
                "attributeName": "last_abandoned_item_name",
                "attributeJs": "if (spApi.isOnCartPage()) {\r\n    ((spApi.getPaidProducts() || [])[0] || {}).name || '';\r\n}"
            }, {
                "attributeType": "Url",
                "attributeName": "url_last_abandoned_item_img",
                "attributeJs": "var imgUrlOnCartPage = '';\r\n\r\nif (spApi.isOnCartPage()) {\r\n    imgUrlOnCartPage = ((spApi.getPaidProducts() || [])[0] || {}).img || '';\r\n    \r\n    if (imgUrlOnCartPage !== '') {\r\n        'https:' + imgUrlOnCartPage;\r\n    }\r\n}"
            }, {
                "attributeType": "Url",
                "attributeName": "url_last_abandoned_item_url",
                "attributeJs": "if (spApi.isOnCartPage()) {\r\n    ((spApi.getPaidProducts() || [])[0] || {}).url || '';\r\n}"
            }, {
                "attributeType": "String",
                "attributeName": "last_visited_item_name",
                "attributeJs": "var imgUrlOnProductControl = '';\r\n\r\nif (spApi.isOnProductPage()) {\r\n    imgUrlOnProductControl = (spApi.getCurrentProduct() || {}).img || '';\r\n\r\n    if (imgUrlOnProductControl !== '') {\r\n        (spApi.getCurrentProduct() || {}).name || '';\r\n    }\r\n}"
            }, {
                "attributeType": "Url",
                "attributeName": "url_last_visited_item_img",
                "attributeJs": "var imgUrlOnProductPage = '';\r\n\r\nif (spApi.isOnProductPage()) {\r\n    imgUrlOnProductPage = (spApi.getCurrentProduct() || {}).img || '';\r\n\r\n    if (imgUrlOnProductPage !== '') {\r\n        imgUrlOnProductPage;\r\n    }\r\n}"
            }, {
                "attributeType": "Url",
                "attributeName": "url_last_visited_item_url",
                "attributeJs": "var imgUrlOnProductControl = '';\r\n\r\nif (spApi.isOnProductPage()) {\r\n    imgUrlOnProductControl = (spApi.getCurrentProduct() || {}).img || '';\r\n\r\n    if (imgUrlOnProductControl !== '') {\r\n        (spApi.getCurrentProduct() || {}).url || '';\r\n    }\r\n}"
            }, {
                "attributeType": "Number",
                "attributeName": "antreler_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('antreler');"
            }, {
                "attributeType": "Number",
                "attributeName": "aydinlatma_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('aydinlatma');"
            }, {
                "attributeType": "Number",
                "attributeName": "calisma_alanlari_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('calisma-alanlari');"
            }, {
                "attributeType": "Number",
                "attributeName": "ev_dekorasyonu_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('ev-dekorasyonu');"
            }, {
                "attributeType": "Number",
                "attributeName": "ev_duzenleme_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('ev-duzenleme');"
            }, {
                "attributeType": "Number",
                "attributeName": "ev_tekstili_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('ev-tekstili');"
            }, {
                "attributeType": "Number",
                "attributeName": "ikea_cocuk_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('ikea-cocuk');"
            }, {
                "attributeType": "Number",
                "attributeName": "kitapliklar_v_raflar_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('kitapliklar-ve-raflar');"
            }, {
                "attributeType": "Number",
                "attributeName": "mutfaklar_new_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('mutfaklar');"
            }, {
                "attributeType": "Number",
                "attributeName": "oturma_odalari_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('oturma-odalari');"
            }, {
                "attributeType": "Number",
                "attributeName": "sofralar_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('sofralar');"
            }, {
                "attributeType": "Number",
                "attributeName": "tv_dolap_sistemleri_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('tv-dolap-sistemleri');"
            }, {
                "attributeType": "Number",
                "attributeName": "yatak_odalari_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('yatak-odalari');"
            }, {
                "attributeType": "Number",
                "attributeName": "yemek_odalari_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('yemek-odalari');"
            }, {
                "attributeType": "Number",
                "attributeName": "yemek_pisirme_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('yemek-pisirme');"
            }, {
                "attributeType": "Number",
                "attributeName": "yil_boyu_indirim_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('yil-boyu-indirim');"
            }, {
                "attributeType": "Number",
                "attributeName": "yaz_urunleri_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('yaz-urunleri');"
            }, {
                "attributeType": "Number",
                "attributeName": "kanepeler_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('kanepeler');"
            }, {
                "attributeType": "Number",
                "attributeName": "karyolalar_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('karyolalar');"
            }, {
                "attributeType": "Number",
                "attributeName": "0_2_yas_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('0-2-yas');"
            }, {
                "attributeType": "Number",
                "attributeName": "3_7_yas_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('3-7-yas');"
            }, {
                "attributeType": "Number",
                "attributeName": "gardiroplar_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('gardiroplar');"
            }, {
                "attributeType": "Number",
                "attributeName": "yilbasi_urunleri_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('yilbasi-urunleri');"
            }, {
                "attributeType": "Number",
                "attributeName": "internet_magazasi_cat_visit",
                "attributeJs": "spApi.getPageVisitCount('internet-magazasi');"
            }],
            productAttributes: [],
            crmAttributes: {},
            customChannelsTag: [],
            adwordsApiTags: [],
            siteUrl: 'https://www.ikea.com.tr/',
            listenerApiUrl: 'https://listener.api.useinsider.com/v1/',
            urlParamSep: 0,
            newUser: sQuery.cookie('insdrSV') ? false : true,
            decryptCampName: function(campName) {
                if (campName.indexOf('|-x-|') === 0) {
                    return decodeURIComponent(window.atob(campName.substring(5)));
                }
                return campName;
            },
            loadFramelessScripts: function(scripts) {
                var scriptVersions = {
                    'insCountdown.min.js': '?v=1.0.1',
                    'insAnimation.min.js': '?v=1.0.1',
                    'inStory.min.js': '?v=1.0.1',
                    'jquery-ui.js': '?v=1.0.0'
                };
                var _arr = sQuery.map(scripts, function(script) {
                    var version = scriptVersions[script] || '';
                    return sQuery.ajax({
                        dataType: 'script',
                        cache: true,
                        url: spApi.staticUrl + 'js/libraries/' + script + version
                    });
                });
                _arr.push(sQuery.Deferred(function(deferred) {
                    sQuery(deferred.resolve);
                }));
                return sQuery.when.apply(sQuery, _arr);
            },
            loadJsonFile: function(fileName, callback) {
                try {
                    var callbackName = 'jsonpCallback' + (Math.random().toString(16) + '000000000').substr(2, 8);
                    this[callbackName] = function() {}
                    ;
                    sQuery.ajax({
                        url: spApi.apiUrl + 'ajax.php?t=getJSONFile',
                        data: {
                            file: fileName,
                            callback: callbackName
                        },
                        contentType: 'application/json',
                        dataType: 'jsonp',
                        jsonpCallback: callbackName,
                        success: function(data) {
                            if (typeof callback === 'function') {
                                callback(data);
                            }
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'Load Frameless Json File Error',
                        bugType: 'product',
                        extraData: {
                            'function': 'loadFramlessJsonFile'
                        }
                    });
                }
            },
            getUrl: function() {
                return window.location.href;
            },
            getAllCamps: function() {
                return spApi.getPrototype('allCamps');
            },
            existsStorageData: function(keyString) {
                var exists = false;
                var allData = spApi.allStorageData();
                sQuery.each(allData, function(i, obj) {
                    var key = obj.key;
                    if (key.indexOf(keyString) !== -1) {
                        exists = true;
                    }
                });
                return exists;
            },
            allStorageData: function() {
                var pairs = [];
                try {
                    var allData = {};
                    for (var i = 0; i < window.localStorage.length; i++) {
                        var dataKey = window.localStorage.key(i);
                        allData[dataKey] = window.localStorage.getItem(dataKey);
                    }
                    sQuery.each(allData, function(key, val) {
                        try {
                            var obj = JSON.parse(val);
                            if (typeof obj['_expires'] !== 'undefined' && obj['_expires'] > Date.now()) {
                                pairs.push({
                                    'key': key,
                                    'value': obj['data']
                                });
                            }
                        } catch (e) {
                            pairs.push({
                                'key': key,
                                'value': val
                            });
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'All Storage Data Error',
                        bugType: 'partner',
                        extraData: {
                            'function': 'storageData'
                        }
                    });
                }
                return pairs;
            },
            storageData: function(name, content, expireDate, callback) {
                try {
                    content = content != null && typeof content === 'object' ? JSON.stringify(content) : content;
                    if (typeof content === 'undefined') {
                        var currDate = new Date().getTime();
                        var storageContent = spApi.localStorageGet(name);
                        try {
                            storageContent = JSON.parse(storageContent);
                            if (storageContent != null && storageContent._expires > currDate) {
                                return storageContent.data;
                            } else {
                                var obj = {
                                    action: 'delete',
                                    name: name
                                };
                                spApi.worker.asyncPM('storageData', obj, callback);
                                localStorage.removeItem(name);
                                return null;
                            }
                        } catch (e) {
                            return storageContent;
                        }
                    } else if (content == null) {
                        var obj = {
                            action: 'delete',
                            name: name
                        };
                        spApi.worker.asyncPM('storageData', obj, callback);
                        localStorage.removeItem(name);
                        return null;
                    } else {
                        var expires = typeof expireDate !== 'undefined' ? expireDate.expires : 1;
                        if (typeof expires === 'object') {
                            expires = expires.getTime();
                        } else {
                            var dateObj = new Date().getTime();
                            dateObj += 1000 * 60 * 60 * 24 * Number(expires) + 10000;
                            expires = dateObj;
                        }
                        var stObj = new Object();
                        stObj.data = typeof content === 'object' ? JSON.stringify(content) : content;
                        stObj._expires = expires;
                        spApi.localStorageSet(sQuery.trim(name), JSON.stringify(stObj));
                        if (typeof window.insdrSV === 'undefined') {
                            var version = sQuery.cookie('insdrSV') != null ? Number(sQuery.cookie('insdrSV')) : 0;
                            version++;
                            spApi.localStorageSet('insdrSV', version);
                            sQuery.cookie('insdrSV', version, {
                                expires: 365,
                                path: '/',
                                domain: cookieDomain
                            });
                            window.insdrSV = version;
                        }
                        var obj = {
                            action: 'write',
                            name: name,
                            content: JSON.stringify(stObj)
                        };
                        spApi.worker.asyncPM('storageData', obj, callback);
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'Data Storage Error',
                        bugType: 'partner',
                        extraData: {
                            'function': 'storageData'
                        }
                    });
                }
            },
            _systemRuleError: function(name, func, err) {
                var errLogStr = JSON.stringify(spApi.errLogs) || '';
                if (errLogStr.indexOf('"ruleName":"' + name + '"') != -1)
                    return;
                spApi.errLog(err, {
                    logType: 'System Rule Error',
                    bugType: 'partner',
                    extraData: {
                        ruleName: name,
                        ruleContent: func.toString()
                    }
                });
            },
            getPaidProducts: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar siteLanguage=spApi.hasParameter('tr\/en\/')?'en_US':'tr_TR';var products=[];var productPrice=0;sQuery('.shopping-cart .table:first tbody tr').each(function(index,elem){productPrice=siteLanguage==='tr_TR'?parseFloat(sQuery('.price .new',elem).text().replace(\/[^0-9,]\/g,'').replace(',','.')||0):parseFloat(sQuery('.price .new',elem).text().replace(\/[^0-9.]\/g,'').replace(',','.')||0);products.push({name:sQuery.trim(sQuery('.text h3',elem).text())+' '+sQuery.trim(sQuery('.text p',elem).text()),img:sQuery('.images img',elem).attr('src')||'',url:location.origin+sQuery('.text h3 a',elem).attr('href')||'',id:siteLanguage==='tr_TR'?(sQuery('.text h3 a',elem).attr('href')||'').replace('.aspx','').replace('\/p',''):(sQuery('.text h3 a',elem).attr('href')||'').replace('\/en\/p','').replace('.aspx',''),time:spApi.getTime(),quantity:parseInt(sQuery('.quantityInput',elem).val()||1),price:productPrice,originalPrice:siteLanguage==='tr_TR'?parseFloat(sQuery('.price .old',elem).text().replace(\/[^0-9,]\/g,'').replace(',','.')||productPrice):parseFloat(sQuery('.price .old',elem).text().replace(\/[^0-9.]\/g,'').replace(',','.')||productPrice),});});return products;})()" : "(function(){\nvar siteLanguage=spApi.hasParameter('tr\/en\/')?'en_US':'tr_TR';var products=[];var url;var productPrice=0;sQuery('.cart tbody tr').each(function(index,element){url=sQuery('h3 a',element).attr('href')||'';productPrice=siteLanguage==='tr_TR'?parseFloat(sQuery('td:eq(1) p',element).clone().children().remove().end().text().replace(\/[^0-9,]\/g,'').replace(',','.')||0):parseFloat(sQuery('td:eq(1) p',element).clone().children().remove().end().text().replace(\/[^0-9.]\/g,'').replace(',','.')||0);products.push({name:sQuery.trim(sQuery('.text h3',element).text())+' '+\nsQuery.trim(sQuery('.text p',element).text().split(',')[0]),img:sQuery('.image img',element).attr('src')||\u00a0'',url:url.indexOf(location.origin)>-1?url:(location.origin+url),id:siteLanguage==='tr_TR'?(sQuery('.image a',element).attr('href')||'').replace('\/p','').replace('.aspx',''):(sQuery('.image a',element).attr('href')||'').replace('\/en\/p','').replace('.aspx',''),time:spApi.getTime(),quantity:parseInt(sQuery('.quantity',element).val()||1),price:productPrice,originalPrice:productPrice,});});return products;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getPaidProducts', funcString, err);
                }
            },
            getCurrentProduct: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar formatPrice=function(element){var priceDecimalRegex=isLanguageEnglish?\/[^0-9.]\/g:\/[^0-9,]\/g;return parseFloat(element.replace(priceDecimalRegex,'').replace(',','.'));};var isLanguageEnglish=spApi.hasParameter('tr\/en\/');var priceText=sQuery('.product-detail #ctl00_body_pnlCatalogProductBox .price .new').text();var originalPriceText=sQuery('.product-detail #ctl00_body_pnlCatalogProductBox .price .old').text();var product={};product.id=sQuery('#ctl00_body_ddlFunctions option[selected=\"selected\"]').attr('spr-code')||sQuery('.product-detail > p:first > small').text().replace(\/[^0-9]\/g,'');product.name=sQuery('.product-detail #ctl00_body_pnlCatalogProductBox h2').text()+' '\n+sQuery('.product-detail #ctl00_body_pnlCatalogProductBox p').text().split(',')[0];product.img=('https:'+sQuery('.product-detail .owl-stage .owl-item.active img').attr('src'))||'';product.price=formatPrice(priceText)||0;product.originalPrice=formatPrice(originalPriceText)||product.price;product.url=window.location.href;product.cats=spApi.getProductCategories();product.quantity=parseInt(sQuery('.quantityInput').val()||0);if(spApi.hasParameter('stockTest')){product.quantity=0;}\nreturn product;})()" : "(function(){\nvar formatPrice=function(element){var priceDecimalRegex=isLanguageEnglish?\/[^0-9.]\/g:\/[^0-9,]\/g;return parseFloat(element.replace(priceDecimalRegex,'').replace(',','.'));};var isLanguageEnglish=spApi.hasParameter('tr\/en\/');var priceText=sQuery('.product-info .price.cf .fl').clone().children().remove().end().text();var originalPriceText=sQuery('.product-info .price.old').clone().children().remove().end().text();var product={};product.id=sQuery('meta[name=\"partnumber\"]').attr('content')||sQuery('.product-info product.small:first').text().replace(\/[^0-9]\/g,'');product.name=sQuery('.product-info #ctl00_ContentPlaceHolder1_pnlCatalogProductBox h1').clone().children().remove().end().text()+' '+\nsQuery('.product-info #ctl00_ContentPlaceHolder1_pnlCatalogProductBox h1 span').text().split(',')[0];product.img=('https:'+sQuery('.product-detail .owl-stage .owl-item.active img, img.productImage:first').attr('src'))||'';product.price=formatPrice(priceText)||0;product.originalPrice=formatPrice(originalPriceText)||product.price;product.url=window.location.href;product.cats=spApi.getProductCategories();product.quantity=parseInt(sQuery('#ctl00_ContentPlaceHolder1_txtQuantity').val()||0);if(spApi.hasParameter('stockTest')){product.quantity=0;}\nreturn product;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getCurrentProduct', funcString, err);
                }
            },
            getTotalCartAmount: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar siteLanguage=spApi.hasParameter('tr\/en\/')?'en_US':'tr_TR';if(spApi.isOnCartPage()){return siteLanguage==='tr_TR'?parseFloat(sQuery('.table:last tbody tr:first .single-price').clone().children().remove().end().text().replace(\/[^0-9,]\/g,'').replace(',','.')||0):parseFloat(sQuery('.table:last tbody tr:first .single-price').clone().children().remove().end().text().replace(\/[^0-9.]\/g,'').replace(',','.')||0);}\nif(sQuery('.cart-count').text()===''){return sQuery.cookie('total-cart-amount',0,{expires:365,path:'\/',domain:'.'+partner_site.host});}\nreturn parseFloat(sQuery.cookie('total-cart-amount')||0);})()" : "(function(){\nvar siteLanguage=spApi.hasParameter('tr\/en\/')?'en_US':'tr_TR';var cartPrice=siteLanguage==='tr_TR'&&spApi.isOnCartPage()?parseFloat(sQuery('.total-price tr:first .cf span').clone().children().remove().end().text().replace(\/[^0-9,]\/g,'').replace(',','.')||0):parseFloat(sQuery('.total-price tr:first .cf span').clone().children().remove().end().text().replace(\/[^0-9.]\/g,'').replace(',','.')||0);var miniBasketPrice=siteLanguage==='tr_TR'&&!spApi.isOnCartPage()?parseFloat(sQuery('#divShoppingCart > div > div.line.pt20.top > p').clone().children().remove().end().text().replace(\/[^0-9,]\/g,'').replace(',','.')||0):parseFloat(sQuery('#divShoppingCart > div > div.line.pt20.top > p').clone().children().remove().end().text().replace(\/[^0-9.]\/g,'').replace(',','.')||0);return cartPrice||miniBasketPrice||parseFloat(sQuery.cookie('total-cart-amount')||0);})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getTotalCartAmount', funcString, err);
                }
            },
            isOnCartPage: function() {
                try {
                    var funcString = "(function(){\nif(typeof google_tag_params!=='undefined'&&typeof google_tag_params.ecomm_pagetype!=='undefined'){return google_tag_params.ecomm_pagetype==='cart';}\nelse{return false||(spApi.hasParameter('siparis-adim\/sepetim')&&spApi.getCartCount()===0)||spApi.hasParameter('insTestCartPage');}})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isOnCartPage', funcString, err);
                }
            },
            isOnAfterPaymentPage: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nreturn spApi.hasParameter('siparis-adim\/siparis-sonucu')&&sQuery('.alert-success').exists();})()" : "(function(){\nreturn spApi.hasParameter('siparis-adim\/siparis-sonucu')&&sQuery('.order-success').exists();})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isOnAfterPaymentPage', funcString, err);
                }
            },
            isOnProductPage: function() {
                try {
                    var funcString = "(function(){\nif(typeof google_tag_params!=='undefined'&&typeof google_tag_params.ecomm_pagetype!=='undefined'){return google_tag_params.ecomm_pagetype==='product';}\nreturn false;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isOnProductPage', funcString, err);
                }
            },
            getProductCategories: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar categories=[];var categoryElements=sQuery('.page-title li').clone();categoryElements=categoryElements.slice(3,(categoryElements.length-1));if(categoryElements.length>0){sQuery(categoryElements).each(function(index,element){categories.push(sQuery.trim(sQuery(element).text()));});}\nreturn categories;})()" : "(function(){\nvar categories=[];var categoryElements=sQuery('.breadcrumbs ul li').clone().slice(2);if(categoryElements.length>0){sQuery(categoryElements).each(function(index,element){categories.push(sQuery.trim(sQuery(element).text()));});}\nreturn categories;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getProductCategories', funcString, err);
                }
            },
            spAddToCart: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nif(typeof spApi.addToCartListener==='undefined'){spApi.addToCartListener=true;var spAddToCartHandler={};spAddToCartHandler.addCartButton=sQuery('.btn-basket').live('click',function(){spApi.setProductCategory();if(typeof(spApi.setCartTargetingRules)!=='undefined'){spApi.setCartTargetingRules();}});}\nreturn{addToBasket:function(productId,callback){var partnersAddToCartFunction=function(){};if(typeof shopping!=='undefined'&&typeof shopping.addCartItem!=='undefined'){partnersAddToCartFunction=shopping.addCartItem;}\npartnersAddToCartFunction(productId,1);(callback||function(){}).call();}};})()" : "(function(){\nif(typeof spApi.addToCartListener==='undefined'){spApi.addToCartListener=true;var spAddToCartHandler={};spAddToCartHandler.addCartButton=sQuery('.addToBasket.addToCart').live('click',function(){spApi.setProductCategory();if(typeof(spApi.setCartTargetingRules)!=='undefined'){spApi.setCartTargetingRules();}});}\nreturn{addToBasket:function(productId,callback){var partnersAddToCartFunction=function(){};if(typeof shopping!=='undefined'&&typeof shopping.addCartItem!=='undefined'){partnersAddToCartFunction=shopping.addCartItem;}\npartnersAddToCartFunction(productId,1);(callback||function(){}).call();}};})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('spAddToCart', funcString, err);
                }
            },
            getOrderId: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nreturn(sQuery('.alert-success p').html()||'').split('<br>')[0].replace(\/[^0-9]\/g,'');})()" : "(function(){\nreturn sQuery('.order-success p').text().replace(\/[^0-9]\/g,'');})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getOrderId', funcString, err);
                }
            },
            getLang: function(lang) {
                try {
                    var funcString = "(function(){\nreturn spApi.hasParameter('tr\/en\/')?'en_US':'tr_TR';})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getLang', funcString, err);
                }
            },
            useCouponButton: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar useCouponButton={};useCouponButton.button='.discount-code .btn';useCouponButton.couponInput='#ctl00_body_txtCouponCode';useCouponButton.couponInputText='sQuery(\"#ctl00_body_txtCouponCode\").val();';useCouponButton.buttonClick='sQuery(\".discount-code .btn\")[0].click()';return useCouponButton;})()" : "(function(){\nvar useCouponButton={};useCouponButton.button='.discount-code .buttons a';useCouponButton.couponInput='.discount-code input';useCouponButton.couponInputText='sQuery(\".discount-code input\").val();';useCouponButton.buttonClick='sQuery(\".discount-code .buttons a\")[0].click();';return useCouponButton;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('useCouponButton', funcString, err);
                }
            },
            rsvpLocate: function() {
                try {
                    var funcString = "(function(){})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('rsvpLocate', funcString, err);
                }
            },
            isUserLoggedIn: function() {
                try {
                    var funcString = "(function(){\nreturn sQuery('.link-menu .loggedUser').exists()?!sQuery('.link-menu .loggedUser').hasClass('hide'):false;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isUserLoggedIn', funcString, err);
                }
            },
            isOnRegSuccessPage: function() {
                try {
                    var funcString = "(function(){\nreturn spApi.hasParameter('hesabim')&&(document.referrer.indexOf('yeni-uyelik')>-1||document.referrer.indexOf('uyelik\/aktivasyon')>-1);})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isOnRegSuccessPage', funcString, err);
                }
            },
            getSearchKeyWords: function() {
                try {
                    var funcString = "(function(){\nreturn spApi.getParameter('k')||false;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getSearchKeyWords', funcString, err);
                }
            },
            isOnMainPage: function() {
                try {
                    var funcString = "(function(){\nif(typeof google_tag_params!=='undefined'&&typeof google_tag_params.ecomm_pagetype!=='undefined'){return google_tag_params.ecomm_pagetype==='home';}\nreturn false;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isOnMainPage', funcString, err);
                }
            },
            isCouponCodeApplied: function() {
                try {
                    var funcString = "(function(){\nreturn true;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isCouponCodeApplied', funcString, err);
                }
            },
            isOnCouponPage: function() {
                try {
                    var funcString = "(function(){\nreturn spApi.isOnCartPage();})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isOnCouponPage', funcString, err);
                }
            },
            isOnCategoryPage: function() {
                try {
                    var funcString = "(function(){\nif(typeof google_tag_params!=='undefined'&&typeof google_tag_params.ecomm_pagetype!=='undefined'&&!spApi.hasParameter('siparis')){return google_tag_params.ecomm_pagetype==='category';}\nreturn false;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('isOnCategoryPage', funcString, err);
                }
            },
            getCategories: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar categories=[];var categoryElements=sQuery('.page-title li').clone().slice(3);if(categoryElements.length>0){sQuery(categoryElements).each(function(index,element){categories.push(sQuery.trim(sQuery(element).text()));});}\nreturn categories;})()" : "(function(){\nvar categories=[];if(sQuery('.header-bottom .sub-nav li.active').text()!==''){categories.push(sQuery('.header-bottom .sub-nav li.active').text());}\nif(sQuery('.filter-nav ul li.active').text()!==''){categories.push(sQuery('.filter-nav ul li.active').text());}\nreturn categories;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getCategories', funcString, err);
                }
            },
            setEmailToCookie: function() {
                try {
                    var funcString = "(function(){\nvar data={Login:{},Register:{}};data.Login.email='#txtEmail';data.Login.button='#btnLogin';data.Register.email='.input.onlyEmail, #ctl00_body_ctrlRegister_txtEmail';data.Register.button='.registerBtn, #ctl00_body_ctrlRegister_btnSubmit';return data;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('setEmailToCookie', funcString, err);
                }
            },
            sliderSettings: function() {
                try {
                    var funcString = "(function(){\nvar sliderElementSelector='.page-content-area .owl-carousel:not(#information-slider) .owl-item:not(.cloned)';return{isElementInSlider:function(element){return sQuery(element).closest(sliderElementSelector).length>0;},getImageList:function(){var imageList=[];sQuery(sliderElementSelector).each(function(index,elem){var slide={};slide.src=sQuery('img',elem).attr(\"src\");slide.href=sQuery('a',elem).attr(\"href\");slide.path=sQuery('img',elem);imageList.push(slide);});return imageList;},triggerClick:function(){spApi.cstmClickHandler('sQuery(\"'+sliderElementSelector+'\")');},changeSlider:function(slide,order,logClass){sQuery(sliderElementSelector).eq(order).find('img').attr('src',slide.src);sQuery(sliderElementSelector).eq(order).find('a').attr('href',slide.href);if(typeof logClass!=='undefined'){sQuery(sliderElementSelector).eq(order).addClass(logClass);}}};})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('sliderSettings', funcString, err);
                }
            },
            getCurrency: function() {
                try {
                    var funcString = "(function(){\nreturn'TRY';})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getCurrency', funcString, err);
                }
            },
            triggerCartButton: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar updateProductRelatedStorage=function(product,flag){spApi.storeCartProductInformation(product,{count:parseInt(product.quantity),increase:flag});spApi.updateTotalCartAmount(product.price*parseInt(product.quantity),flag);}\nvar listenCartMovement=function(){spApi.listenAjaxCalls(function(url,responseText){if(url.indexOf('general.aspx\/AddShoppingCart')>-1){var statusCode=((JSON.parse(responseText||'').d||'{}').StatusCode||0);if(statusCode===603){spApi.storageData('ins-add-cart-product-id',null);}else{if(spApi.isOnProductPage()){updateProductRelatedStorage(spApi.getCurrentProduct(),true);}else if(spApi.isOnCategoryPage()||spApi.hasParameter('arama')){var productDetail=getProductDetails();if(!sQuery.isEmptyObject(productDetail)){updateProductRelatedStorage(productDetail,true);}}}}});};var getProductDetails=function(){var clickedProductId=spApi.storageData('ins-add-cart-product-id');var $clickedProductElement=sQuery('.product-list ul li .wrap-product-list.ProductWrapper[data-stockcode=\"'+\nclickedProductId+'\"]');if(!$clickedProductElement.exists()){return{};}\nvar ProductId=sQuery($clickedProductElement).attr('data-stockcode');var price=parseFloat(sQuery('.text .price .new',$clickedProductElement).text().replace(\/[^0-9\\,]\/g,'').replace(',','.')||0);var originalPrice='';if(clickedProductId!==ProductId){return{};}\nif(sQuery('.text .price .old',$clickedProductElement).exists()){originalPrice=parseFloat(sQuery('.text .price .old',$clickedProductElement).text().replace(\/[^0-9\\,]\/g,'').replace(',','.')||0);}else{originalPrice=price;}\nreturn{id:ProductId,name:sQuery('.text h3 a',$clickedProductElement).text(),img:('https:'+sQuery('.images img',$clickedProductElement).attr('src'))||'',price:price,originalPrice:originalPrice,url:'https:\/\/m.ikea.com.tr'+sQuery('.images a',$clickedProductElement).attr('href')||'',cats:spApi.getCategories(),quantity:1};};if(spApi.isOnCategoryPage()||spApi.hasParameter('arama')){sQuery('.btn.btn-primary.btn-basket.btn-list-basket').off('click.addToBasket').on('click.addToBasket',function(){var clickedProductId=sQuery(this).parent().find('.wrap-product-list.ProductWrapper').attr('data-stockcode')||0;spApi.storageData('ins-add-cart-product-id',clickedProductId);});}\nif(spApi.isOnProductPage()||spApi.isOnCategoryPage()||spApi.hasParameter('arama')){listenCartMovement();}})()" : "(function(){\nvar updateProductRelatedStorage=function(product,flag){spApi.storeCartProductInformation(product,{count:parseInt(product.quantity),increase:flag});spApi.updateTotalCartAmount(product.price*parseInt(product.quantity),flag);};var listenCartMovement=function(){spApi.listenAjaxCalls(function(url,responseText){if(url.indexOf('general.aspx\/AddShoppingCart')>-1){var statusCode=((JSON.parse(responseText||'').d||'{}').StatusCode||0);if(statusCode===603){spApi.storageData('ins-add-cart-product-id',null);}else{if(spApi.isOnProductPage()){updateProductRelatedStorage(spApi.getCurrentProduct(),true);}else if(spApi.isOnCategoryPage()||spApi.hasParameter('arama')){var productDetail=getProductDetails();if(!sQuery.isEmptyObject(productDetail)){updateProductRelatedStorage(productDetail,true);}}}}});};var getProductDetails=function(){var clickedProductId=spApi.storageData('ins-add-cart-product-id');var $clickedProductElement=sQuery('.product-list .grid_inner.ProductWrapper[data-stockcode=\"'+\nclickedProductId+'\"]');if(!$clickedProductElement.exists()){return{};}\nvar ProductId=sQuery($clickedProductElement).attr('data-stockcode');var price=parseFloat(sQuery('.price .fl',$clickedProductElement).text().replace(\/[^0-9\\,]\/g,'').replace(',','.')||0);var originalPrice='';if(clickedProductId!==ProductId){return{};}\nif(sQuery('.price.old',$clickedProductElement).exists()){originalPrice=parseFloat(sQuery('.price.old',$clickedProductElement).text().replace(\/[^0-9\\,]\/g,'').replace(',','.')||0);}else{originalPrice=price;}\nreturn{id:ProductId,name:sQuery('h2 a span',$clickedProductElement).text(),img:('https:'+sQuery('.image img',$clickedProductElement).attr('src'))||'',price:price,originalPrice:originalPrice,url:'https:\/\/ikea.com.tr'+sQuery('.image a',$clickedProductElement).attr('href')||'',cats:spApi.getCategories(),quantity:1};};if(spApi.isOnCategoryPage()||spApi.hasParameter('arama')){sQuery('.addToBasketProductList, .addToCart').off('click.addToBasket').on('click.addToBasket',function(){var clickedProductId=sQuery(this).attr('onclick').replace(\/[^0-9]\/g,'');spApi.storageData('ins-add-cart-product-id',clickedProductId);});}\nif(spApi.isOnProductPage()||spApi.isOnCategoryPage()||spApi.hasParameter('arama')){listenCartMovement();}})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('triggerCartButton', funcString, err);
                }
            },
            getCartCount: function() {
                try {
                    var funcString = spApi.isMobileBrowser() ? "(function(){\nvar count=0;if(spApi.isOnCartPage()){sQuery(spApi.getPaidProducts()).each(function(index,elem){count+=elem.quantity;});}else{count=parseFloat(JSON.parse(spApi.storageData('ins-cart-product-list')||'{}').totalQuantity||sQuery('.cart-count').text()||\u00a00);}\nreturn count;})()" : "(function(){\nvar count=0;if(spApi.isOnCartPage()){sQuery(spApi.getPaidProducts()).each(function(index,elem){count+=elem.quantity;});}else{count=parseFloat(sQuery('.basket-item').text()||0);}\nreturn count;})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getCartCount', funcString, err);
                }
            },
            categorySettings: function() {
                try {
                    var funcString = "(function(){\nvar selector='#ctl00_body_menu_siteMenu ul > li';return{getCategoryList:function(){var categoryList=[];sQuery(selector).each(function(){categoryList.push({'text':sQuery.trim(sQuery('a',this).text())});});return categoryList;},triggerClick:function(){spApi.categoryClickHandler(selector);},changeCategory:function(category,fromIndex,toIndex,logClass){if(fromIndex>toIndex){sQuery(selector).eq(fromIndex).insertBefore(sQuery(selector).eq(toIndex));}else{sQuery(selector).eq(fromIndex).insertAfter(sQuery(selector).eq(toIndex));}\nif(typeof logClass!=='undefined'){sQuery(selector).eq(fromIndex).addClass(logClass);}},getElementCategoryText:function(element){return sQuery('a',element).text();}};})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('categorySettings', funcString, err);
                }
            },
            getLocale: function() {
                try {
                    var funcString = "(function(){\nreturn spApi.hasParameter('tr\/en\/')?'en_US':'tr_TR';})()";
                    return spApi.e(funcString);
                } catch (err) {
                    spApi._systemRuleError('getLocale', funcString, err);
                }
            },
            setCouponAsistant: function(couponSet, fromPurcha) {},
            setProductCategory: function() {
                try {
                    var currentProduct = spApi.getCurrentProduct();
                    var category = sQuery.map(spApi.getProductCategories(), function(val, index) {
                        var str = val;
                        return str;
                    }).join("|");
                    var p = {
                        cat: category,
                        name: currentProduct.name,
                        id: currentProduct.id
                    };
                    var encoded = spApi.storageData('prodCats');
                    var prodCats = [];
                    if (encoded) {
                        prodCats = JSON.parse(encoded);
                    }
                    for (i in prodCats) {
                        if (prodCats[i].name == p.name) {
                            prodCats.splice(i, 1);
                        }
                    }
                    prodCats.push(p);
                    spApi.storageData('prodCats', sQuery.toJSON(prodCats), {
                        expires: 1,
                        path: '/',
                        domain: cookieDomain
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setProductCategory',
                        bugType: 'product'
                    });
                }
            },
            spRefId: "_spRefCode",
            urlencode: function(str) {
                str = (str + '').toString();
                return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A').replace(/%20/g, '+');
            },
            getAppliedCode: function(campId) {
                var couponCode = '';
                var cookieData = JSON.parse(sQuery.cookie('sp-noteTimer'));
                if (cookieData != null && cookieData['cId'] != undefined && cookieData['cId'] == campId) {
                    if (cookieData['code'] != undefined && cookieData['couponApply'] != undefined && cookieData['couponApply'] == 'applied') {
                        if (cookieData['encoded'] != undefined && cookieData['encoded'] == 'true') {
                            couponCode = spApi.Base64.decode(cookieData['code']);
                        } else {
                            couponCode = cookieData['code'];
                        }
                    }
                }
                return couponCode;
            },
            updateTotalCartAmount: function(price, increase) {
                var totalAmount = Number(sQuery.cookie('total-cart-amount')) || 0;
                sQuery.cookie('total-cart-amount', increase ? (totalAmount + Number(price)) : (totalAmount - Number(price) > 0 ? (totalAmount - Number(price)) : 0), {
                    expires: 1,
                    path: '/',
                    domain: partner_site.host
                });
                sQuery(document).trigger('cartAmountUpdated');
            },
            storeCartProductStorage: function(productList) {
                var cartProductsStorageName = 'ins-cart-product-list';
                var twelveHoursAsMilliSeconds = 60 * 60 * 12 * 1000;
                var date = new Date();
                date.setTime(date.getTime() + twelveHoursAsMilliSeconds);
                spApi.storageData(cartProductsStorageName, productList, {
                    expires: date,
                    domain: cookieDomain,
                    path: '/'
                });
            },
            getCartProductStorage: function() {
                return spApi.cachedProductList || ((sQuery.parseJSON(spApi.storageData('ins-cart-product-list')) || {}).productList) || [];
            },
            storeCartProductInformation: function(productInformation, quantityConfig) {
                if (typeof productInformation === 'undefined' && productInformation.id === undefined) {
                    return;
                }
                var cartProductsStorageName = 'ins-cart-product-list';
                var currentProductList = JSON.parse(spApi.storageData(cartProductsStorageName) || '{"totalQuantity": 0, "productList": []}');
                productInformation.quantity = productInformation.quantity || 1;
                function adjustQuantityOfProduct() {
                    var existingProduct = findMatchingProduct();
                    if (Object.keys(existingProduct).length > 0) {
                        if (typeof quantityConfig.increase !== 'undefined' && quantityConfig.increase) {
                            existingProduct.quantity += Number(quantityConfig.count);
                            productInformation = existingProduct;
                        } else if (existingProduct.quantity > 0 && typeof quantityConfig.increase !== 'undefined' && !quantityConfig.increase) {
                            existingProduct.quantity -= Number(quantityConfig.count);
                            productInformation = existingProduct;
                        }
                    }
                }
                function findMatchingProduct() {
                    var foundProduct = {};
                    currentProductList.productList.map(function(product) {
                        if (product.id !== undefined && product.id === productInformation.id) {
                            foundProduct = product;
                        }
                    });
                    return foundProduct;
                }
                function setTotalQuantity() {
                    var totalQuantity = 0;
                    currentProductList.productList.forEach(function(product) {
                        if (product.id !== undefined) {
                            totalQuantity += product.quantity;
                        }
                    });
                    currentProductList.totalQuantity = totalQuantity;
                }
                adjustQuantityOfProduct();
                if (Object.keys(findMatchingProduct()).length === 0) {
                    currentProductList.productList.push(productInformation);
                }
                setTotalQuantity();
                spApi.storeCartProductStorage(currentProductList);
                sQuery(document).trigger('changingCartCount');
            },
            updateCartCount: function(count) {
                var cartProductsStorageName = 'ins-cart-product-list';
                var currentCartProductList = JSON.parse(spApi.storageData(cartProductsStorageName) || '{}');
                currentCartProductList.totalQuantity = count;
                currentCartProductList.productList = spApi.getPaidProducts();
                spApi.storeCartProductStorage(currentCartProductList);
                sQuery(document).trigger('cartAmountUpdated');
            },
            updateCartCookies: function() {
                var pProd = spApi.getPaidProducts();
                var date = new Date();
                date.setTime(date.getTime() + (30 * 60 * 1000));
                spApi.storageData('paid-products', JSON.stringify(pProd), {
                    expires: date,
                    path: '/',
                    domain: cookieDomain
                });
                sQuery.cookie('total-cart-amount', spApi.getTotalCartAmount(), {
                    expires: 1,
                    path: '/',
                    domain: cookieDomain
                });
                sQuery.cookie('current-currency', spApi.getCurrency(), {
                    expires: 1,
                    path: '/',
                    domain: cookieDomain
                });
            },
            stringToCurrency: function(currency) {
                try {
                    currency = currency.replace(/^\s+|\s+$/g, '').toUpperCase();
                    var search = ['TL', 'YTL', '€', 'EURO', '$', 'DÓLAR', '£', '₽', 'руб', 'НАТИРАТЬ', '₺', 'EU', 'US', 'ZŁ', '¥', 'ЕУР'];
                    var change = ['TRY', 'TRY', 'EUR', 'EUR', 'USD', 'USD', 'GBP', 'RUB', 'RUB', 'RUB', 'TRY', 'EUR', 'USD', 'PLN', 'JPY', 'RSD'];
                    sQuery.each(search, function(key, value) {
                        currency = (search[key] == currency) ? currency.replace(search[key], change[key]) : currency;
                    });
                    return currency;
                } catch (err) {
                    spApi.errLog(err);
                }
            },
            setExchangeRate: function(fromCurrency, toCurrency, price) {
                try {
                    if (fromCurrency != toCurrency && fromCurrency != '' && toCurrency != '') {
                        price = (price != null && typeof (price) != "number") ? price.replace(/[^0-9.,]/g, '') : price;
                        if (typeof spApi.webPushUtilities === 'object') {
                            spApi.webPushUtilities.unconvertedCurrentPrice = price;
                        }
                        if (price != null && !isNaN(price)) {
                            if (spApi.supportedCurrencies[fromCurrency] != undefined) {
                                if (spApi.supportedCurrencies[fromCurrency][toCurrency] != undefined)
                                    return (Math.round(spApi.supportedCurrencies[fromCurrency][toCurrency] * price * 1000) / 1000);
                            }
                            if (spApi.supportedCurrencies[toCurrency] != undefined) {
                                if (spApi.supportedCurrencies[toCurrency][fromCurrency] != undefined)
                                    return (Math.round((1 / spApi.supportedCurrencies[toCurrency][fromCurrency]) * price * 1000) / 1000);
                            }
                        }
                    }
                    return price;
                } catch (err) {
                    spApi.errLog(err);
                }
            },
            getExchangeRate: function(fromCurrency, toCurrency, data, element) {
                var checkAndSetExchangeRate = function(data, element, index) {
                    var baseObject = data;
                    if (typeof index !== 'undefined') {
                        baseObject = data[index];
                    }
                    if (element === 'price') {
                        baseObject['notConvertedPrice'] = baseObject[element];
                    }
                    baseObject[element] = spApi.setExchangeRate(fromCurrency, toCurrency, baseObject[element]);
                    return baseObject
                };
                try {
                    switch (typeof data) {
                    case 'number':
                        var convertedPrice = spApi.setExchangeRate(fromCurrency, toCurrency, data);
                        break;
                    case 'string':
                        var convertedPrice = (isNaN(data)) ? data : spApi.setExchangeRate(fromCurrency, toCurrency, parseFloat(data));
                        break;
                    case 'object':
                        if (data != null) {
                            if (data.length === undefined) {
                                if (data.hasOwnProperty(element)) {
                                    data = checkAndSetExchangeRate(data, element);
                                } else if (element instanceof Array) {
                                    element.forEach(function(element) {
                                        data = checkAndSetExchangeRate(data, element);
                                    });
                                }
                            } else {
                                for (var i = 0; i < data.length; i++) {
                                    if (data[i].hasOwnProperty(element)) {
                                        data[i] = checkAndSetExchangeRate(data, element, i);
                                    } else if (element instanceof Array) {
                                        element.forEach(function(element) {
                                            data[i] = checkAndSetExchangeRate(data, element, i);
                                        });
                                    }
                                }
                            }
                        }
                        var convertedPrice = data;
                        break;
                    default:
                        var convertedPrice = data;
                    }
                    return convertedPrice;
                } catch (err) {
                    spApi.errLog(err);
                }
            },
            writeConsoleLog: function() {
                try {
                    if (typeof spApi.consoleLog === 'object') {
                        sQuery(spApi.consoleLog).each(function(id, text) {
                            spApi.logger('info', text);
                        });
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'writeConsoleLog',
                        bugType: 'product'
                    });
                }
            },
            getCampSalesSesInfo: function(campId, objType, productType) {
                try {
                    campId = ((productType == '20') && (campId.toString().indexOf('c') == -1)) ? 'c' + campId : campId;
                    var cmp = spApi.storageData('sp-camp-' + campId);
                    if (cmp == null || cmp == undefined) {
                        return '0';
                    } else {
                        var obj = JSON.parse(cmp);
                        return (obj[objType] == undefined) ? '0' : obj[objType];
                    }
                } catch (err) {
                    spApi.errLog(err);
                }
            },
            getBuilderIdFromVar: function(campId) {
                var segments = JSON.parse(spApi.storageData('user-segments'));
                for (var i in segments) {
                    if (segments[i] == campId)
                        return i;
                }
                return false;
            },
            getBuilderIdFromPersonalizations: function(campId) {
                var builderID = false;
                sQuery.each(spApi.personalizationCamps, function(id, personalization) {
                    sQuery.each(personalization.variations, function(key, variation) {
                        if (variation.varId == campId) {
                            builderID = id;
                            return false;
                        }
                    });
                    if (builderID) {
                        return false;
                    }
                });
                return builderID;
            },
            excludeJourneyControlGroups: function() {
                spApi.journeySegments = JSON.parse(spApi.storageData('ins-journey-segments')) || {};
                sQuery.each(spApi.journeyCamps, function(key, journey) {
                    if (typeof spApi.journeySegments[journey.id] === 'undefined') {
                        spApi.journeySegments[journey.id] = Number(journey.trafficAllocation) >= parseInt(Math.random() * 100);
                    }
                });
                cookieExpireDate = new Date();
                cookieExpireDate.setTime(cookieExpireDate.getTime() + (60 * 60 * 1000));
                spApi.storageData('ins-journey-segments', spApi.journeySegments, {
                    path: '/',
                    expires: cookieExpireDate,
                    domain: cookieDomain
                });
            },
            getJourneyId: function(campId) {
                var journeyId = 0;
                var builderId = spApi.getBuilderIdFromPersonalizations(campId);
                spApi.journeyCamps.forEach(function(journey) {
                    if (journey.builderIds.indexOf(builderId) > -1) {
                        journeyId = journey.id;
                    }
                });
                return journeyId;
            },
            e: function(js) {
                return eval(js);
            },
            concat: function(camps, objects) {
                sQuery.each(objects, function(i, obj) {
                    camps.push(obj);
                });
                return camps;
            },
            isCurrentCampBM: function(builderID) {
                return sQuery.grep(spApi.bannerManagementCamps, function(camp) {
                    return camp.builderID == builderID;
                }).length !== 0;
            },
            getBMPersonalization: function(builderID) {
                return sQuery.grep(spApi.bannerManagementCamps, function(camp) {
                    return camp.builderID == builderID;
                })[0];
            },
            getCampOfThePage: function(campaignList) {
                try {
                    var mobileCamps = [];
                    var webCamps = [];
                    var tabletCamps = [];
                    spApi.conditionCheckList = [];
                    function collectCampaignsOnList(platformSpecificCampaignList, campaign) {
                        platformSpecificCampaignList.forEach(function(list) {
                            list.push(campaign);
                        });
                    }
                    ;sQuery.each(campaignList, function(index, campaign) {
                        if (spApi.isMobileCamp(campaign)) {
                            collectCampaignsOnList([mobileCamps], campaign);
                        } else if (spApi.isTabletCamp(campaign)) {
                            collectCampaignsOnList([tabletCamps], campaign);
                        } else if (spApi.isAllPagesCamp(campaign)) {
                            collectCampaignsOnList([webCamps, tabletCamps, mobileCamps], campaign);
                        } else {
                            collectCampaignsOnList([webCamps], campaign);
                        }
                    });
                    if (spApi.deviceDetect('PC')) {
                        campaignList = webCamps;
                    } else if (spApi.deviceDetect('Mobil')) {
                        campaignList = mobileCamps;
                    } else if (spApi.deviceDetect('Tablet')) {
                        campaignList = tabletCamps;
                    }
                    if (spApi.isMobileBrowser()) {
                        var isControlGroupAdaptive;
                        var infoProductType = '24';
                        function isCustomCampaign(campaign) {
                            return campaign.id.indexOf('c') > -1;
                        }
                        function campaignIsMultiDevice(campaign) {
                            return isCustomCampaign(campaign) || (campaign.productType == infoProductType && (spApi.notifies[campaign.id].mode == 'adaptive' || isControlGroupAdaptive));
                        }
                        function campaignIsSegmentedAsMultiDevice(segmentString) {
                            return (segmentString.indexOf('Mobil') > -1 || segmentString.indexOf('Tablet') > -1 || segmentString.indexOf('spApi.deviceDetect("All")') > -1);
                        }
                        sQuery.each(webCamps, function(index, webCamp) {
                            if (webCamp.platform == "tablet" || webCamp.platform == "mobile") {
                                return;
                            }
                            isControlGroupAdaptive = false;
                            if (webCamp.productType == '24' && spApi.isControlCamp(webCamp.id)) {
                                var personalizationId = spApi.getPersonalizationId(webCamp.id);
                                var personalizationVariations = spApi.personalizationCamps[personalizationId].variations;
                                sQuery.each(personalizationVariations, function(index, variation) {
                                    if (variation.varId != webCamp.id) {
                                        var tmpCamp = spApi.getCamp(variation.varId).camp;
                                        if (tmpCamp.productType == '24' && spApi.notifies[tmpCamp.id].mode == 'adaptive') {
                                            isControlGroupAdaptive = true;
                                        }
                                    }
                                });
                            }
                            if (campaignIsMultiDevice(webCamp)) {
                                var segment = webCamp.showIn.segment || [];
                                sQuery.each(segment, function(index, segmentId) {
                                    if (segmentId !== null) {
                                        var segmentString = spApi.rules[segmentId].test;
                                        if (campaignIsSegmentedAsMultiDevice(segmentString) && spApi.e(spApi.rules[segmentId].test)) {
                                            campaignList.push(webCamp);
                                        }
                                    }
                                });
                            }
                        });
                    } else {
                        campaignList = webCamps;
                    }
                    spApi.getPersonalizationCamp();
                    var now = Math.round(new Date() / 1000);
                    activeCamp = false;
                    spApi.activeCamps = [];
                    sQuery.each(campaignList, function(index, camp) {
                        if (camp.invalid) {
                            return true;
                        }
                        if (!spApi.checkVarSegment(camp)) {
                            return true;
                        }
                        if (!spApi.isCookieSupportEnabled()) {
                            return true;
                        }
                        camp.trigTimeCount = (typeof camp.trigTimeCount == "undefined") ? 0 : camp.trigTimeCount;
                        var dateChecked = (camp.activeDateStart < now && now < camp.activeDateEnd) ? true : false;
                        var showThis = true;
                        var hideThis = false;
                        var isFreqRuleOk = false;
                        var isFreqRuleExist = false;
                        if (!dateChecked) {
                            return true;
                        }
                        if (!hideThis && camp.showIn) {
                            if (camp.showIn.segment != undefined && camp.showIn.segment[0] != null) {
                                sQuery.each(camp.showIn.segment, function(i, id) {
                                    showThis = true;
                                    rule = spApi.rules[id];
                                    if (!spApi.ruleControl(rule, camp)) {
                                        showThis = false;
                                        return false;
                                    }
                                    if (!spApi.checkCampaignLanguage(camp)) {
                                        showThis = false;
                                    }
                                });
                            }
                            if (camp.showIn.trigger != undefined && camp.showIn.trigger[0] != null && camp.trigTimeCount == 0) {
                                var triggerStatus = false;
                                sQuery.each(camp.showIn.trigger, function(i, id) {
                                    rule = spApi.rules[id];
                                    if (!spApi.ruleControl(rule, camp)) {
                                        triggerStatus = triggerStatus || false;
                                    } else {
                                        triggerStatus = triggerStatus || true;
                                    }
                                });
                                showThis = showThis && triggerStatus;
                                if (!spApi.checkCampaignLanguage(camp)) {
                                    showThis = false;
                                }
                            }
                            if (typeof camp.showIn[0] != "undefined") {
                                sQuery.each(camp.showIn, function(i, id) {
                                    showThis = true;
                                    rule = spApi.rules[id];
                                    if (!spApi.ruleControl(rule, camp)) {
                                        showThis = false;
                                        return false;
                                    }
                                    if (!spApi.checkCampaignLanguage(camp)) {
                                        showThis = false;
                                    }
                                });
                            }
                            if (isFreqRuleExist)
                                showThis = showThis && isFreqRuleOk;
                        }
                        if (camp && camp.trigTimeCount > 0) {
                            sQuery.each(camp.showIn.trigger, function(i, id) {
                                rule = spApi.rules[id];
                                if (rule.test.indexOf("isRefContains") > -1) {
                                    var param = rule.test.split("'");
                                    if (document.referrer.indexOf(param[1])) {
                                        if (!sQuery.cookie("spref")) {
                                            var date = new Date();
                                            date.setTime(date.getTime() + (5 * 60 * 60 * 1000));
                                            sQuery.cookie('spref', document.referrer, {
                                                expires: date,
                                                path: '/'
                                            });
                                        }
                                        if (sQuery.cookie("spref").indexOf(param[1])) {
                                            if (spApi.ruleControl(rule, camp)) {
                                                var pref = sQuery.cookie('pref');
                                                if (!pref)
                                                    pref = 0;
                                                pref = parseInt(pref) + 1;
                                                sQuery.cookie("pref", pref, {
                                                    expires: 1,
                                                    path: '/'
                                                });
                                            }
                                        }
                                    }
                                    var pref = sQuery.cookie('pref');
                                    if (pref > camp.trigTimeCount) {
                                        showThis = true;
                                    } else {
                                        showThis = false;
                                    }
                                } else if (rule.test.indexOf("hasParameter") > -1 || rule.test.indexOf("getParameter") > -1) {
                                    if (spApi.ruleControl(rule, camp)) {
                                        var pprm = sQuery.cookie('pprm');
                                        if (!pprm)
                                            pprm = 0;
                                        pprm = parseInt(pprm) + 1;
                                        sQuery.cookie("pprm", pprm, {
                                            expires: 1,
                                            path: '/'
                                        });
                                        if (pprm > camp.trigTimeCount && spApi.e(rule.test)) {
                                            showThis = true;
                                        } else {
                                            showThis = false
                                        }
                                    } else {
                                        showThis = false;
                                    }
                                } else {
                                    if (spApi.ruleControl(rule, camp)) {
                                        var prl = sQuery.cookie('prl');
                                        if (!prl)
                                            prl = 0;
                                        prl = parseInt(prl) + 1;
                                        sQuery.cookie("prl", prl, {
                                            expires: 1,
                                            path: '/'
                                        });
                                        if (prl > camp.trigTimeCount && spApi.e(rule.test)) {
                                            showThis = true;
                                        } else {
                                            showThis = false
                                        }
                                    } else {
                                        showThis = false;
                                    }
                                }
                            });
                        }
                        if (camp.locationisActive == 1 && spApi.isMobileBrowser()) {
                            hideThis = true;
                            showThis = false;
                        } else {
                            if (camp.productType != 20 && sQuery.cookie('sp-noteTimer') != null) {
                                showThis = false;
                            }
                            if (spApi.isAudienceProduct(camp.id) && !spApi.storageData('sp-camp-' + camp.id) && showThis) {
                                spApi.sendAdAudience(camp);
                            }
                            var triggerIsActive = '0';
                            var showIfJoined = '0';
                            var infoSettings = spApi.notifies[camp.id];
                            if (camp.productType == 24) {
                                triggerIsActive = infoSettings.triggerIsActive;
                                var campCookie = JSON.parse(spApi.storageData('sp-camp-' + camp.id)) || {};
                                if (typeof campCookie['closed'] !== "undefined" && triggerIsActive == '1') {
                                    showThis = false;
                                }
                                if (triggerIsActive == '1' && typeof campCookie['closed'] == 'undefined' && typeof campCookie['joined'] !== 'undefined') {
                                    showThis = false;
                                }
                                var feedSettings = infoSettings.predictiveFeedSettings;
                                if (feedSettings !== null && typeof feedSettings === 'object' && Object.keys(feedSettings).length > 0) {
                                    showIfJoined = '1';
                                }
                                var campShowingStatus = infoSettings.locationConfig.showAlways;
                                if (campShowingStatus !== 'undefined' && campShowingStatus === 'true') {
                                    showIfJoined = '1';
                                }
                            }
                            if (!spApi.checkDailyDisplay(camp)) {
                                showThis = false;
                            }
                            if (showThis) {
                                if (spApi.checkConditionNeed(camp) && spApi.storageData('sp-camp-' + camp.id)) {
                                    return true;
                                }
                                if (camp.productType == 24) {
                                    var locationConfig = spApi.notifies[camp.id].locationConfig;
                                }
                                if ((spApi.spCampCheckStatus(camp.id, 'liked') || spApi.spCampCheckStatus(camp.id, 'joined')) && camp.productType != 20 && triggerIsActive != '1' && showIfJoined != '1') {
                                    return true;
                                }
                                if (camp.productType == 24 && locationConfig.type == "2") {
                                    spApi.showInlineCampaign(camp);
                                    return true;
                                }
                                if (camp.isVersus == 1 && !spApi.isFirstVersus) {
                                    if (spApi.sessionStorageGet('versus-closed-' + camp.id) !== 'true') {
                                        spApi.isFirstVersus = true;
                                        spApi.showCamp(camp, 0, true);
                                    }
                                    return true;
                                } else if (camp.isVersus == 1 && spApi.isFirstVersus) {
                                    spApi.logger('Multiple Versus camps skipping: ', camp);
                                    return true;
                                }
                                if (camp.isSocialProof == 1) {
                                    spApi.showCamp(camp);
                                    return true;
                                }
                                if (camp.productType == 58) {
                                    spApi.logger('info', 'Active campaign : ' + camp.id);
                                    spApi.showCamp(camp);
                                    return true;
                                }
                                spApi.activeCamps.push(camp);
                                if (sQuery.inArray(parseInt(camp.productType), spApi.paaProducts) > -1) {
                                    return true;
                                }
                                if (!activeCamp || parseInt(activeCamp.priority) > parseInt(camp.priority)) {
                                    activeCamp = camp;
                                }
                            }
                        }
                    });
                    if (!activeCamp)
                        return false;
                    spApi.activeCamp = activeCamp;
                    spApi.logger('info', 'Active campaign : ' + spApi.activeCamp.id);
                    return spApi.activeCamp;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getCampOfThePage',
                        bugType: 'product',
                        extraData: {
                            param1: campaignList
                        }
                    });
                }
            },
            showInlineCampaign: function(camp) {
                var selectedElement = spApi.notifies[camp.id].locationConfig.selectedElement;
                spApi.logger('info', 'Campaign is waiting for reference element:', camp.id);
                sQuery(selectedElement).elementLoadComplete(function() {
                    spApi.logger('info', 'Active inline campaign is ', camp.id);
                    spApi.showCamp(camp, 0);
                }, null, function() {
                    spApi.logger('warning', 'Inline campaign reference element not found:', camp.id);
                });
            },
            getPositionOfTheCamp: function(locationConfig, cssConfig) {
                try {
                    version = (typeof version === "undefined") ? 1 : version;
                    var positionSettings = new Array();
                    var saveWidth = locationConfig.spWindowWidth;
                    var saveHeight = locationConfig.spWindowHeight;
                    var realWidth = sQuery(window).width();
                    var realHeight = sQuery(window).height();
                    var spWidthDifferance = (realWidth - saveWidth) / 2;
                    if (typeof saveWidth === 'undefined') {
                        spWidthDifferance = 0;
                    }
                    var borderWidth = cssConfig.borderWidth;
                    if (typeof borderWidth === 'undefined' || borderWidth == '') {
                        borderWidth = 0;
                    } else {
                        borderWidth = cssConfig.borderWidth.replace('px', '') * 2;
                    }
                    var spFixed = 'fixed';
                    var positionLeft = locationConfig.positionLeft + spWidthDifferance;
                    var spWidthDifferanceControl = (locationConfig.positionLeft + Number(cssConfig.width) + borderWidth) >= saveWidth;
                    if (positionLeft < 0 || locationConfig.positionLeft <= 0) {
                        positionLeft = 0;
                    } else if ((positionLeft + Number(cssConfig.width) + borderWidth) > realWidth || spWidthDifferanceControl) {
                        positionLeft = realWidth - (Number(cssConfig.width) + borderWidth);
                    }
                    var positionTop = locationConfig.positionTop;
                    if (positionTop < 0 || locationConfig.positionTop <= 0) {
                        positionTop = 0;
                    }
                    if (spFixed == 'fixed' && ((positionTop + Number(cssConfig.height) + borderWidth) > realHeight || (positionTop + Number(cssConfig.height) + borderWidth + 1) >= saveHeight)) {
                        positionTop = realHeight - (Number(cssConfig.height) + borderWidth);
                    }
                    if ((locationConfig.positionType == 1 || locationConfig.positionType == 3) && sQuery(locationConfig.selectedElement).length > 0) {
                        positionLeft = sQuery(locationConfig.selectedElement).offset().left + locationConfig.positionLeft;
                        positionTop = sQuery(locationConfig.selectedElement).offset().top + locationConfig.positionTop;
                    }
                    positionSettings.positionLeft = positionLeft;
                    positionSettings.positionTop = positionTop;
                    positionSettings.spFixed = spFixed;
                    positionSettings.saveWidth = saveWidth;
                    positionSettings.saveHeight = saveHeight;
                    positionSettings.realWidth = realWidth;
                    positionSettings.realHeight = realHeight;
                    return positionSettings;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getPositionOfTheCamp',
                        bugType: 'product',
                        extraData: {
                            param1: locationConfig,
                            param2: cssConfig
                        }
                    });
                }
            },
            showCamp: function(camp, viewType) {
                try {
                    if (!spApi.isCookieSupportEnabled()) {
                        return false;
                    }
                    if (camp.productType == 30) {
                        spApi.activeWebPushes.push(camp);
                        spApi.setTriggerPushes(spApi.pmData);
                        return false;
                    }
                    var getCouponCode = function(inlineMode) {
                        var notifyType = inlineMode === true ? 'inline' : '';
                        var couponCodeKeyPrefix = 'sp-info-c-';
                        pm({
                            type: 'getOtherCookies',
                            data: {
                                key: couponCodeKeyPrefix + camp.id
                            },
                            target: sQuery('#spWorker')[0].contentWindow,
                            success: function(couponCode) {
                                if (couponCode == null) {
                                    var couponCodeUrl = spApi.apiUrl + 'ajax.php?' + couponSection;
                                    sQuery.ajax({
                                        type: "POST",
                                        url: couponCodeUrl,
                                        data: {
                                            referer: top.location.href,
                                            campId: camp.id,
                                            campType: 'bounce',
                                            notifyType: notifyType
                                        },
                                        cache: false,
                                        contentType: 'application/json',
                                        dataType: 'jsonp',
                                        crossDomain: true
                                    });
                                } else {
                                    sQuery('.insdrNotifyCoupon').find('.editable').text(couponCode);
                                }
                            }
                        });
                    };
                    if (!viewType)
                        viewType = 0;
                    if (!camp || disable_camp)
                        return;
                    if (sQuery.inArray(parseInt(camp.productType), [24, 58]) > -1) {
                        viewType = 1;
                    } else if (sQuery.inArray(parseInt(camp.productType), spApi.paaProducts) > -1) {
                        viewType = null;
                    }
                    if (viewType == 1) {
                        if (false) {} else if (camp.productType == 24 && spApi.notifies[camp.id].locationConfig.frameless === 'true') {
                            (function(camp) {
                                var effectConfig = spApi.notifies[camp.id].effectConfig;
                                var hasEffect = effectConfig && effectConfig.open && effectConfig.close;
                                var gridPositionList = {
                                    'top-left': 'ins-pos-top-left',
                                    'top-center': 'ins-pos-top-center',
                                    'top-right': 'ins-pos-top-right',
                                    'middle-left': 'ins-pos-middle-left',
                                    'middle-center': 'ins-pos-middle-center',
                                    'middle-right': 'ins-pos-middle-right',
                                    'bottom-left': 'ins-pos-bottom-left',
                                    'bottom-center': 'ins-pos-bottom-center',
                                    'bottom-right': 'ins-pos-bottom-right'
                                };
                                var addFramelessCss = function(outerCss, innerCss) {
                                    var cssText = outerCss + innerCss;
                                    if (sQuery('.ins-outer-stylesheet-' + camp.id).length > 0) {
                                        sQuery('.ins-outer-stylesheet-' + camp.id).remove();
                                    }
                                    var style = document.createElement('style');
                                    style.type = 'text/css';
                                    style.className = 'ins-outer-stylesheet ins-outer-stylesheet-' + camp.id;
                                    style.innerHTML = cssText;
                                    document.querySelector('head').appendChild(style);
                                };
                                var setJavascriptCode = function(jsCode) {
                                    if (sQuery('.ins-camp-frameless-js-' + camp.id).length > 0) {
                                        spApi.eventManager().refresh();
                                        sQuery(document).trigger('framelessInited' + camp.id);
                                        return false;
                                    }
                                    var script = document.createElement('script');
                                    script.type = 'text/javascript';
                                    script.innerHTML = jsCode;
                                    script.className = 'ins-camp-frameless-js ins-camp-frameless-js-' + camp.id;
                                    document.querySelector('head').appendChild(script);
                                };
                                var getPositionClass = function() {
                                    var locationConfig = spApi.notifies[camp.id].locationConfig;
                                    var xDirection = locationConfig.gridConfig.xDirection;
                                    var yDirection = locationConfig.gridConfig.yDirection;
                                    return gridPositionList[yDirection + '-' + xDirection];
                                };
                                var getOverlayElement = function() {
                                    return sQuery('#ins-frameless-overlay');
                                };
                                var getOverlaySettings = function() {
                                    var overlaySettings = spApi.notifies[camp.id].cssConfig;
                                    return {
                                        'overlay-close': overlaySettings['overlay-close'],
                                        'overlay-color': overlaySettings['overlay-color'],
                                        'overlay-opacity': overlaySettings['overlay-opacity'],
                                        'overlay-visibility': overlaySettings['overlay-visibility']
                                    };
                                };
                                var setOverlaySettings = function() {
                                    var overlaySettings = getOverlaySettings();
                                    var displayOverlay = 'block';
                                    var preventLandscapeElement = sQuery('.ins-prevent-landscape-variable');
                                    if (preventLandscapeElement.exists() && window.innerWidth > window.innerHeight && preventLandscapeElement.data('value') === 'none') {
                                        displayOverlay = 'none';
                                    }
                                    getOverlayElement().css({
                                        'display': displayOverlay,
                                        'opacity': overlaySettings['overlay-opacity'],
                                        'background-color': overlaySettings['overlay-color'],
                                    });
                                };
                                var showFramelessOverlay = function(campId) {
                                    var overlaySettings = getOverlaySettings();
                                    if (overlaySettings['overlay-visibility'] === 'true') {
                                        if (getOverlayElement().length === 0) {
                                            sQuery('body').append('<div id="ins-frameless-overlay" close-on-click=' + overlaySettings['overlay-close'] + ' data-camp-id=' + campId + '></div>');
                                        }
                                        setOverlaySettings();
                                    }
                                };
                                var openWithEffect = function(openEffect) {
                                    var notificationContent = document.getElementsByClassName('ins-notification-content-' + camp.id)[0];
                                    sQuery(notificationContent).effective(openEffect);
                                };
                                var showOnPageTemplate = function(previewWrap) {
                                    previewWrap.className += ' ' + getPositionClass();
                                    document.body.appendChild(previewWrap);
                                };
                                var showRelativePositionTemplate = function(locationConfig, previewWrap) {
                                    var selectedElement = sQuery(locationConfig.relativePosition.element);
                                    var $previewContainer = sQuery(previewWrap);
                                    var templateMargin = 15;
                                    function calculatePosition() {
                                        var elementPosition = {
                                            x: selectedElement.offset().left,
                                            y: selectedElement.offset().top
                                        };
                                        var relativePosition = {
                                            x: parseInt(locationConfig.relativePosition.position.x),
                                            y: parseInt(locationConfig.relativePosition.position.y)
                                        };
                                        var left = elementPosition.x - relativePosition.x - templateMargin;
                                        var top = elementPosition.y - relativePosition.y - templateMargin;
                                        if (relativePosition.y == 0) {
                                            top = selectedElement.height() + elementPosition.y;
                                        }
                                        return {
                                            left: left,
                                            top: top
                                        };
                                    }
                                    function calculatePositionForMobileResolution() {
                                        $previewContainer.css('top', calculatePosition().top);
                                    }
                                    if (!spApi.isMobileBrowser()) {
                                        var calculatedPosition = calculatePosition();
                                        $previewContainer.css({
                                            left: calculatedPosition.left,
                                            top: calculatedPosition.top,
                                            position: 'absolute'
                                        });
                                    }
                                    function reCalculateAndPosition() {
                                        if (spApi.isMobileBrowser()) {
                                            calculatePositionForMobileResolution();
                                        } else {
                                            var calculatedPosition = calculatePosition();
                                            $previewContainer.css({
                                                left: calculatedPosition.left,
                                                top: calculatedPosition.top
                                            });
                                        }
                                    }
                                    sQuery(window).unbind('resize.insFrameless').on('resize.insFrameless', function() {
                                        reCalculateAndPosition();
                                    });
                                    sQuery(window).unbind('scroll.insFrameless').on('scroll.insFrameless', function() {
                                        reCalculateAndPosition();
                                    });
                                    sQuery('body').append($previewContainer);
                                    if (spApi.isMobileBrowser()) {
                                        calculatePositionForMobileResolution();
                                    }
                                };
                                var showInPageTemplate = function(locationConfig, previewWrap, notificationContent) {
                                    var $selectedElement = sQuery(locationConfig.selectedElement);
                                    var $notificationContainer = sQuery(notificationContent);
                                    var $previewContainer = sQuery(previewWrap);
                                    $notificationContainer.css({
                                        'position': 'relative',
                                        'top': 'initial',
                                        'left': 'initial',
                                        'margin-left': locationConfig.left,
                                        'margin-top': locationConfig.top,
                                        'display': 'inline-block'
                                    });
                                    $notificationContainer.addClass('inline-resolution');
                                    switch (locationConfig.insertAction) {
                                    case 'before':
                                        $selectedElement.before($previewContainer);
                                        break;
                                    case 'after':
                                        $selectedElement.after($previewContainer);
                                        break;
                                    case 'insert-end':
                                        $selectedElement.append($previewContainer);
                                        break;
                                    case 'insert-beginning':
                                        $selectedElement.prepend($previewContainer);
                                        break;
                                    default:
                                        break;
                                    }
                                };
                                var visibleCampaign = function(locationConfig, previewWrap, campaignData) {
                                    if (typeof spApi.notifies[camp.id].locationConfig.socialProofCG !== 'undefined' && spApi.notifies[camp.id].locationConfig.socialProofCG === 'true') {
                                        var logData = {
                                            key: 'sp-camp-' + camp.id,
                                            obj: {
                                                'step1-displayed': true
                                            },
                                            campId: camp.id
                                        };
                                        spApi.updateCookie(logData);
                                    } else {
                                        sQuery(previewWrap).css({
                                            'display': 'block',
                                            'visibility': 'visible'
                                        }).promise().done(function() {
                                            sQuery(document).trigger('framelessCampaignShown' + camp.id);
                                            spApi.triggerInspectorObserver(camp.id);
                                            setJavascriptCode(campaignData.javascriptCode);
                                            showFramelessOverlay(camp.id);
                                            if (typeof hasEffect !== 'undefined' && hasEffect) {
                                                openWithEffect(effectConfig.open);
                                            }
                                            spApi.bindAutoClose(camp, (function() {
                                                sQuery(document).trigger('closeCampaign' + camp.id);
                                            }
                                            ));
                                            var logData = {
                                                key: 'sp-camp-' + camp.id,
                                                obj: {
                                                    'step1-displayed': true
                                                },
                                                campId: camp.id
                                            };
                                            spApi.updateCookie(logData);
                                        });
                                    }
                                };
                                var checkFirstTriggerStatus = function(notifySettings) {
                                    var firstTrigger = false;
                                    var campCookie = spApi.storageData('sp-camp-' + camp.id);
                                    var triggerHide = false;
                                    if (campCookie !== null) {
                                        campCookie = JSON.parse(campCookie);
                                        triggerHide = campCookie.triggerHide;
                                    }
                                    if (triggerHide === false || triggerHide === undefined) {
                                        if (notifySettings.triggerIsActive === '1' && camp.trigTimeOut === '-1') {
                                            firstTrigger = true;
                                        } else {
                                            firstTrigger = false;
                                        }
                                    } else if (triggerHide == '1') {
                                        firstTrigger = false;
                                    } else if (triggerHide == '0') {
                                        firstTrigger = true;
                                    }
                                    return firstTrigger;
                                };
                                var showFramelessCampaign = function(campaignData) {
                                    var notifySettings = spApi.notifies[camp.id];
                                    var locationConfig = notifySettings.locationConfig;
                                    var isInlineTemplate = locationConfig.type == '2';
                                    var isRelativeTemplate = locationConfig.relativePositioning == 'true';
                                    if ((isInlineTemplate && !sQuery(locationConfig.selectedElement).exists()) || (isRelativeTemplate && !sQuery(locationConfig.relativePosition.element).exists())) {
                                        spApi.logger('warning', 'Inline campaign reference element not found:', camp.id);
                                        return false;
                                    }
                                    addFramelessCss(campaignData.outerCss, campaignData.innerCss);
                                    var previewWrap = document.createElement('div');
                                    previewWrap.className = 'ins-preview-wrapper ins-preview-wrapper-' + camp.id;
                                    var contentWrapper = document.createElement('div');
                                    contentWrapper.className = 'ins-content-wrapper ins-content-wrapper-' + camp.id;
                                    var manualPositionSettings = locationConfig.manualPositionConfig || {};
                                    if (manualPositionSettings.manualPositionIsActive === 'true') {
                                        contentWrapper.style.setProperty('position', 'relative', 'important');
                                        contentWrapper.style.setProperty('left', (manualPositionSettings.left - manualPositionSettings.right) + 'px', 'important');
                                        contentWrapper.style.setProperty('top', (manualPositionSettings.top - manualPositionSettings.bottom) + 'px', 'important');
                                    }
                                    var notificationContent = document.createElement('div');
                                    notificationContent.className = 'ins-notification-content ins-notification-content-' + camp.id;
                                    notificationContent.setAttribute('data-camp-id', camp.id);
                                    sQuery.each(spApi.notifies[camp.id].cssConfig, function(property, value) {
                                        notificationContent.style.setProperty(property, value, 'important');
                                    });
                                    previewWrap.style.setProperty('display', 'none');
                                    previewWrap.style.setProperty('visibility', 'hidden');
                                    previewWrap.appendChild(contentWrapper);
                                    contentWrapper.appendChild(notificationContent);
                                    notificationContent.innerHTML = campaignData.content;
                                    if (isInlineTemplate) {
                                        showInPageTemplate(locationConfig, previewWrap, notificationContent);
                                    } else if (locationConfig.gridIsActive == 'true') {
                                        showOnPageTemplate(previewWrap);
                                    } else if (isRelativeTemplate) {
                                        showRelativePositionTemplate(locationConfig, previewWrap);
                                    }
                                    var framelessEvent = document.createEvent('CustomEvent');
                                    framelessEvent.initCustomEvent('framelessReady', true, true, {
                                        campID: camp.id
                                    });
                                    document.dispatchEvent(framelessEvent);
                                    if (notifySettings.triggerIsActive == '1') {
                                        spApi.setTrigger(notifySettings.triggerSettings, function() {
                                            visibleCampaign(locationConfig, previewWrap, campaignData);
                                        });
                                    }
                                    if (spApi.notifies[camp.id].waitForKKBData) {
                                        esCountAnalytics(function(countAnalytics) {
                                            window.socialProofVarId = camp.id;
                                            esLiveFeed(function(liveFeed) {
                                                var socialProofData = spApi.notifies[camp.id].socialProofSettings;
                                                var minimum = socialProofData.min;
                                                var maximum = socialProofData.max;
                                                var random = socialProofData.random;
                                                var textArea = campaignData.content;
                                                var showSocialProofCamp = false;
                                                var lastPurchaseRequired = false;
                                                function createLastPurchaseData(lastPurchasedDate) {
                                                    if (typeof maximum === 'undefined' || typeof minimum === 'undefined') {
                                                        return 0;
                                                    }
                                                    var lastPurchase = new Date(lastPurchasedDate);
                                                    var now = new Date();
                                                    var diff = now - lastPurchase;
                                                    var totalMinutes = Math.ceil((now.getTime() - lastPurchase.getTime()) / (1000 * 60));
                                                    var diffInDays = Math.floor(diff / 86400000);
                                                    var diffInHours = Math.floor((diff % 86400000) / 3600000);
                                                    var diffInMinutes = Math.round(((diff % 86400000) % 3600000) / 60000);
                                                    if (totalMinutes < minimum['@lastPurchase'] || totalMinutes > maximum['@lastPurchase']) {
                                                        return false;
                                                    }
                                                    var purchaseString = '';
                                                    var dateTrans = typeof spApi.translations[camp.lang] !== 'undefined' ? spApi.translations[camp.lang].date : spApi.translations['en_US'].date;
                                                    if (diffInDays > 0) {
                                                        purchaseString += diffInDays + ' ' + spApi.pluralForm.get(camp.lang, diffInDays, dateTrans.form1.day, (dateTrans.form2 || []).day, (dateTrans.form3 || []).day, (dateTrans.form4 || []).day).toLowerCase() + ' ';
                                                    }
                                                    if (diffInHours > 0) {
                                                        purchaseString += diffInHours + ' ' + spApi.pluralForm.get(camp.lang, diffInHours, dateTrans.form1.hour, (dateTrans.form2 || []).hour, (dateTrans.form3 || []).hour, (dateTrans.form4 || []).hour).toLowerCase() + ' ';
                                                    }
                                                    if (diffInMinutes > 0) {
                                                        purchaseString += diffInMinutes + ' ' + spApi.pluralForm.get(camp.lang, diffInMinutes, dateTrans.form1.minute, (dateTrans.form2 || []).minute, (dateTrans.form3 || []).minute, (dateTrans.form4 || []).minute).toLowerCase();
                                                    }
                                                    if (purchaseString.legnth == 0) {
                                                        return false;
                                                    }
                                                    return purchaseString;
                                                }
                                                ;var kkbData = {
                                                    '@instantView': countAnalytics.instantView,
                                                    '@dailyView': countAnalytics.dailyView,
                                                    '@dailyPurchase': liveFeed.purchase.dailyPurchase,
                                                    '@instantPurchase': liveFeed.purchase.instantPurchase,
                                                    '@inBasketCount': liveFeed.inBasketCount,
                                                    '@lastPurchase': createLastPurchaseData(liveFeed.lastPurchasedDate)
                                                };
                                                sQuery.each(spApi.notifies[camp.id]['kkbSettings'], function(key, value) {
                                                    if (key === '@lastPurchase' && kkbData[key] != false && textArea.indexOf(key) > -1) {
                                                        textArea = textArea.replace(new RegExp(key,'g'), kkbData[key]);
                                                        showSocialProofCamp = true;
                                                    }
                                                    if (key === '@lastPurchase' && kkbData[key] == false && textArea.indexOf(key) > -1) {
                                                        lastPurchaseRequired = true;
                                                    }
                                                    if (key !== '@lastPurchase') {
                                                        if (textArea.indexOf(key) > -1 && kkbData[key] > 0 && minimum[key] <= kkbData[key]) {
                                                            textArea = textArea.replace(new RegExp(key,'g'), kkbData[key]);
                                                            showSocialProofCamp = true;
                                                        } else if (textArea.indexOf(key) > -1 && minimum[key] >= kkbData[key]) {
                                                            showSocialProofCamp = false;
                                                        }
                                                    }
                                                });
                                                notificationContent.innerHTML = textArea;
                                                if (showSocialProofCamp && !lastPurchaseRequired) {
                                                    if (spApi.checkConditionNeed(camp)) {
                                                        spApi.setConditionCallback(camp, function() {
                                                            visibleCampaign(locationConfig, previewWrap, campaignData);
                                                        });
                                                    } else {
                                                        visibleCampaign(locationConfig, previewWrap, campaignData);
                                                    }
                                                }
                                            });
                                        }, camp.id);
                                    } else {
                                        if (spApi.checkConditionNeed(camp)) {
                                            if (checkFirstTriggerStatus(notifySettings)) {
                                                spApi.setConditionCallback(camp, function() {
                                                    spApi.showTrigger(camp.id, notifySettings.triggerSettings);
                                                });
                                            } else {
                                                spApi.setConditionCallback(camp, function() {
                                                    visibleCampaign(locationConfig, previewWrap, campaignData);
                                                });
                                            }
                                        } else {
                                            if (checkFirstTriggerStatus(notifySettings)) {
                                                spApi.showTrigger(camp.id, notifySettings.triggerSettings);
                                            } else {
                                                visibleCampaign(locationConfig, previewWrap, campaignData);
                                            }
                                        }
                                    }
                                    var bindFramelessCampaignCallback = function(type) {
                                        sQuery.each(camp.callbacks[type], function(key, callback) {
                                            spApi.campEventControl(type, callback);
                                        });
                                    };
                                    bindFramelessCampaignCallback('show');
                                    sQuery(document).on('framelessClose' + camp.id, function() {
                                        bindFramelessCampaignCallback('close');
                                    });
                                };
                                window['getFramelessData' + camp.id] = function() {}
                                ;
                                var getFramelessCampaignData = function() {
                                    sQuery.ajax({
                                        url: spApi.apiUrl + 'ajax.php?t=getFramelessData',
                                        type: 'GET',
                                        data: {
                                            campID: camp.id,
                                            genDate: spApi.genDate
                                        },
                                        dataType: 'jsonp',
                                        async: spApi.isAjaxAsync,
                                        jsonpCallback: 'getFramelessData' + camp.id,
                                        success: function(campaignData) {
                                            setTimeout(function() {
                                                showFramelessCampaign(campaignData);
                                            }, camp.trigTimeOut * 1000);
                                        }
                                    });
                                };
                                var loadFramelessJS = function() {
                                    if (sQuery('#ins-frameless-js').length > 0) {
                                        getFramelessCampaignData();
                                        return;
                                    }
                                    var script = document.createElement('script');
                                    script.setAttribute('id', 'ins-frameless-js');
                                    script.addEventListener('load', getFramelessCampaignData, false);
                                    document.getElementsByTagName('head')[0].appendChild(script);
                                    script.setAttribute('src', spApi.staticUrl + 'js/frameless.min.js?v=1.1.14');
                                };
                                if (sQuery('.ins-frameless-css-' + camp.id).length > 0) {
                                    getFramelessCampaignData();
                                } else {
                                    sQuery('.ins-frameless-css-' + camp.id).remove();
                                    var link = document.createElement('link');
                                    link.setAttribute('class', 'ins-frameless-css ins-frameless-css-' + camp.id);
                                    link.setAttribute('rel', 'stylesheet');
                                    link.setAttribute('type', 'text/css');
                                    link.setAttribute('media', 'screen');
                                    link.addEventListener('load', loadFramelessJS, false);
                                    document.getElementsByTagName('head')[0].appendChild(link);
                                    link.setAttribute('href', spApi.staticUrl + 'css/frameless.css?v=0.5');
                                }
                            }
                            )(camp);
                        } else if (camp.productType == 24 && spApi.notifies[camp.id].locationConfig.type != '2') {
                            var overlayClose = false;
                            var notifySettings = spApi.notifies[camp.id];
                            var couponStatus = spApi.notifies[camp.id].notifCpnStatus;
                            var couponSection = 't=getInfoCoupon';
                            var notificationFunctions = {
                                highlightElement: function(config) {
                                    var highlightConfig = config.highlightConfig;
                                    var effectConfig = config.effectConfig;
                                    highlightConfig.onClose = function() {
                                        var cookieData = {
                                            key: 'sp-camp-' + camp.id,
                                            obj: {
                                                'closed': true
                                            },
                                            campId: camp.id
                                        };
                                        spApi.updateCookie(cookieData);
                                        spApi.worker.send('do-logging', {
                                            type: 'camp-step1-close',
                                            campId: camp.id
                                        });
                                        if (effectConfig instanceof Object && typeof effectConfig.close !== "undefined") {
                                            effectConfig.close.dialog.complete = function() {
                                                sQuery.fancybox.close();
                                            }
                                            sQuery('.sp-fancybox-inner').effective(effectConfig.close);
                                        } else {
                                            sQuery.fancybox.close();
                                        }
                                    }
                                    ;
                                    highlightConfig.paddingLeft = Number(highlightConfig.paddingLeft);
                                    highlightConfig.paddingTop = Number(highlightConfig.paddingTop);
                                    highlightConfig.scroll = sQuery.parseJSON(highlightConfig.scroll);
                                    highlightConfig.closeOnEsc = sQuery.parseJSON(highlightConfig.closeOnEsc);
                                    highlightConfig.closeOnClick = sQuery.parseJSON(highlightConfig.closeOnClick);
                                    spApi.highlight(highlightConfig.highlightedElements[0], highlightConfig);
                                    if (typeof highlightConfig.highlightedElements !== 'undefined' && highlightConfig.highlightedElements.length > 0) {
                                        var highlightedElements = highlightConfig.highlightedElements.join();
                                    } else {
                                        var highlightedElements = '';
                                    }
                                    sQuery(highlightConfig.highlightedElements[0] + ',' + highlightedElements).live('click', function() {
                                        var cookieData = {
                                            key: 'sp-camp-' + camp.id,
                                            obj: {
                                                'joined': true
                                            },
                                            campId: camp.id
                                        };
                                        spApi.updateCookie(cookieData);
                                        spApi.worker.send('do-logging', {
                                            type: 'camp-join',
                                            campId: camp.id
                                        });
                                        sQuery.fancybox.close();
                                        spApi.mask.closeSlient();
                                    });
                                },
                                visibleNotification: function(element, config) {
                                    sQuery('#insBeforeStyle').remove();
                                    pm({
                                        target: sQuery(element + ' .sp-fancybox-iframe')[0].contentWindow,
                                        type: 'resizeTrigger'
                                    });
                                    sQuery(element + ' .sp-fancybox-overlay').css('visibility', 'visible');
                                    sQuery(element).css({
                                        "display": "block",
                                        "visibility": "visible"
                                    }).promise().done(function() {
                                        spApi.triggerInspectorObserver(camp.id);
                                        if (config.effectConfig instanceof Object) {
                                            if (typeof config.effectConfig.open != "undefined") {
                                                sQuery(element + ' .sp-fancybox-skin').effective(config.effectConfig.open);
                                            }
                                        }
                                        if (typeof config !== "undefined" && config.locationConfig.type == '3') {
                                            notificationFunctions.highlightElement(config);
                                        }
                                        var logData = {
                                            key: 'sp-camp-' + camp.id,
                                            obj: {
                                                'step1-displayed': true
                                            },
                                            campId: camp.id
                                        };
                                        spApi.updateCookie(logData);
                                        if (couponStatus == '1' && spApi.checkConditionNeed(camp)) {
                                            getCouponCode();
                                        }
                                        spApi.bindAutoClose(camp);
                                        sQuery.each(camp.callbacks.show, function(key, callback) {
                                            spApi.campEventControl('show', callback);
                                        });
                                        try {
                                            pm({
                                                target: sQuery(element + ' .sp-fancybox-iframe')[0].contentWindow,
                                                type: 'startCountdown'
                                            });
                                        } catch (err) {
                                            spApi.errLog(err, {
                                                logType: 'startCountdown',
                                                bugType: 'partner',
                                                extraData: {
                                                    campId: camp.id,
                                                    element: element
                                                }
                                            });
                                        }
                                    });
                                },
                                hideNotification: function(element) {
                                    var cookieData = {
                                        key: 'sp-camp-' + spApi.activeCamp.id,
                                        obj: {
                                            'triggerHide': '0'
                                        },
                                        campId: camp.id
                                    };
                                    spApi.updateCookie(cookieData);
                                    if (typeof spApi.mask !== 'undefined' && typeof spApi.mask.isLoaded() !== "undefined") {
                                        spApi.mask.closeSlient();
                                    }
                                    sQuery(element).css({
                                        "display": "none",
                                        "visibility": "hidden"
                                    });
                                },
                                showNotification: function() {
                                    sQuery('body').append('<style id="insBeforeStyle">.sp-fancybox-wrap {top: -9999px !important; }</style>');
                                    var urlParams = '';
                                    if (spApi.checkConditionNeed(camp)) {
                                        urlParams += '&campType=bounce';
                                    }
                                    function setZoomLevelOfNotification() {
                                        sQuery('.sp-fancybox-wrap').css({
                                            'zoom': (100 / sQuery('body').css('zoom')) / 100
                                        });
                                    }
                                    sQuery(window).resize(function() {
                                        setZoomLevelOfNotification();
                                    });
                                    sQuery.fancybox({
                                        fitToView: false,
                                        autoSize: false,
                                        closeClick: false,
                                        padding: 0,
                                        margin: 0,
                                        openEffect: 'none',
                                        openSpeed: 1500,
                                        scrolling: 'no',
                                        closeEffect: 'none',
                                        helpers: {
                                            overlay: null
                                        },
                                        keys: {
                                            next: null,
                                            prev: null,
                                            toggle: null,
                                            play: null
                                        },
                                        type: 'iframe',
                                        href: spApi.frameUrl + "?viewType=1&id=" + camp.id + "&appType=" + camp.productType + "&pageUrl=" + spApi.urlencode(window.location.href) + urlParams + "&version=" + spApi.genDate,
                                        beforeShow: function() {
                                            sQuery('.sp-fancybox-wrap').css('visibility', 'hidden');
                                            setZoomLevelOfNotification();
                                            sQuery('.sp-fancybox-wrap').addClass('sp-advanced-css-' + camp.id);
                                            var advancedCssClass = '.sp-advanced-css-' + camp.id
                                            sQuery(advancedCssClass + ' .sp-fancybox-iframe').load(function() {
                                                sQuery(advancedCssClass + ' .sp-fancybox-iframe').pm(function() {
                                                    return iframeConfig;
                                                }, function(config) {
                                                    var cssConfig = config.cssConfig;
                                                    var locationConfig = config.locationConfig;
                                                    var highlightConfig = config.highlightConfig;
                                                    var effectConfig = config.effectConfig;
                                                    var allConfig = {
                                                        cssConfig: cssConfig,
                                                        locationConfig: locationConfig,
                                                        highlightConfig: highlightConfig,
                                                        effectConfig: effectConfig
                                                    };
                                                    var positionSettings = {
                                                        positionLeft: locationConfig.left,
                                                        positionTop: locationConfig.top,
                                                        positionType: locationConfig.type,
                                                        spWindowWidth: locationConfig.windowWidth,
                                                        spWindowHeight: locationConfig.windowHeight
                                                    }
                                                    var location = {
                                                        positionLeft: Number(positionSettings.positionLeft),
                                                        positionTop: Number(positionSettings.positionTop),
                                                        positionType: Number(positionSettings.positionType),
                                                        position: locationConfig.position,
                                                        spWindowWidth: Number(positionSettings.spWindowWidth),
                                                        spWindowHeight: Number(positionSettings.spWindowHeight),
                                                        selectedElement: locationConfig.selectedElement
                                                    };
                                                    overlayClose = cssConfig.overlayClose;
                                                    var gridIsActive = typeof locationConfig.gridIsActive !== 'undefined' ? (locationConfig.gridIsActive === true || locationConfig.gridIsActive === 'true') : false;
                                                    var positionTop, positionRight, positionBottom, positionLeft, positionFixed, margins;
                                                    if (gridIsActive && config.mode != 'adaptive') {
                                                        positionTop = locationConfig.top;
                                                        positionLeft = locationConfig.left;
                                                        positionRight = 'right: ' + locationConfig.right + ' !important;';
                                                        positionBottom = 'bottom: ' + locationConfig.bottom + ' !important;';
                                                        positionFixed = 'fixed';
                                                        margins = 'margin-left: ' + locationConfig.marginLeft + ' !important; margin-top: ' + locationConfig.marginTop + ' !important;';
                                                    } else {
                                                        var position = spApi.getPositionOfTheCamp(location, cssConfig);
                                                        positionTop = position.positionTop + 'px';
                                                        positionLeft = position.positionLeft + 'px';
                                                        positionRight = '';
                                                        positionBottom = '';
                                                        margins = '';
                                                    }
                                                    sQuery('body').append('<style>' + advancedCssClass + ' .sp-fancybox-skin { background-color: transparent !important; box-shadow: ' + '0 0 0 0' + ' !important; z-index: 999999}' + advancedCssClass + ' .sp-fancybox-close { display: none !important; }' + advancedCssClass + ' .sp-fancybox-iframe { border-radius: ' + cssConfig.borderRadius + ' !important; border-width: ' + cssConfig.borderWidth + ' !important; border-style: ' + cssConfig.borderStyle + ' !important; border-color: ' + cssConfig.borderColor + ' !important; -webkit-box-sizing: border-box !important; -moz-box-sizing: border-box !important; box-sizing: border-box !important; }' + advancedCssClass + ' .sp-fancybox-inner { overflow: hidden !important; box-shadow: ' + cssConfig.shadow + ' !important; border-radius: ' + cssConfig.borderRadius + ' !important;}' + '</style>');
                                                    if (config.mode == 'adaptive') {
                                                        sQuery('.sp-fancybox-wrap, .sp-fancybox-skin, .sp-fancybox-outer, .sp-fancybox-inner, .sp-fancybox-iframe').addClass('adaptive-resolution');
                                                        sQuery('.sp-fancybox-wrap').addClass('adaptive-position');
                                                        if (gridIsActive) {
                                                            sQuery('.sp-fancybox-wrap').addClass(locationConfig.xPositionClass).addClass(locationConfig.yPositionClass);
                                                        }
                                                        if (cssConfig.autofitSizeReference) {
                                                            sQuery('.sp-fancybox-inner', '.sp-advanced-css-' + camp.id).css({
                                                                'max-width': cssConfig.autofitSizeReference['max-width'] + 'px',
                                                                'max-height': cssConfig.autofitSizeReference['max-height'] + 'px',
                                                                'width': '100%'
                                                            });
                                                            sQuery('body').append('<style>' + advancedCssClass + ' .adaptive-resolution, ' + advancedCssClass + '.adaptive-resolution { max-width: ' + cssConfig.autofitSizeReference['max-width'] + 'px !important; max-height: ' + cssConfig.autofitSizeReference['max-height'] + 'px !important;' + '</style>');
                                                            sQuery(window).resize((function context() {
                                                                if (!sQuery('.sp-fancybox-inner', '.sp-advanced-css-' + camp.id).exists())
                                                                    return;
                                                                var originalWidth = Number(sQuery('.sp-fancybox-inner', '.sp-advanced-css-' + camp.id).css('max-width').replace('px', ''));
                                                                var originalHeight = Number(sQuery('.sp-fancybox-inner', '.sp-advanced-css-' + camp.id).css('max-height').replace('px', ''));
                                                                var viewportWidth = sQuery(window).width();
                                                                var newHeight = (originalHeight * viewportWidth) / originalWidth;
                                                                if (originalWidth <= sQuery(window).width())
                                                                    newHeight = originalHeight;
                                                                sQuery('.adaptive-autofit-css-' + camp.id).remove();
                                                                sQuery('body').append('<style class="adaptive-autofit-css-' + camp.id + '">' + advancedCssClass + ' .adaptive-resolution, ' + advancedCssClass + '.adaptive-resolution { ' + 'height: ' + newHeight + 'px !important; ' + 'width: 100% !important;' + '</style>');
                                                                return context;
                                                            }
                                                            )());
                                                        }
                                                        if (typeof config.adaptiveSettings.outerCss !== 'undefined') {
                                                            sQuery('body').append('<style id="insider-outer-css">' + config.adaptiveSettings.outerCss + '.insider-ios-fixed { position: absolute !important; top: 0 !important; margin-top: 10px !important; }' + '</style>');
                                                        }
                                                    } else {
                                                        var notificationPosition = typeof positionFixed !== 'undefined' ? 'position: ' + positionFixed + '!important;' : 'position: absolute!important;';
                                                        sQuery('body').append('<style>' + advancedCssClass + ', ' + advancedCssClass + ' .sp-fancybox-inner { width: ' + cssConfig.width + 'px !important; }' + advancedCssClass + ' { top: ' + positionTop + ' !important; left: ' + positionLeft + ' !important; ' + positionRight + positionBottom + notificationPosition + margins + '}' + '</style>');
                                                        sQuery('body').append('<style id="insdrInfoHeightStyle-' + camp.id + '">' + advancedCssClass + ' .sp-fancybox-inner { height: ' + cssConfig.height + 'px !important; }' + '</style>');
                                                    }
                                                    if (cssConfig.overlay == 'block' || cssConfig.overlay == 1) {
                                                        sQuery('body').append('<style>' + advancedCssClass + ' .sp-fancybox-overlay { width: 100%; height: 100%; position: fixed !important; top: 0; left: 0; z-index: 99999 !important; display: ' + cssConfig.overlay + ' !important; background-color: ' + cssConfig.overlayColor + ' !important; opacity: ' + cssConfig.overlayOpacity + ' !important; } </style>');
                                                        sQuery(advancedCssClass).append('<div class="sp-fancybox-overlay"></div>');
                                                    }
                                                    if (overlayClose === 'true') {
                                                        sQuery(advancedCssClass + ' .sp-fancybox-overlay').live('click', function() {
                                                            if (spApi.storageData('sp-camp-' + camp.id) == null || JSON.parse(spApi.storageData('sp-camp-' + camp.id)).liked != true) {
                                                                var data = {
                                                                    key: 'sp-camp-' + camp.id,
                                                                    obj: {
                                                                        'closed': true
                                                                    },
                                                                    campId: camp.id
                                                                };
                                                                spApi.updateCookie(data);
                                                                spApi.worker.send('do-logging', {
                                                                    type: 'camp-step1-close',
                                                                    campId: camp.id
                                                                });
                                                            }
                                                            if (effectConfig instanceof Object && typeof effectConfig.close !== "undefined") {
                                                                effectConfig.close.dialog.complete = function() {
                                                                    sQuery.fancybox.close();
                                                                }
                                                                sQuery(advancedCssClass + ' .sp-fancybox-skin').effective(effectConfig.close);
                                                            } else {
                                                                sQuery.fancybox.close();
                                                            }
                                                        });
                                                    }
                                                    sQuery(advancedCssClass).css('display', 'none');
                                                    var firstTrigger = false;
                                                    if (notifySettings.triggerIsActive == '1') {
                                                        pm.bind('hideInfo', function() {
                                                            notificationFunctions.hideNotification(advancedCssClass);
                                                            spApi.showTrigger(camp.id, notifySettings.triggerSettings)
                                                        });
                                                        spApi.setTrigger(notifySettings.triggerSettings, function() {
                                                            notificationFunctions.visibleNotification('.sp-fancybox-wrap', allConfig);
                                                        });
                                                    }
                                                    var cCookie = spApi.storageData('sp-camp-' + camp.id);
                                                    var triggerHide = false;
                                                    if (cCookie !== null) {
                                                        cCookie = JSON.parse(cCookie);
                                                        triggerHide = cCookie.triggerHide;
                                                    }
                                                    var productType = parseInt(camp.productType);
                                                    if (triggerHide === false || triggerHide === undefined) {
                                                        if (notifySettings.triggerIsActive === '1' && camp.trigTimeOut === '-1' && notifySettings.triggerSettings.showFirst === "true") {
                                                            firstTrigger = true;
                                                        } else {
                                                            firstTrigger = false;
                                                        }
                                                    } else if (triggerHide == '1') {
                                                        firstTrigger = false;
                                                    } else if (triggerHide == '0') {
                                                        firstTrigger = true;
                                                    }
                                                    if (spApi.checkConditionNeed(camp)) {
                                                        if (firstTrigger) {
                                                            spApi.setConditionCallback(camp, function() {
                                                                spApi.showTrigger(camp.id, notifySettings.triggerSettings)
                                                            });
                                                        } else {
                                                            spApi.setConditionCallback(camp, function() {
                                                                notificationFunctions.visibleNotification(advancedCssClass, allConfig)
                                                            });
                                                        }
                                                    } else {
                                                        if (firstTrigger) {
                                                            spApi.showTrigger(camp.id, notifySettings.triggerSettings);
                                                        } else {
                                                            notificationFunctions.visibleNotification(advancedCssClass, allConfig);
                                                        }
                                                    }
                                                });
                                            });
                                        }
                                    });
                                },
                                showIFramelessNotification: function() {
                                    var notifyContent = notifySettings.content;
                                    var notifyClass = 'sp-inner-' + camp.id;
                                    var classAddedContent = sQuery(notifyContent).find('div:eq(0)').parent().addClass(notifyClass);
                                    sQuery('body').append(classAddedContent);
                                    sQuery('.' + notifyClass).css({
                                        'top': notifySettings.locationConfig.positionTop,
                                        'left': notifySettings.locationConfig.positionLeft,
                                        'position': notifySettings.cssConfig.fixed == 1 ? 'fixed' : 'absolute'
                                    }).show();
                                    sQuery.each(camp.callbacks.show, function(key, callback) {
                                        spApi.campEventControl('show', callback);
                                    });
                                    sQuery('.sp-inner-notification-close').live('click', function() {
                                        notificationFunctions.notificationSendCloseLog(camp);
                                        $(this).parent().remove();
                                    });
                                },
                                notificationSendCloseLog: function(camp) {
                                    var data = {
                                        key: 'sp-camp-' + camp.id,
                                        obj: {
                                            'closed': true
                                        },
                                        campId: camp.id
                                    };
                                    spApi.updateCookie(data);
                                    spApi.worker.send('do-logging', {
                                        type: 'camp-step1-close',
                                        campId: camp.id
                                    });
                                    sQuery.each(camp.callbacks.close, function(key, callback) {
                                        spApi.campEventControl('close', callback);
                                    });
                                }
                            };
                            setTimeout(function() {
                                notificationFunctions.showNotification();
                            }, camp.trigTimeOut * 1000);
                        } else if (camp.productType == 24 && spApi.notifies[camp.id].locationConfig.type == '2') {
                            var notifySettings = spApi.notifies[camp.id];
                            var couponStatus = spApi.notifies[camp.id].notifCpnStatus;
                            var couponSection = 't=getInfoCoupon';
                            if (notifySettings.locationConfig.selectedElement == 'html' || !(sQuery(notifySettings.locationConfig.selectedElement).length > 0)) {
                                if (notifySettings.locationConfig.selectedElement == 'html') {
                                    var errorData = {
                                        name: "Inline mode positioning",
                                        message: "Selector is " + notifySettings.locationConfig.selectedElement + ", campaign didn't show. Camp ID: " + camp.id
                                    }
                                    var thisData = {
                                        logType: 'Inline Error'
                                    };
                                    spApi.errLog(errorData, thisData);
                                }
                                return false;
                            }
                            var insdrInlineDiv = sQuery('<div/>', {
                                'class': 'sp-inline-wrap sp-inline-wrap-' + camp.id + ' sp-advanced-css-' + camp.id,
                                'style': 'visibility: hidden;'
                            });
                            var urlParams = '';
                            if (spApi.checkConditionNeed(camp)) {
                                urlParams += '&campType=bounce&notifyType=inline';
                            }
                            var insdrInlineIframe = sQuery('<iframe/>', {
                                'class': 'sp-inline-iframe sp-inline-iframe-' + camp.id,
                                'style': 'display: block; visibility: hidden; width: 0px; height: 0px; border:none;',
                                'src': spApi.frameUrl + "?viewType=1&id=" + camp.id + "&appType=24" + "&pageUrl=" + spApi.urlencode(window.location.href) + urlParams + "&version=" + spApi.genDate,
                                'frameBorder': '0'
                            });
                            var inlineNotificationFunctions = {
                                visibleNotification: function(element) {
                                    sQuery('.sp-inline-wrap-' + camp.id).css({
                                        "display": "inline-block",
                                        "visibility": "visible"
                                    });
                                    sQuery(element).css({
                                        "display": "block",
                                        "visibility": "visible"
                                    }).promise().done(function() {
                                        var effectConfig = notifySettings.effectConfig;
                                        if (effectConfig instanceof Object && typeof effectConfig.open != "undefined") {
                                            sQuery('.sp-inline-wrap-' + camp.id).effective(effectConfig.open);
                                        }
                                        var logData = {
                                            key: 'sp-camp-' + camp.id,
                                            obj: {
                                                'step1-displayed': true
                                            },
                                            campId: camp.id
                                        };
                                        spApi.updateCookie(logData);
                                        if (couponStatus == '1' && spApi.checkConditionNeed(camp)) {
                                            getCouponCode(true);
                                        }
                                        spApi.bindAutoClose(camp);
                                        sQuery.each(camp.callbacks.show, function(key, callback) {
                                            spApi.campEventControl('show', callback);
                                        });
                                        try {
                                            pm({
                                                target: sQuery('.sp-inline-iframe-' + camp.id)[0].contentWindow,
                                                type: 'startCountdown'
                                            });
                                        } catch (err) {
                                            spApi.errLog(err, {
                                                logType: 'startCountdown',
                                                bugType: 'partner',
                                                extraData: {
                                                    campId: camp.id,
                                                    element: element
                                                }
                                            });
                                        }
                                    });
                                },
                                showNotification: function() {
                                    if (sQuery('.sp-inline-wrap-' + camp.id).length > 0) {
                                        sQuery('.sp-inline-wrap-' + camp.id).remove();
                                    }
                                    var insertAction = notifySettings.locationConfig.insertAction;
                                    var selectedElement = notifySettings.locationConfig.selectedElement;
                                    if (insertAction == 'after') {
                                        sQuery(selectedElement).after(insdrInlineDiv);
                                    } else if (insertAction == 'before') {
                                        sQuery(selectedElement).before(insdrInlineDiv);
                                    } else if (insertAction == 'insert-end') {
                                        sQuery(selectedElement).append(insdrInlineDiv);
                                    } else if (insertAction == 'insert-beginning') {
                                        sQuery(selectedElement).prepend(insdrInlineDiv);
                                    }
                                    sQuery('.sp-inline-wrap-' + camp.id).append(insdrInlineIframe);
                                    sQuery(insdrInlineIframe).on('load', function() {
                                        sQuery('.sp-inline-iframe-' + camp.id).pm(function() {
                                            return inlineConfig;
                                        }, function(data) {
                                            sQuery('body').append('<style>' + '.sp-inline-wrap { position: relative; top: initial; left: initial; z-index: 9999999; display: initial; }' + '</style>');
                                            if (data.adaptiveSettings != null && typeof data.adaptiveSettings.outerCss !== 'undefined') {
                                                sQuery('body').append('<style id="insider-outer-css">' + data.adaptiveSettings.outerCss + '.insider-ios-fixed { position: absolute !important; top: 0 !important; margin-top: 10px !important; }' + '</style>');
                                                sQuery('.sp-inline-wrap-' + camp.id).addClass('inline-resolution');
                                            }
                                            if (camp.productType == 24) {
                                                sQuery('.sp-inline-wrap-' + camp.id).css({
                                                    'margin-left': data.locationConfig.left + 'px',
                                                    'margin-top': data.locationConfig.top + 'px',
                                                    'box-shadow': data.cssConfig.shadow,
                                                    'border-radius': data.cssConfig.borderRadius,
                                                    'border-style': data.cssConfig.borderStyle,
                                                    'border-width': data.cssConfig.borderWidth,
                                                    'border-color': data.cssConfig.borderColor,
                                                    'display': 'none'
                                                });
                                                sQuery('.sp-inline-iframe-' + camp.id).css({
                                                    'width': data.width - (parseFloat(data.cssConfig.borderWidth) * 2),
                                                    'height': data.height - (parseFloat(data.cssConfig.borderWidth) * 2),
                                                    'visibility': 'hidden',
                                                    'display': 'none',
                                                    'border-radius': data.cssConfig.borderRadius
                                                });
                                                pm({
                                                    target: sQuery('.sp-inline-iframe-' + camp.id)[0].contentWindow,
                                                    type: 'initView'
                                                });
                                            }
                                            if (spApi.checkConditionNeed(camp)) {
                                                spApi.setConditionCallback(camp, function() {
                                                    inlineNotificationFunctions.visibleNotification('.sp-inline-iframe-' + camp.id);
                                                });
                                            } else {
                                                inlineNotificationFunctions.visibleNotification('.sp-inline-iframe-' + camp.id);
                                            }
                                        });
                                    });
                                }
                            };
                            setTimeout(function() {
                                inlineNotificationFunctions.showNotification();
                            }, camp.trigTimeOut * 1000);
                        } else if (camp.productType == 58) {
                            var journeyId = spApi.getJourneyId(camp.id);
                            var visibleCampaign = function() {
                                spApi.logger('info', 'Journey on-site trigger campaign is active : ' + camp.id);
                                if (spApi.journeySegments[journeyId] === false) {
                                    spApi.logger('info', 'Journey control group is active : ' + spApi.getJourneyActiveCampaignId(journeyId));
                                    spApi.sendJourneyImpressionLog(journeyId);
                                    spApi.setJourneyActive(journeyId);
                                    return;
                                }
                                spApi.setJourneyActive(journeyId);
                                spApi.logger('info', 'Sending status to journey listener: ' + camp.id, camp.id);
                                var request = {
                                    url: spApi.listenerApiUrl + 'add',
                                    crossDomain: true,
                                    type: 'post',
                                    data: {
                                        userId: sQuery.cookie('spUID') || spApi.localStorageGet('spUID'),
                                        partnerName: partnerName,
                                        journeyId: journeyId
                                    }
                                };
                                sQuery.ajax(request).success(function() {
                                    spApi.logger('info', 'On site user sent to journey listener: ' + camp.id, camp.id);
                                });
                            };
                            if (!spApi.isJourneyActive(journeyId)) {
                                if (spApi.checkConditionNeed(camp)) {
                                    spApi.setConditionCallback(camp, function() {
                                        visibleCampaign();
                                    });
                                } else {
                                    visibleCampaign();
                                }
                            }
                        }
                    }
                    spApi.sendGoalEngagementLog(camp.id);
                    setTimeout(function() {
                        var turn = 0;
                        var intervalId = setInterval(function() {
                            if (spApi.existsStorageData('sp-camp') || turn >= 10) {
                                clearInterval(intervalId);
                                spApi.addGoalTracking(false);
                            }
                            turn++;
                        }, 500);
                    }, 500);
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'showCamp',
                        bugType: 'product',
                        extraData: {
                            param1: camp,
                            param2: viewType
                        }
                    });
                }
            },
            checkConditionNeed: function(camp) {
                if (typeof camp == 'undefined' || camp == null) {
                    return false;
                }
                if (typeof camp.isBounce !== 'undefined' && camp.isBounce == '1') {
                    return true;
                }
                if (typeof camp.conditionNeeds !== 'undefined' && ((typeof camp.conditionNeeds.bounce !== 'undefined' && camp.conditionNeeds.bounce == '1') || (typeof camp.conditionNeeds.scroll !== 'undefined' && camp.conditionNeeds.scroll == '1'))) {
                    return true;
                }
                return false;
            },
            getTime: function() {
                return Math.round(new Date() / 1000);
            },
            getUTCTime: function() {
                var now = new Date();
                var time = now.getTime();
                var offset = now.getTimezoneOffset() * 60000;
                return Math.round((time - offset) / 1000);
            },
            isRefContains: function(data) {
                var res = document.referrer.indexOf(data) > -1;
                return res;
            },
            hasText: function(selectedText, comparedText) {
                try {
                    if (typeof selectedText !== "undefined" && selectedText !== null) {
                        return selectedText.indexOf(comparedText) > -1 ? true : false;
                    } else {
                        return false;
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'hasText',
                        bugType: 'partner',
                        extraData: {
                            param1: selectedText,
                            param2: comparedText
                        }
                    });
                }
            },
            hasParameter: function(name, exactMatch) {
                try {
                    if (typeof exactMatch === "undefined")
                        exactMatch = false;
                    try {
                        var uri = decodeURI(window.location.href);
                    } catch (err) {
                        var uri = unescape(window.location.href);
                    }
                    if (exactMatch == false) {
                        name = decodeURI(name.replace(/[\[\]\/\?]/g, "\\$&"));
                        var regex = new RegExp(name);
                        var results = regex.exec(uri);
                        if (results == null) {
                            return false
                        } else
                            return true;
                    } else if (exactMatch == true) {
                        var pageUrl = window.location.href.replace('www.', '');
                        if (pageUrl == name) {
                            return true;
                        } else {
                            return false;
                        }
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'hasParameter',
                        bugType: 'product',
                        extraData: {
                            param1: name,
                            param2: exactMatch
                        }
                    });
                }
            },
            checkCampaignLanguage: function(camp) {
                if (camp.lang == 'all_ALL' || sQuery.inArray(camp.productType, [32, 39, 47]) > -1) {
                    return true;
                }
                return spApi.getLang() == camp.lang;
            },
            addZeroToUtcHours: function(hour) {
                if (hour < 10) {
                    hour = "0" + hour;
                }
                return hour;
            },
            checkDailyDisplay: function(camp) {
                try {
                    var currentDate = new Date();
                    var utcCurrentTime = spApi.addZeroToUtcHours(currentDate.getUTCHours()) + ':' + currentDate.getUTCMinutes();
                    var utcCurrentDay = spApi.getUTCDayString(currentDate.getUTCDay());
                    var dailyDisplay = camp.dailyDisplay;
                    if (typeof dailyDisplay === 'undefined' || !dailyDisplay.length > 0) {
                        return true;
                    }
                    dailyDisplay = JSON.parse(dailyDisplay);
                    if (typeof dailyDisplay === 'object') {
                        if (dailyDisplay.end <= dailyDisplay.start) {
                            endTime = dailyDisplay.end.split(':');
                            dailyDisplay.end = (parseInt(endTime[0]) + 24) + ':' + endTime[1];
                        }
                        if (sQuery.inArray('all', dailyDisplay.days) > -1 || sQuery.inArray(utcCurrentDay, dailyDisplay.days) > -1) {
                            return utcCurrentTime > dailyDisplay.start && utcCurrentTime < dailyDisplay.end;
                        }
                    }
                    return false;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'dailyDisplay',
                        bugType: 'product'
                    });
                    return false;
                }
            },
            getUTCDayString: function(dayIndex) {
                var weekDay = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
                return weekDay[dayIndex];
            },
            deviceDetect: function(targetDevice) {
                if (targetDevice == 'All')
                    return true;
                var userAgent = navigator.userAgent.toLowerCase();
                var isMobile = (/iphone|ipod|android|blackberry|opera mini|opera mobi|skyfire|maemo|windows phone|palm|iemobile|symbian|symbianos|fennec/i.test(userAgent));
                var isTablet = (/(?!.*tablet pc)(ipad|android|sch-i800|playbook|tablet|kindle|gt-p1000|sgh-t849|shw-m180s|a510|a511|a100|dell streak|silk)/i).test(userAgent);
                if (userAgent.toLowerCase().indexOf('android') > -1) {
                    isTablet = isTablet && userAgent.indexOf('mobile') == -1;
                    isMobile = isMobile && userAgent.indexOf('mobile') != -1;
                }
                var device = 'PC';
                if (isMobile) {
                    device = 'Mobil';
                } else if (isTablet) {
                    device = 'Tablet';
                }
                return device == targetDevice;
            },
            isOnPanel: function() {
                try {
                    return window.self !== window.top;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'isOnPanel',
                        bugType: 'partner',
                        extraData: {}
                    });
                }
            },
            getParameter: function(name) {
                name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
                var regexS = "[\\?&#]" + name + "=([^&#]*)";
                var regex = new RegExp(regexS);
                var results = regex.exec(window.location.href);
                if (results == null) {
                    return "";
                } else {
                    try {
                        var unfilteredValue = decodeURIComponent(results[1].replace(/\+/g, " "));
                        var filteredValue = unfilteredValue.replace(/<[^>]+>/ig, "");
                        if (unfilteredValue !== filteredValue) {
                            sQuery.ajax({
                                type: 'GET',
                                url: spApi.notFoundLogUrl + '?partnerName=' + partnerName + '&parameterName=' + name + '&unfilteredValue=' + btoa(unfilteredValue) + '&filteredValue=' + btoa(filteredValue),
                                data: {},
                                cache: false,
                                async: spApi.isAjaxAsync,
                                crossDomain: true
                            });
                        }
                        return filteredValue;
                    } catch (err) {
                        spApi.errLog(err);
                        return unescape(results[1].replace(/\+/g, " "));
                    }
                }
            },
            isParameter: function(name) {
                var parameter = spApi.getParameter(name);
                return (parameter != "") ? true : false;
            },
            sendUserIdLog: function(traceValue) {},
            getUserData: function(dataType) {
                try {
                    if (dataType == "gender") {
                        if (JSON.parse(localStorage.getItem('spUserData'))[dataType].toLowerCase() == "erkek") {
                            return "male";
                        } else if (JSON.parse(localStorage.getItem('spUserData'))[dataType].toLowerCase() == "kadın" || JSON.parse(localStorage.getItem('spUserData'))[dataType].toLowerCase() == "kadin") {
                            return "female";
                        } else {
                            return JSON.parse(localStorage.getItem('spUserData'))[dataType];
                        }
                    } else {
                        return JSON.parse(localStorage.getItem('spUserData'))[dataType];
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getUserData',
                        bugType: 'product',
                        extraData: {
                            param1: dataType
                        }
                    });
                }
            },
            setSessionStorage: function(storageName, storeValue) {
                spApi.sessionStorageSet(storageName, JSON.stringify(storeValue));
            },
            getSessionStorage: function(storageName) {
                try {
                    return JSON.parse(spApi.sessionStorageGet(storageName))
                } catch (err) {
                    spApi.errLog(err);
                    spApi.setSessionStorage(storageName, '');
                    return [];
                }
            },
            getJourneyCamp: function(journeyId) {
                return spApi.journeyCamps.filter(function(journeyCamp) {
                    return journeyCamp.id == journeyId;
                })[0];
            },
            updateCookie: function(data, type) {
                try {
                    type = typeof type !== 'undefined' ? type : "general";
                    var campId;
                    if (data.campId)
                        campId = data.campId;
                    var cookieExpireDate = 14;
                    if (typeof campId !== 'undefined') {
                        var controlCamp = spApi.getCamp(campId);
                        if (typeof controlCamp.camp !== 'undefined') {
                            cookieExpireDate = parseInt(controlCamp.camp.cookieTime);
                        } else if (typeof spApi.webPushes[campId] !== 'undefined') {
                            cookieExpireDate = parseInt(spApi.webPushes[campId].cookieTime);
                        } else if (data.key.indexOf('ins-wp') > -1 && !spApi.hasParameter('journeyId')) {
                            var ONE_DAY_AS_MILLISECONDS = 86400000;
                            cookieExpireDate = (new Date().setHours(0, 0, 0, 0) + ONE_DAY_AS_MILLISECONDS - new Date().getTime()) / ONE_DAY_AS_MILLISECONDS;
                        }
                    }
                    if (data.key.indexOf('ins-journey-camp') > -1) {
                        cookieExpireDate = spApi.getJourneyCamp(data.obj.journeyId).cookieTime;
                    }
                    var isLocalstorage = false;
                    var localStorageList = ['sp-camp', 'ins-insight', 'sp-goal', 'user-segments', 'paid-products', 'ins-wp', 'prodCats', 'ins-journey-camp'];
                    sQuery.each(localStorageList, function(index, keyName) {
                        if (data.key.indexOf(keyName) > -1) {
                            isLocalstorage = true;
                        }
                    });
                    c = (isLocalstorage && spApi.storageData(data.key) != null) ? spApi.storageData(data.key) : sQuery.cookie(data.key);
                    if (data.key.indexOf('sp-camp-') > -1 && spApi.salesSesId != spApi.Base64.encode('0')) {
                        if (c == null) {
                            data.obj.salesSesId = spApi.Base64.decode(spApi.salesSesId);
                            data.obj.salesSesTime = spApi.getTime();
                        }
                    }
                    newC = data.obj;
                    if (data.key == 'user-segments') {
                        var cookieExpireDate = new Date();
                        cookieExpireDate.setTime(cookieExpireDate.getTime() + (60 * 60 * 1000));
                    }
                    if (data.obj['step1-displayed']) {
                        data.obj.viDa = spApi.getTime();
                    } else if (data.obj['joined'] || data.obj['liked']) {
                        data.obj.joDa = spApi.getTime();
                    } else if (data.obj['closed']) {
                        data.obj.clDa = spApi.getTime();
                    }
                    if (c) {
                        if (data.key == 'sp-notes') {
                            sQuery.cookie(data.key, c, {
                                path: '/',
                                expires: cookieExpireDate,
                                domain: cookieDomain
                            });
                        } else {
                            oldC = JSON.parse(c);
                            newC = sQuery.extend(true, oldC, newC);
                            if (!isLocalstorage) {
                                sQuery.cookie(data.key, sQuery.toJSON(newC), {
                                    path: '/',
                                    expires: cookieExpireDate,
                                    domain: cookieDomain
                                });
                            } else {
                                spApi.storageData(data.key, sQuery.toJSON(newC), {
                                    path: '/',
                                    expires: cookieExpireDate,
                                    domain: cookieDomain
                                });
                            }
                        }
                    } else {
                        if (data.key == 'sp-notes') {
                            sQuery.cookie(data.key, data.obj, {
                                path: '/',
                                expires: cookieExpireDate,
                                domain: cookieDomain
                            });
                        } else {
                            if (!isLocalstorage) {
                                sQuery.cookie(data.key, sQuery.toJSON(data.obj), {
                                    path: '/',
                                    expires: cookieExpireDate,
                                    domain: cookieDomain
                                });
                            } else {
                                spApi.storageData(data.key, sQuery.toJSON(data.obj), {
                                    path: '/',
                                    expires: cookieExpireDate,
                                    domain: cookieDomain
                                });
                            }
                        }
                    }
                    if (type != "AB" && data.key != 'sp-notes' && type != "nolog") {
                        this.worker.check(JSON.parse(c), newC, campId);
                    }
                    if (typeof campId !== 'undefined') {
                        spApi.triggerInspectorLogs(JSON.stringify({
                            type: Object.keys(data.obj)[0],
                            'campId': campId.toString()
                        }));
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'updateCookie',
                        bugType: 'product',
                        extraData: {
                            param1: data,
                            param2: type
                        }
                    });
                }
            },
            isAudienceProduct: function(campId) {
                var paaProductIds = ['32', '39', '40', '47'];
                return typeof campId !== 'undefined' && typeof spApi.getCamp(campId).camp !== 'undefined' && paaProductIds.indexOf(spApi.getCamp(campId).camp.productType) > -1;
            },
            setCookie: function(data, callback) {
                this.worker.cookie(data, callback);
            },
            isFreqRule: function(rule) {
                try {
                    return rule.test.indexOf("getMinutes") < 0 ? false : true;
                } catch (err) {
                    spApi.errLog(err);
                    return false;
                }
            },
            validateEmail: function(email, limit) {
                if (!email) {
                    return false;
                }
                if (!limit) {
                    var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;
                } else {
                    var emailReg = /^([\w-\.]+@([\w-]+\.)+[\w-]{3,4})?$/;
                }
                if (emailReg.test(email)) {
                    return true;
                }
                return false;
            },
            reformatDate: function(date, withTimeString) {
                try {
                    date = date || '';
                    if (!date || date.length < 10)
                        return date;
                    date = date.toString();
                    var mappedText = date;
                    if (date.replace(/[0-9]/g, "").length === 0) {
                        if (date.length == 10) {
                            date = parseInt(date * 1000);
                        }
                        var date = new Date(parseInt(date));
                        mappedText = date.getFullYear() + '-' + ("00" + (date.getMonth() + 1)).substr(-2, 2) + '-' + ("00" + date.getDate()).substr(-2, 2);
                        if (withTimeString) {
                            mappedText = mappedText + ' ' + ("00" + date.getHours()).substr(-2, 2) + ':' + ("00" + date.getMinutes()).substr(-2, 2) + ':' + ("00" + date.getSeconds()).substr(-2, 2);
                        }
                    } else {
                        date = date.replace(/[^0-9]/g, "-");
                        mappedText = date;
                        var splitDate = date.split('-');
                        if (splitDate.length !== 3)
                            return '';
                        if (splitDate[0].length < 4) {
                            mappedText = splitDate[2] + '-' + splitDate[1] + '-' + splitDate[0];
                        }
                    }
                    return mappedText;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'reformatDate',
                        bugType: 'product'
                    });
                }
            },
            hashCode: function(str) {
                var hash = 0;
                if (str.length === 0) {
                    return hash;
                }
                for (var i = 0; i < str.length; i++) {
                    var char = str.charCodeAt(i);
                    hash = ((hash << 5) - hash) + char;
                    hash = hash & hash;
                }
                return Math.abs(hash);
            },
            widgets: {
                autoComplete: function(formSelector, customStorage, readOnly) {
                    var storageName = typeof customStorage === 'undefined' ? 'insAutoComplete' : customStorage;
                    if (spApi.localStorageGet(storageName) !== null && readOnly !== true) {
                        var getFormDatas = JSON.parse(spApi.localStorageGet(storageName));
                        if (typeof getFormDatas !== 'object')
                            getFormDatas = JSON.parse(getFormDatas) || '[]';
                        sQuery.each(getFormDatas, function(i, item) {
                            var _name = ''
                              , _id = ''
                              , _class = '';
                            if (item._name != "") {
                                _name = '[name="' + item._name + '"]';
                            } else if (item._id != "") {
                                _id = '#' + item._id;
                            } else if (item._class != "") {
                                _class = '.' + item._class;
                            }
                            sQuery(_name + _id + _class, formSelector).val(item._value);
                        });
                    }
                    var formDatas = JSON.parse(spApi.localStorageGet(storageName)) || [];
                    if (typeof formDatas !== 'object')
                        formDatas = JSON.parse(formDatas) || '[]';
                    sQuery.each(sQuery(':input', formSelector), function(i, item) {
                        if (sQuery(item).prop('tagName').toLowerCase() == 'input' && sQuery(item).attr('type') != "password") {
                            sQuery(item).on('keyup focusout click focus blur change', function() {
                                setData(formDatas, item);
                            });
                        } else if (sQuery(item).prop('tagName').toLowerCase() == 'select') {
                            sQuery(item).change(function() {
                                setData(formDatas, item);
                            });
                        } else if (sQuery(item).prop('tagName').toLowerCase() == 'textarea') {
                            sQuery(item).on('keyup focusout click focus blur change', function() {
                                setData(formDatas, item);
                            });
                        }
                    });
                    function setData(formDatas, input) {
                        var add = true;
                        sQuery.each(formDatas, function(i, v) {
                            if ((sQuery(input).attr('id') || "") == v._id && (sQuery(input).attr('class') || "") == v._class && (sQuery(input).attr('name') || "") == v._name) {
                                add = false;
                                v._value = sQuery(input).val();
                            }
                        });
                        if (add) {
                            formDatas.push({
                                _name: sQuery(input).attr('name') || "",
                                _id: sQuery(input).attr('id') || "",
                                _class: sQuery(input).attr('class') || "",
                                _value: sQuery(input).val() || ""
                            });
                        }
                        spApi.localStorageSet(storageName, JSON.stringify(formDatas), {
                            expire: 15,
                            path: '/',
                            domain: partner_site.host
                        });
                    }
                },
                stickyBasket: function(data) {
                    if (typeof data != "object" || typeof data == "undefined")
                        return false;
                    sQuery('body').prepend('<div id="insdrBasket" style="left:' + data.mainWrapperPos + 'px;margin-left:10px;position:fixed;"><p id="stickyCount">' + data.basketCount + '</p></div>')
                    sQuery('#insdrBasket').css(data.stickyBasketStyles);
                    sQuery('#stickyCount').css(data.stickCountStyles);
                    function isScrolledIntoView(basketIdentf) {
                        var $elem = basketIdentf;
                        var $window = sQuery(window);
                        var docViewTop = $window.scrollTop();
                        var docViewBottom = docViewTop + $window.height();
                        var elemTop = $elem.offset().top * 2;
                        var elemBottom = elemTop + $elem.height();
                        return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));
                    }
                    sQuery(window).scroll(function() {
                        if (!isScrolledIntoView(data.basketIdentifier)) {
                            sQuery('#insdrBasket').show();
                        } else {
                            sQuery('#insdrBasket').hide();
                        }
                    });
                },
                countdown: function(targetDate, currentTime) {
                    if ('undefined' == typeof targetDate)
                        return spApi.logger('info', 'invalid date');
                    var timestampDifference = function(date1, date2) {
                        var difference = date1.getTime() - date2.getTime();
                        var yearDifference = Math.floor(difference / 1000 / 60 / 60 / 24 / 365);
                        difference -= yearDifference * 1000 * 60 * 60 * 24 * 365
                        var monthDifference = Math.floor(difference / 1000 / 60 / 60 / 24 / 30);
                        difference -= monthDifference * 1000 * 60 * 60 * 24 * 30
                        difference = date1.getTime() - date2.getTime();
                        var daysDifference = Math.floor(difference / 1000 / 60 / 60 / 24);
                        difference -= daysDifference * 1000 * 60 * 60 * 24
                        var hoursDifference = Math.floor(difference / 1000 / 60 / 60);
                        difference -= hoursDifference * 1000 * 60 * 60
                        var minutesDifference = Math.floor(difference / 1000 / 60);
                        difference -= minutesDifference * 1000 * 60
                        var secondsDifference = Math.floor(difference / 1000);
                        return arr = {
                            days: ("00" + daysDifference).substr(-2, 2),
                            hours: ("00" + hoursDifference).substr(-2, 2),
                            minutes: ("00" + minutesDifference).substr(-2, 2),
                            seconds: ("00" + secondsDifference).substr(-2, 2)
                        };
                    };
                    var countdownFrom = function(targetDate) {
                        var timestamp = new Date(targetDate * 1000);
                        targetDate = new Date(timestamp.getFullYear(),timestamp.getMonth(),timestamp.getDate(),timestamp.getHours(),timestamp.getMinutes(),timestamp.getSeconds());
                        return timestampDifference(targetDate, new Date());
                    };
                    var countdownTo = function(targetDate, currentTime) {
                        var condition = typeof targetDate.days == 'undefined' && typeof targetDate.hours == 'undefined' && typeof targetDate.minutes == 'undefined' && typeof targetDate.seconds == 'undefined';
                        if (condition)
                            return spApi.logger('info', 'invalid parameters sent');
                        targetDate = {
                            year: (targetDate || '').year || 0,
                            month: (targetDate || '').month || 0,
                            days: (targetDate || '').days || 0,
                            hours: (targetDate || '').hours || 0,
                            minutes: (targetDate || '').minutes || 0,
                            seconds: (targetDate || '').seconds || 0
                        };
                        currentTime = currentTime || new Date();
                        targetDate = new Date(currentTime.getFullYear() + targetDate.year,currentTime.getMonth() + targetDate.month,currentTime.getDate() + targetDate.days,currentTime.getHours() + targetDate.hours,currentTime.getMinutes() + targetDate.minutes,currentTime.getSeconds() + targetDate.seconds);
                        return timestampDifference(targetDate, new Date());
                    };
                    if (typeof targetDate == 'object') {
                        return countdownTo(targetDate, currentTime);
                    } else {
                        return countdownFrom(targetDate);
                    }
                },
                scroll: function(scroll) {
                    if (typeof scroll == 'undefined')
                        return spApi.logger('info', 'Parameter error!');
                    if (scroll.addPixel == 'undefined')
                        scroll['addPixel'] = 0;
                    scroll['scrollTop'] = sQuery(scroll.scrollElement).offset().top + scroll.addPixel;
                    spApi.getCamp(scroll.campId).show(function() {
                        sQuery('.sp-advanced-css-' + scroll.campId + ' iframe').pm(function(data) {
                            sQuery(data.scroll.clickElement).live('click', function() {
                                sQuery(window).pm(function(data) {
                                    sQuery('html,body').animate({
                                        'scrollTop': data.scroll.scrollTop
                                    }, 'swing');
                                }, undefined, {
                                    scroll: data.scroll
                                });
                            });
                        }, undefined, {
                            scroll: scroll
                        });
                    });
                }
            },
            spCampCheckStatus: function(id, condition) {
                try {
                    if (typeof (id) == 'undefined' || id == 'undefined')
                        return false;
                    var c = spApi.storageData('sp-camp-' + id);
                    var id = id.toString();
                    if (!c || id == 'undefined')
                        return false;
                    else {
                        var controlCamp = spApi.getCamp(id);
                        c = JSON.parse(c);
                        var status = (condition == "liked") ? (c["liked"] || c["closed"]) : (c[condition] == true ? true : false);
                        if (condition == "liked" || condition == "joined") {
                            tempId = id.toString();
                            if (tempId.indexOf('c') < 0) {
                                controlCamp = controlCamp.camp;
                                var closeLimitStatus = false;
                                var joinLimitStatus = false;
                                if (c["joDa"] != undefined) {
                                    joinLimitStatus = joinLimitStatus = c["joDa"] + controlCamp.joinControlLimit * 60 * 60 > spApi.getTime();
                                }
                                if (c["clDa"] != undefined) {
                                    closeLimitStatus = c["clDa"] + controlCamp.closeControlLimit * 60 * 60 > spApi.getTime();
                                }
                                status = status && (closeLimitStatus || joinLimitStatus);
                            }
                        } else if (condition == "closed" && c["clDa"] != undefined) {
                            status = status && c["clDa"] > spApi.getTime() - controlCamp.closeControlLimit * 60 * 60;
                        }
                        if (typeof status === 'string') {
                            return status == "";
                        } else {
                            return status == true;
                        }
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'spCampCheckStatus',
                        bugType: 'product',
                        extraData: {
                            param1: id,
                            param2: condition
                        }
                    });
                }
            },
            getStandardLogData: function() {
                var data = {
                    originalPrice: spApi.getExchangeRate(spApi.preferredCurrency, sQuery.cookie('current-currency'), sQuery.cookie('total-cart-amount'), 'price'),
                    originalCurrency: (sQuery.cookie('current-currency') != null) ? sQuery.cookie('current-currency') : '',
                    convertedCurrency: spApi.preferredCurrency,
                    convertedPrice: (sQuery.cookie('total-cart-amount') != null) ? sQuery.cookie('total-cart-amount') : '',
                    sessionId: spApi.salesSesId
                };
                return data;
            },
            setSaLog: function(id, condition, sendLog) {
                if (sendLog !== false && window.spSalesOk == 1)
                    return;
                window.spSalesOk = 1;
                var orderID = (spApi.getOrderId() != undefined && spApi.getOrderId() != null && spApi.getOrderId() != '') ? spApi.getOrderId() : 'ins_unknown_' + Math.random().toString(36).substr(2, 5) + '_' + spApi.getTime();
                var salesOrderId = sQuery.cookie("salesOrderId");
                if (salesOrderId != null && salesOrderId == orderID) {
                    return;
                } else {
                    sQuery.cookie("salesOrderId", orderID, {
                        path: '/',
                        domain: cookieDomain
                    });
                }
                var cookies = spApi.allStorageData();
                var joinSalesEnable = false;
                var joinDate = false;
                var viewDate = false;
                var bSP = 1333411200;
                var lastJoinDate = lastViewDate = bSP;
                var logObj = new Object();
                var lastCookieForCatch = '';
                sQuery.each(cookies, function(i, obj) {
                    var cookieKey = obj.key;
                    var value = unescape(obj.value);
                    try {
                        if (cookieKey.indexOf("sp-camp") != -1) {
                            if (value.indexOf("joined") != -1 || value.indexOf("liked") == -1 || value.indexOf("step1-displayed") != -1) {
                                lastCookieForCatch = value;
                                var logType = 'bounce-sales';
                                var cookieContent = JSON.parse(value);
                                if (value.indexOf("joined") != -1 || value.indexOf("liked") != -1) {
                                    logType = 'sales';
                                    joinSalesEnable = true;
                                    joinDate = typeof cookieContent.joDa !== 'undefined' ? cookieContent.joDa : bSP;
                                } else if (joinSalesEnable) {
                                    return;
                                } else {
                                    viewDate = bSP;
                                    if (cookieContent != null && cookieContent.viDa !== 'undefined') {
                                        viewDate = cookieContent.viDa;
                                    }
                                }
                                if (joinSalesEnable && joinDate >= lastJoinDate) {
                                    lastJoinDate = joinDate;
                                    logObj = setLogVariable(cookieKey, cookieContent, logType);
                                } else if (!joinSalesEnable && viewDate >= lastViewDate) {
                                    lastViewDate = viewDate;
                                    logObj = setLogVariable(cookieKey, cookieContent, logType);
                                }
                            }
                        }
                    } catch (err) {
                        spApi.errLog(err, {
                            logType: 'setSaLog',
                            bugType: 'product',
                            extraData: {
                                param1: lastCookieForCatch
                            }
                        });
                    }
                });
                if (typeof spApi.setInsightSalesLog === 'function') {
                    spApi.setInsightSalesLog(orderID);
                }
                spApi.setPushSalesLog(orderID);
                spApi.sendJourneyEmailJoinLog();
                spApi.sendJourneySalesLog();
                function setLogVariable(cookie, cookieContent, logType) {
                    var logObj = new Object();
                    id = cookie.split("-");
                    if (id[2].indexOf("c") >= 0) {
                        logObj.id = Number(id[2].replace("c", ""));
                        logObj.productType = "custom";
                        logObj.salesProductType = 20;
                    } else {
                        logObj.id = Number(id[2]);
                        logObj.productType = "other";
                        logObj.salesProductType = logObj.productType;
                    }
                    logObj.type = "";
                    logObj.coupon = cookieContent.c;
                    logObj.amount = sQuery.cookie('total-cart-amount');
                    logObj.products = spApi.storageData('paid-products');
                    logObj.logType = logType;
                    return logObj;
                }
                if (sendLog === false)
                    return logObj;
                try {
                    sQuery.each(spApi.personalizationCamps, function(key, prsnlztn) {
                        if (typeof prsnlztn == 'undefined') {
                            return;
                        }
                        sQuery.each(prsnlztn.variations, function(varIdKey, variation) {
                            if (typeof variation == 'undefined') {
                                return;
                            }
                            if (spApi.spCampCheckStatus(variation.varId, "step1-displayed")) {
                                if (typeof spApi.getCamp(variation.varId).camp !== 'undefined' && typeof spApi.getCamp(variation.varId).camp.saLogDuration !== 'undefined') {
                                    var campSaLogDuration = spApi.getCamp(variation.varId).camp.saLogDuration;
                                } else {
                                    var campSaLogDuration = 336;
                                }
                                var viDa = sQuery.parseJSON(spApi.storageData('sp-camp-' + variation.varId)).viDa;
                                viDa = new Date(viDa * 1000);
                                viDa.setHours(viDa.getHours() + campSaLogDuration);
                                if (viDa > spApi.getTime()) {
                                    var logParams = {
                                        campId: variation.varId,
                                        referer: encodeURIComponent(logObj.amount),
                                        ref: window.document.referrer,
                                        url: window.document.URL,
                                        productType: (spApi.getCamp(variation.varId).camp.productType == "20") ? ("custom") : ("other"),
                                        multivariateGroup: key,
                                        orderId: orderID,
                                        paidProducts: logObj.products,
                                        sessionId: spApi.salesSesId,
                                        salesSesId: spApi.getCampSalesSesInfo(variation.varId, 'salesSesId', spApi.getCamp(variation.varId).camp.productType),
                                        salesSesTime: spApi.getCampSalesSesInfo(variation.varId, 'salesSesTime', spApi.getCamp(variation.varId).camp.productType) + '-' + spApi.getTime(),
                                        appliedCode: spApi.getAppliedCode(variation.varId),
                                        salesType: 'variation-sales'
                                    };
                                    logParams = sQuery.extend(logParams, spApi.getStandardLogData());
                                    spApi.worker.send('sales-log', logParams);
                                }
                            }
                        });
                    });
                } catch (e) {
                    spApi.errLog(e, {
                        logType: 'setLogVariable (variation-sales) ',
                        bugType: 'product'
                    });
                    spApi.conLog('personalizationCamps log error');
                    spApi.conLog(e);
                }
                if (id) {
                    var referrer = encodeURIComponent(logObj.coupon + "|-|" + logObj.amount);
                    var saleCampId = (logObj.productType == "custom") ? ('c' + logObj.id) : (logObj.id);
                    if (typeof spApi.getCamp(saleCampId).camp !== 'undefined' && typeof spApi.getCamp(saleCampId).camp.saLogDuration !== 'undefined') {
                        var campSaLogDuration = spApi.getCamp(saleCampId).camp.saLogDuration;
                    } else {
                        var campSaLogDuration = 336;
                    }
                    var campNameString = (logObj.productType == "custom" && typeof logObj.id === 'number') ? "sp-camp-c" + logObj.id : "sp-camp-" + logObj.id;
                    var viDa = JSON.parse(spApi.storageData(campNameString) || sQuery.cookie(campNameString)).viDa;
                    viDa = new Date(viDa * 1000);
                    viDa.setHours(viDa.getHours() + campSaLogDuration);
                    if ((logObj.logType != 'sales' && logObj.logType != 'bounce-sales') || viDa > spApi.getTime()) {
                        var logParams = {
                            campId: logObj.id,
                            referer: referrer,
                            ref: window.document.referrer,
                            url: window.document.URL,
                            productType: logObj.productType,
                            paidProducts: logObj.products,
                            sessionId: spApi.salesSesId,
                            salesSesId: spApi.getCampSalesSesInfo(logObj.id, 'salesSesId', logObj.salesProductType),
                            salesSesTime: spApi.getCampSalesSesInfo(logObj.id, 'salesSesTime', logObj.salesProductType) + '-' + spApi.getTime(),
                            appliedCode: spApi.getAppliedCode(logObj.id),
                            orderId: orderID,
                            salesType: logObj.logType + logObj.type
                        };
                        logParams = sQuery.extend(logParams, spApi.getStandardLogData());
                        this.worker.send('sales-log', logParams);
                    }
                }
                spApi.setESData();
                var logParams = {
                    type: 'sa-co',
                    orderId: orderID,
                    paidProducts: (spApi.storageData('paid-products') != null) ? spApi.storageData('paid-products') : '',
                    sessionId: spApi.salesSesId,
                    salesSesId: spApi.getCampSalesSesInfo(logObj.id, 'salesSesId', logObj.salesProductType),
                    salesSesTime: spApi.getCampSalesSesInfo(logObj.id, 'salesSesTime', logObj.salesProductType) + '-' + spApi.getTime(),
                    referer: encodeURIComponent("notavailable" + "|-|" + sQuery.cookie('total-cart-amount')),
                    ref: window.document.referrer,
                    globalExperiment: (spApi.storageData("globalExperimentRate") != null) ? 1 : 0,
                    globalExperimentType: (spApi.storageData("globalExperimentRate") != null && JSON.parse(spApi.storageData("globalExperimentRate"))['assign'] == 'A') ? 'variation-sales-A' : 'variation-sales-B',
                    campId: 0
                };
                var paaGroup = spApi.storageData('paaGroup');
                if (['ins-roi-experiment-impression', 'ins-roi-control-impression'].indexOf(paaGroup) !== -1) {
                    logParams.paaRoiSalesLogType = paaGroup === 'ins-roi-experiment-impression' ? 'ins-roi-experiment-sale' : 'ins-roi-control-sale';
                }
                logParams = sQuery.extend(logParams, spApi.getStandardLogData());
                this.worker.send('do-logging', logParams);
                return logObj;
            },
            isMobileBrowser: function() {
                (function(a) {
                    sQuery.browser.mobile = /android.+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|e\-|e\/|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(di|rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|xda(\-|2|g)|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))
                }
                )(navigator.userAgent || navigator.vendor || window.opera);
                if ((/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || sQuery.browser.mobile)) {
                    if (typeof window.isMobileBrowser == 'undefined') {
                        spApi.consoleLog.push('API is steady for mobile devices.');
                        window.isMobileBrowser = true;
                    }
                    return true;
                } else {
                    return false;
                }
            },
            isAndroid: function() {
                return navigator.userAgent.toLowerCase().indexOf('android') > -1;
            },
            getAndroidVersion: function() {
                var match = navigator.userAgent.toLowerCase().match(/android\s([0-9\.]*)/);
                return match ? match[1] : -1;
            },
            shouldShowPushPermissionDialog: function() {
                return !(spApi.isAndroid() && parseInt(spApi.getAndroidVersion(), 10) >= 7 && spApi.getBrowser() === 'Samsung Internet' && parseInt(spApi.getBrowser(true)) === 6);
            },
            isMobileCamp: function(campaign) {
                var status = false;
                if (typeof campaign != 'undefined') {
                    if (campaign.platform === 'mobile' && !spApi.deviceDetect('Tablet')) {
                        status = true;
                    } else if (spApi.isMobileBrowser()) {
                        status = (campaign.productType == '30') ? true : status;
                    }
                }
                return status;
            },
            isTabletCamp: function(campaign) {
                return campaign.platform === 'tablet';
            },
            isAllPagesCamp: function(campaign) {
                return campaign.platform === 'all';
            },
            showNotes: function(data, fromJoin, fromPurcha) {},
            noteTimer: function(data) {
                var noteCookie = function() {
                    return JSON.parse(sQuery.cookie('sp-noteTimer'));
                };
                var getNoteCookie = function(key) {
                    var cookieData = noteCookie();
                    if (cookieData != undefined && cookieData[key] != undefined) {
                        return cookieData[key];
                    } else {
                        return undefined;
                    }
                };
                var updateNoteCookie = function(key, value) {
                    var cookieData = noteCookie();
                    if (key == "display" && value == "closed") {
                        sQuery.cookie('spNTStatus', "true", {
                            path: '/',
                            domain: cookieDomain
                        });
                    } else if (cookieData != undefined && cookieData[key] != undefined) {
                        cookieData[key] = value;
                        sQuery.cookie('sp-noteTimer', JSON.stringify(cookieData), {
                            expires: new Date(cookieData.expireDate),
                            path: '/',
                            domain: cookieDomain
                        });
                    }
                };
                var isClosed = function() {
                    return sQuery.cookie('spNTStatus') == "true";
                };
                var deleteNoteCookies = function() {
                    sQuery.cookie('sp-noteTimer', null, {
                        expires: 1,
                        path: '/',
                        domain: cookieDomain
                    });
                    sQuery.cookie('spNTStatus', null, {
                        expires: 1,
                        path: '/',
                        domain: cookieDomain
                    });
                };
                var isUpgraded = function() {
                    return typeof noteSettings.upgraded !== 'undefined' && noteSettings.upgraded === true;
                };
                var hexToRgb = function(hex) {
                    var bigint = parseInt(hex, 16);
                    var r = (bigint >> 16) & 255;
                    var g = (bigint >> 8) & 255;
                    var b = bigint & 255;
                    return r + "," + g + "," + b;
                };
                if (sQuery.cookie('sp-noteTimer') == undefined && data == undefined) {
                    return false;
                }
                var redirectUrl = '';
                if (data != undefined && typeof data.redirectUrl != "undefined") {
                    redirectUrl = data.redirectUrl;
                }
                if (sQuery.cookie('sp-noteTimer') == undefined && data != undefined) {
                    var cId = data.cId;
                    var couponCode = data.couponCode;
                    var noteSettings = this.notifies[cId].noteSettings;
                    var expireMinute = parseInt(noteSettings.couponExpireDate1) * 60 + parseInt(noteSettings.couponExpireDate2);
                    var startDate = new Date().getTime();
                    var expireDate = startDate + (expireMinute * 60000);
                    if (isUpgraded() && !noteSettings.showTimer) {
                        expireDate = noteSettings.couponExpDate * 1000;
                    }
                    var timerData = {
                        'startDate': startDate,
                        'expireDate': expireDate,
                        'cId': cId,
                        'code': spApi.Base64.encode(couponCode),
                        'encoded': 'true',
                        'display': 'opening',
                        'couponApply': 'false'
                    };
                    sQuery.cookie('sp-noteTimer', JSON.stringify(timerData), {
                        expires: new Date(expireDate),
                        path: '/',
                        domain: cookieDomain
                    });
                } else {
                    var cId = getNoteCookie('cId');
                    var couponCode = getNoteCookie('code');
                    if (getNoteCookie('encoded') == 'true') {
                        couponCode = spApi.Base64.decode(couponCode);
                    }
                    var noteSettings = this.notifies[cId].noteSettings;
                }
                if (isClosed()) {
                    return false;
                }
                if (sQuery('#sp-notes').length > 0 || sQuery('#ins-coupon-assist').length > 0) {
                    return false;
                }
                var validDate = noteSettings.couponExpDate;
                if (isUpgraded() && !noteSettings.showTimer && spApi.getUTCTime() > validDate) {
                    deleteNoteCookies();
                    return false;
                }
                var spLang = "en";
                if (spApi.getLang() == "tr_TR") {
                    spLang = "tr";
                } else if (spApi.getLang() == "ru_RU") {
                    spLang = "ru";
                } else if (spApi.getLang() == "pl_PL") {
                    spLang = "pl";
                }
                var lang = {};
                lang["en"] = {};
                lang["en"]["coupAssitCode"] = "Your Coupon";
                lang["en"]["dayText"] = "day(s)";
                lang["en"]["copied"] = "Copied";
                lang["tr"] = {};
                lang["tr"]["coupAssitCode"] = "Kupon Kodunuz";
                lang["tr"]["dayText"] = "gün";
                lang["tr"]["copied"] = "Kopyalandı";
                lang["ru"] = {};
                lang["ru"]["coupAssitCode"] = "&#1050;&#1086;&#1076; &#1050;&#1091;&#1087;&#1086;&#1085;&#1072;";
                lang["ru"]["dayText"] = "&#1076;&#1077;&#1085;&#1100;";
                lang["ru"]["copied"] = "&#1057;&#1082;&#1086;&#1087;&#1080;&#1088;&#1086;&#1074;&#1072;&#1085;";
                lang["pl"] = {};
                lang["pl"]["coupAssitCode"] = "Twój kupon";
                lang["pl"]["dayText"] = "godzin";
                lang["pl"]["copied"] = "Skopiowany";
                if (typeof noteSettings.ntWarningBackground == "undefined") {
                    noteSettings.ntWarningBackground = 'da0000';
                }
                if (typeof noteSettings.ntWarningText == "undefined") {
                    noteSettings.ntWarningText = '4adc00';
                }
                if (typeof noteSettings.ntNotWarningBackground == "undefined") {
                    noteSettings.ntNotWarningBackground = 'da0000';
                }
                if (typeof noteSettings.ntNotWarningText == "undefined") {
                    noteSettings.ntNotWarningText = '4adc00';
                }
                if (typeof noteSettings.couponTimerRuleId == "undefined") {
                    noteSettings.couponTimerRuleId = 0;
                }
                noteSettings.couponTimerRuleId = parseInt(noteSettings.couponTimerRuleId);
                var assistConf = {
                    'noteElem': '#sp-notes',
                    'closeElem': '.sp-noteClose',
                    'titleElem': '.sp-title',
                    'toggleElem': '.sp-noteMin, .sp-title',
                    'timerElem': '.sp-coupon',
                    'html': '<div id="sp-notes"> <div class="sp-notes-pop"> <a href="javascript:void(0);" class="sp-notes-pop-close"></a><strong id="coupAssitCopyMsg"></strong><br> <div id="coupAssitCopyMsgBody"></div> </div> <div class="sp-title">' + lang[spLang]["coupAssitCode"] + '</div> <a href="javascript:;" class="sp-noteMin"></a><a href="javascript:;" class="sp-noteClose"></a> <div class="sp-couponHolder"> <div class="sp-coupon" style="padding: 7px; font-size: 24px;"></div> </div> <div class="sp-note">' + this.getCamp(cId).camp.showNotes.replace(/(\r\n|\n\r|\r|\n)/g, "<br>") + '</div> <div class="product-footer"> <div class="marka-logo"><img src="//ikea.img.sociaplus.com/" /></div> <div class="socia-logo"><img src="' + spApi.apiUrl + 'images/pw_65x13.png" /></div> </div> </div>'
                };
                if (isUpgraded()) {
                    assistConf = {
                        'noteElem': '#ins-coupon-assist',
                        'closeElem': '#ins-assist-close',
                        'titleElem': '#ins-assist-title',
                        'toggleElem': '#ins-assist-title-cont',
                        'timerElem': '#ins-assist-timer',
                        'couponElem': '#ins-assist-coupon',
                        'copyElem': '#ins-assist-copy',
                        'html': '<div id="ins-coupon-assist"><div id="ins-assist-title-cont"><div id="ins-assist-title"></div><div id="ins-assist-toggle" class="ins-assist-maximize"></div></div><div id="ins-assist-container"><div id="ins-assist-timer"></div><div id="ins-assist-desc"></div><div id="ins-assist-coupon">' + couponCode + '</div><div id="ins-assist-copy" data-clipboard-target="#ins-assist-coupon" data-clipboard-text="' + couponCode + '"></div><div id="ins-assist-close"><a></a></div></div></div>'
                    };
                }
                var togglePosition = 'bottom';
                var notificationHTML = '<div class="sp-timer-notification" style="bottom: 15px; right: 15px; width:200px; min-height:47px; background: rgba(' + hexToRgb(noteSettings.ntWarningBackground) + ', 0.5); position:fixed; z-index:99999999999; border-radius:5px; display:none;"> <div style="width:154px; min-height:18px; overflow:hidden; margin:5px; float:left; padding:10px 18px; font-family:Calibri; color: #' + noteSettings.ntWarningText + '; font-size:12px; line-height:normal; text-align:left; outline:none;">' + noteSettings.couponTimerWarningText + '</div> <div class="sp-inner-notification-close" onclick="sQuery(this).closest(\'.sp-timer-notification\').remove();" style="color:#555; background:url(//api.useinsider.com/images/close-notif-white.png) no-repeat; background-size:10px; position:absolute; top:8px; right:8px; cursor:pointer; width:10px; height:10px;"></div> </div>';
                var notificationNotAppliedHTML = '<div class="sp-timer-notification" style="bottom: 15px; right: 15px; width:200px; min-height:47px; background: rgba(' + hexToRgb(noteSettings.ntNotWarningBackground) + ', 0.5); position:fixed; z-index:99999999999; border-radius:5px; display:none;"> <div style="width:154px; min-height:18px; overflow:hidden; margin:5px; float:left; padding:10px 18px; font-family:Calibri; color: #' + noteSettings.ntNotWarningText + '; font-size:12px; line-height:normal; text-align:left; outline:none;">' + noteSettings.couponTimerNotAppliedText + '</div> <div class="sp-inner-notification-close" onclick="sQuery(this).closest(\'.sp-timer-notification\').remove();" style="color:#555; background:url(//api.useinsider.com/images/close-notif-white.png) no-repeat; background-size:10px; position:absolute; top:8px; right:8px; cursor:pointer; width:10px; height:10px;"></div> </div>';
                var calculateMinPosition = function() {
                    return -(sQuery('#ins-assist-container').outerHeight() + parseFloat(sQuery('#ins-coupon-assist').css('border-top-width')));
                };
                var toggleIcon = function(status) {
                    if (isUpgraded()) {
                        sQuery(assistConf.noteElem).find('#ins-assist-toggle').removeClass('ins-assist-maximize ins-assist-minimize').addClass('ins-assist-' + status);
                    }
                };
                var checkOptionals = function() {
                    var assistElem = sQuery(assistConf.noteElem);
                    if (!noteSettings.showCoupon) {
                        assistElem.find(assistConf.couponElem).remove();
                        assistElem.find(assistConf.copyElem).remove();
                    }
                    if (!noteSettings.showTimer)
                        assistElem.find(assistConf.timerElem).remove();
                };
                var setPosition = function() {
                    var assistElem = sQuery(assistConf.noteElem);
                    if (noteSettings.mobilePosition == 'top' && spApi.isMobileBrowser() && (sQuery(window).outerWidth() <= 480 || sQuery(window).outerHeight() <= 480)) {
                        sQuery(assistConf.noteElem).append(sQuery(assistConf.toggleElem)).addClass('ins-assist-mobile-top');
                        togglePosition = 'top';
                    } else {
                        var positionConf = {
                            'bottom-left': 'ins-assist-position-left',
                            'bottom-center': 'ins-assist-position-center',
                            'bottom-right': 'ins-assist-position-right'
                        };
                        assistElem.addClass(positionConf[noteSettings.webPosition]);
                    }
                };
                var setAssistColor = function() {
                    var assistElem = sQuery(assistConf.noteElem);
                    var color = noteSettings.assistColor;
                    assistElem.css('border-color', color);
                    assistElem.find(assistConf.toggleElem).css('background-color', color);
                    assistElem.find(assistConf.timerElem).css('color', color);
                    assistElem.find(assistConf.couponElem).css('border-color', color);
                    assistElem.find(assistConf.copyElem).css('background-color', color);
                };
                var setCopyButton = function() {
                    var clipboard = new InsClipboard(assistConf.copyElem);
                    clipboard.on('success', function(e) {
                        sQuery(assistConf.copyElem).html(lang[spLang]["copied"]).css('background-color', '#1bc15d');
                        e.clearSelection();
                    });
                };
                var getAnimateObj = function(pos) {
                    var animObj = {};
                    animObj[togglePosition] = pos;
                    return animObj;
                };
                var setTexts = function() {
                    var texts = noteSettings.assistTexts;
                    sQuery(assistConf.noteElem).find('#ins-assist-title').text(texts.title);
                    sQuery(assistConf.noteElem).find('#ins-assist-desc').text(texts.desc);
                    sQuery(assistConf.noteElem).find('#ins-assist-copy').text(texts.copy);
                    sQuery(assistConf.noteElem).find('#ins-assist-close a').text(texts.close);
                };
                var openNote = function() {
                    if (redirectUrl.length > 0 && redirectUrl != "#" && redirectUrl.indexOf('javascript:void') === -1) {
                        window.location.href = redirectUrl;
                        return false;
                    }
                    spApi.logger('info', 'Geri sayım kupon asistanı aktif', cId);
                    var displayStatus = getNoteCookie('display');
                    sQuery('body').append(assistConf.html);
                    var assistElem = sQuery(assistConf.noteElem);
                    if (isUpgraded()) {
                        setTexts();
                        setAssistColor();
                        checkOptionals();
                        setPosition();
                        if (noteSettings.showCoupon) {
                            spApi.loadScript(spApi.staticUrl + 'js/clipboard.min.js', setCopyButton);
                        }
                        var minPos = calculateMinPosition();
                        assistElem.css(togglePosition, minPos);
                    }
                    if (displayStatus == 'opening') {
                        setTimeout(function() {
                            assistElem.animate(getAnimateObj('0'), 1200);
                            toggleIcon('minimize');
                        }, 1000);
                        updateNoteCookie('display', 'opened');
                    } else if (displayStatus == 'opened') {
                        assistElem.css(togglePosition, '0');
                        toggleIcon('minimize');
                    } else if (displayStatus == 'minimize') {
                        var expireDate = getNoteCookie('expireDate');
                        if (!isUpgraded() || noteSettings.showTimer)
                            sQuery(assistConf.titleElem).countdown({
                                until: new Date(expireDate),
                                format: 'dhMS',
                                layout: '{d<}{dn} ' + lang[spLang]["dayText"] + ' {d>}{h<}{hn}{sep}{h>}{m<}{mnn}{sep}{m>}{s<}{snn}{s>}'
                            });
                        toggleIcon('maximize');
                    }
                };
                var toggleNote = function() {
                    var displayStatus = getNoteCookie('display');
                    var assistElem = sQuery(assistConf.noteElem);
                    if (displayStatus == 'opened') {
                        var minPos = calculateMinPosition();
                        assistElem.animate(getAnimateObj(minPos), 400);
                        toggleIcon('maximize');
                        updateNoteCookie('display', 'minimize');
                        if (noteSettings.showTimer) {
                            var expireDate = getNoteCookie('expireDate');
                            sQuery(assistConf.titleElem).countdown({
                                until: new Date(expireDate),
                                format: 'dhMS',
                                layout: '{d<}{dn} ' + lang[spLang]["dayText"] + ' {d>}{h<}{hn}{sep}{h>}{m<}{mnn}{sep}{m>}{s<}{snn}{s>}'
                            })
                        }
                    } else {
                        assistElem.animate(getAnimateObj('0'), 400);
                        toggleIcon('minimize');
                        updateNoteCookie('display', 'opened');
                        sQuery(assistConf.titleElem).countdown('destroy').html(noteSettings.assistTexts.title);
                    }
                };
                var minNote = function() {
                    var displayStatus = getNoteCookie('display');
                    var noteHeight = sQuery('#sp-notes').height();
                    var titleHeight = sQuery('#sp-notes .sp-title').height() + 10;
                    var bottomAnimate = (noteHeight - titleHeight) * -1;
                    if (displayStatus == 'opened') {
                        sQuery('#sp-notes').animate({
                            bottom: bottomAnimate + 'px'
                        }, 400);
                        updateNoteCookie('display', 'minimize');
                        var expireDate = getNoteCookie('expireDate');
                        sQuery('.sp-title').countdown({
                            until: new Date(expireDate),
                            format: 'dhMS',
                            layout: '{d<}{dn} ' + lang[spLang]["dayText"] + ' {d>}{h<}{hn}{sep}{h>}{m<}{mnn}{sep}{m>}{s<}{snn}{s>}'
                        });
                    } else {
                        sQuery('#sp-notes').animate({
                            bottom: "0"
                        }, 400);
                        updateNoteCookie('display', 'opened');
                        sQuery('.sp-title').countdown('destroy').html(lang[spLang]["coupAssitCode"]);
                    }
                };
                var closeNote = function() {
                    sQuery(assistConf.noteElem).fadeOut();
                    updateNoteCookie('display', 'closed');
                    sQuery(assistConf.timerElem).countdown('destroy');
                    sQuery(assistConf.titleElem).countdown('destroy');
                    sQuery(assistConf.noteElem).remove();
                    clearInterval(flashInterval);
                };
                var flashInterval = undefined;
                var flashEffect = function() {
                    var endDate = getNoteCookie('expireDate');
                    flashInterval = setInterval(function() {
                        var remainingMin = (new Date(endDate).getTime() - new Date().getTime()) / 60000;
                        if (remainingMin <= noteSettings.couponTimerWarningTime) {
                            sQuery(assistConf.timerElem).effect(noteSettings.couponTimerWarningEffect);
                        }
                    }, 2000);
                };
                var applyCoupon = function() {
                    setTimeout(function() {
                        var applyButtonClick = spApi.useCouponButton().buttonClick;
                        var couponInput = spApi.useCouponButton().couponInput;
                        var applyStatus = getNoteCookie('couponApply');
                        if (applyStatus == 'false') {
                            if (typeof noteSettings.couponTimerRuleId != "undefined" && noteSettings.couponTimerRuleId > 0 && !spApi.e(spApi.rules[noteSettings.couponTimerRuleId].test)) {
                                return false;
                            }
                            spApi.logger('info', 'Geri sayım kuponu uygulanıyor.', cId);
                            updateNoteCookie('couponApply', 'applying');
                            if (sQuery(couponInput).length > 0) {
                                var inputColor = sQuery(couponInput).css('background-color');
                                var defaultColor = sQuery(couponInput).css('color');
                                sQuery(couponInput).css('color', inputColor).val(couponCode);
                                spApi.e(applyButtonClick);
                                setTimeout(function() {
                                    sQuery(couponInput).css('color', defaultColor);
                                }, 3000);
                            }
                        } else if (applyStatus == 'applying') {
                            if (spApi.isCouponCodeApplied()) {
                                var startDate = getNoteCookie('startDate');
                                var elapsedTime = Math.round((new Date().getTime() - new Date(startDate).getTime()) / 60000);
                                if (elapsedTime < 1) {
                                    elapsedTime = 1;
                                }
                                spApi.worker.send('do-logging', {
                                    type: 'couponAppliedTimer',
                                    campId: cId,
                                    referer: window.location.href,
                                    otherProperties: {
                                        'couponCode': couponCode,
                                        'elapsedTime': elapsedTime
                                    }
                                });
                                closeNote();
                                if (noteSettings.couponTimerWarningText != undefined && noteSettings.couponTimerWarningText.length > 0) {
                                    sQuery('body').append(notificationHTML);
                                    sQuery('.sp-timer-notification').fadeIn().fadeOut(10000);
                                }
                                updateNoteCookie('couponApply', 'applied');
                            } else {
                                closeNote();
                                if (noteSettings.couponTimerNotAppliedText != undefined && noteSettings.couponTimerNotAppliedText.length > 0) {
                                    sQuery('body').append(notificationNotAppliedHTML);
                                    sQuery('.sp-timer-notification').fadeIn().fadeOut(10000);
                                }
                            }
                        }
                    }, 2000)
                };
                sQuery(assistConf.toggleElem).die('click').live('click', function() {
                    if (isUpgraded())
                        toggleNote();
                    else
                        minNote();
                });
                sQuery(assistConf.closeElem).die('click').live('click', function() {
                    closeNote();
                    spApi.worker.send('do-logging', {
                        type: 'closedCouponTimer',
                        campId: cId,
                        referer: window.location.href
                    });
                });
                var startTimer = function() {
                    if (sQuery('#sp-notes').length > 0 || sQuery('#ins-coupon-assist').length > 0) {
                        return false;
                    }
                    openNote();
                    if (!isUpgraded() || noteSettings.showTimer) {
                        var expireDate = getNoteCookie('expireDate');
                        sQuery(assistConf.timerElem).countdown({
                            onExpiry: function() {
                                closeNote();
                            },
                            until: new Date(expireDate),
                            format: 'dhMS',
                            layout: '{d<}{dn} ' + lang[spLang]["dayText"] + ' {d>}{h<}{hn}{sep}{h>}{m<}{mnn}{sep}{m>}{s<}{snn}{s>}'
                        });
                    }
                    if (noteSettings.couponTimerWarningEffect != '-1') {
                        flashEffect();
                    }
                    if (spApi.isOnCouponPage()) {
                        applyCoupon();
                    }
                };
                if (isUpgraded()) {
                    var link = document.createElement('link');
                    link.setAttribute('id', 'ins-assist-css');
                    link.setAttribute('rel', 'stylesheet');
                    link.setAttribute('type', 'text/css');
                    link.setAttribute('media', 'screen');
                    link.addEventListener('load', startTimer, false);
                    document.getElementsByTagName('head')[0].appendChild(link);
                    link.setAttribute('href', spApi.staticUrl + 'css/coupon-assist.css');
                } else {
                    startTimer();
                }
                if (Boolean(spApi.couponAsistanceShowEvents)) {
                    sQuery.each(spApi.couponAsistanceShowEvents, function(key, callback) {
                        callback();
                    });
                }
            },
            gaSend: function(l, caller) {
                try {
                    if (this.gaServiceIsActive == '0') {
                        return false;
                    }
                    if (!l.campId == undefined) {
                        return false;
                    }
                    l.campId = l.campId.toString();
                    var campID = 0;
                    var campName = '';
                    var gaCamp = {};
                    var gaEvents = {};
                    var dataSending = false;
                    var productType = 0;
                    if (l.campId.indexOf('c') > -1 || l.productType == 'custom') {
                        if (l.campId.indexOf('c') < 0) {
                            l.campId = 'c' + l.campId
                        }
                        var cCamps = this.customizationCamps;
                        sQuery.each(cCamps, function(i, c) {
                            if (l.campId == c.id) {
                                campID = c.id;
                                campName = spApi.decryptCampName(c.campName);
                                gaCamp = c;
                                gaEvents = c.gaEvents || {};
                            }
                        });
                    } else {
                        var cCamps = this.camps;
                        sQuery.each(cCamps, function(i, c) {
                            if (l.campId == c.id) {
                                campID = c.id;
                                campName = spApi.decryptCampName(c.campName);
                                productType = c.productType;
                                gaCamp = c;
                                gaEvents = c.gaEvents || {};
                            }
                        });
                    }
                    var logType = l.logType || l.type || l.salesType;
                    if (l.productType === 'goalBuilder' && logType === 'join') {
                        return false;
                    }
                    var eventCategory = 'INSIDER';
                    var eventAction = campName;
                    var eventLabel = '';
                    var eventValue = 0;
                    if (this.gaNonInteraction == '1') {
                        var nonInteraction = true;
                    } else {
                        var nonInteraction = false;
                    }
                    if (logType == 'impression' || logType == 'camp-step1') {
                        if (gaEvents['impression'] != '1') {
                            return false;
                        }
                        eventAction += '-impressions';
                        dataSending = true;
                    } else if (logType == 'camp-join' || logType == 'join') {
                        if (gaEvents['join'] != '1') {
                            return false;
                        }
                        eventAction += '-joins';
                        if (typeof l.extra !== "undefined" && typeof l.extra.joinText !== "undefined" && l.extra.joinText !== "") {
                            eventAction += ' - ' + l.extra.joinText;
                        }
                        dataSending = true;
                    } else if (logType == 'closed' || logType == 'camp-step1-close') {
                        if (gaEvents['close'] != '1') {
                            return false;
                        }
                        eventAction += '-close';
                        dataSending = true;
                    } else if (logType == 'variation-sales') {
                        if (gaEvents["sales"] != '1') {
                            return false;
                        }
                        var orderId = this.getOrderId() || 'NaN';
                        var amount = sQuery.cookie('total-cart-amount') || 0;
                        eventAction += '-sales';
                        eventLabel = orderId;
                        eventValue = amount;
                        dataSending = true;
                    } else if (logType == 'sales' || logType == 'bounce-sales') {
                        if (gaEvents["sales"] != '1') {
                            return false;
                        }
                        var orderId = this.getOrderId() || 'NaN';
                        var amount = sQuery.cookie('total-cart-amount') || 0;
                        eventAction += '-sales';
                        eventLabel = orderId;
                        eventValue = amount;
                        dataSending = true;
                    } else if (logType == 'goal') {
                        var goalKey = "goal-" + l.goalId;
                        if (gaEvents[goalKey] == undefined && gaEvents[goalKey] != '1') {
                            return false;
                        }
                        var goalName = spApi.personalizationCamps[l.builderId]['goalBuilderList'][l.goalId]['goalName'];
                        eventAction += '-' + goalName;
                        dataSending = true;
                    } else if (logType == 'globalExperiment') {
                        eventAction = l.action;
                        eventLabel = 1;
                        dataSending = true;
                    } else if (logType == 'sendAdAudience') {
                        dataSending = true;
                    }
                    eventValue = String(eventValue).replace(',', '.');
                    eventValue = Math.round(eventValue) || 0;
                    if (this.gaIsActiveCustom == '1') {
                        if (window._gaq) {
                            _gaq.push(['_setCustomVar', this.gaCustomVar, 'Insider', campID, 2]);
                        }
                    }
                    if (dataSending == false) {
                        if (this.gaIsActiveCustom == '1') {
                            if (window._gaq) {
                                _gaq.push(['_trackEvent', eventCategory, eventAction, 'customVarEvent', eventValue, nonInteraction]);
                            }
                        }
                        return false;
                    }
                    if (eventLabel == '') {
                        var builderId = spApi.getBuilderIdFromVar(campID);
                        if (builderId !== false) {
                            eventLabel = '(builder ID: ' + builderId + ')';
                        }
                    }
                    if (spApi.gaDataLayerIsActive == '1') {
                        if (spApi.gaDataLayerSettings['eventName'] == "") {
                            return false;
                        }
                        if (spApi.gaDataLayerSettings['eventCategory'] == "") {
                            return false;
                        }
                        if (spApi.gaDataLayerSettings['eventAction'] == "") {
                            return false;
                        }
                        dataLayerObject = {
                            event: spApi.gaDataLayerSettings['eventName']
                        };
                        dataLayerObject[spApi.gaDataLayerSettings['eventCategory']] = eventCategory;
                        dataLayerObject[spApi.gaDataLayerSettings['eventAction']] = eventAction;
                        if (spApi.gaDataLayerSettings['eventLabel'] != "") {
                            dataLayerObject[spApi.gaDataLayerSettings['eventLabel']] = eventLabel;
                        }
                        if (spApi.gaDataLayerSettings['eventValue'] != "") {
                            dataLayerObject[spApi.gaDataLayerSettings['eventValue']] = eventValue;
                        }
                        window.dataLayer = window.dataLayer || [];
                        dataLayer.push(dataLayerObject);
                        spApi.logger('info', 'dataLayer ile analytics logu atıldı.', campID);
                        return true;
                    }
                    var sameTracking = false;
                    try {
                        if (window.ga && window._gaq && typeof ga.getAll != "undefined" && typeof _gat != "undefined" && ga.getAll()[0].get('trackingId') == _gat._getTrackerByName()._getAccount()) {
                            sameTracking = true;
                        }
                    } catch (e) {}
                    function gaSender(tracker, gaType) {
                        if (typeof tracker !== 'string') {
                            return;
                        }
                        gaType = gaType || 'ga';
                        var gaData = {
                            'hitType': 'event',
                            'eventCategory': eventCategory,
                            'eventAction': eventAction,
                            'eventLabel': eventLabel,
                            'eventValue': eventValue,
                            'nonInteraction': nonInteraction
                        };
                        var sendDebugLogsFor = function(type, success) {
                            if (typeof success === 'boolean') {
                                var debugText = type + (success ? ' objesiyle analytics logu atıldı.' : ' is not defined, we did not push to ga.');
                                spApi.logger('info', debugText, campID);
                            }
                        }
                        if (gaType === 'ga' && typeof window.ga !== 'undefined') {
                            sendDebugLogsFor(gaType, true);
                            return window.ga(tracker, gaData);
                        }
                        if (gaType === 'gua' && typeof window.gua !== 'undefined') {
                            sendDebugLogsFor(gaType, true);
                            return window.gua(tracker, gaData);
                        }
                        if (gaType === 'UDM' && typeof window.UDM !== 'undefined' && typeof window.UDM._universalMgaq === 'function') {
                            sendDebugLogsFor(gaType, true);
                            return window.UDM._universalMgaq(['send', 'event', eventCategory, eventAction, eventLabel, {
                                'nonInteraction': 1
                            }]);
                        }
                        return sendDebugLogsFor(gaType, false);
                    }
                    if (window.ga) {
                        gaSender('send');
                    }
                    if (window._gaq && sameTracking == false) {
                        spApi.logger('info', '_gaq objesiyle analytics logu atıldı.', campID);
                        _gaq.push(['_trackEvent', eventCategory, eventAction, eventLabel, eventValue, nonInteraction]);
                    }
                } catch (err) {
                    spApi.errLog(err);
                }
            },
            getGAStyleSesId: function() {
                var id = sQuery.cookie('ins-gaSSId');
                try {
                    spApi.logger('info', 'set gaStyleSession id ');
                    var sessionInit = false;
                    var expDate = new Date();
                    expDate.setTime(expDate.getTime() + (30 * 60 * 1000));
                    var cookieSettings = {
                        expires: expDate,
                        path: '/',
                        domain: cookieDomain
                    };
                    var isSessionExpired = !id;
                    if (!isSessionExpired) {
                        var oldSession = /.+_(.*)/.exec(id);
                        if (oldSession && oldSession.length == 2) {
                            isSessionExpired = (new Date(oldSession[1] * 1000)).getUTCDate() != (new Date()).getUTCDate();
                        }
                    }
                    if (isSessionExpired) {
                        spApi.logger('info', 'update gaStyleSession id !');
                        sessionInit = true;
                        function guid() {
                            function s4() {
                                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
                            }
                            return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
                        }
                        id = guid() + '_' + spApi.getTime();
                        spApi.logInsight();
                    }
                    if (typeof spApi.sessionInit === 'undefined') {
                        spApi.sessionInit = sessionInit;
                    }
                    sQuery.cookie('ins-gaSSId', id, cookieSettings);
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getGAStyleSesId',
                        bugType: 'partner'
                    });
                }
                return id;
            },
            logInsight: function() {
                try {
                    var pairs = spApi.allStorageData();
                    sQuery.each(pairs, function(i, obj) {
                        var key = obj.key;
                        if (key.indexOf("ins-insight-") != -1) {
                            var logData = {
                                key: sQuery.trim(key),
                                obj: sQuery.toJSON(null)
                            };
                            spApi.updateCookie(logData, 'nolog');
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'logInsight',
                        bugType: 'partner'
                    });
                }
            },
            cartCatCount: function(_cat) {
                try {
                    if (!spApi.isOnCartPage())
                        return;
                    var success = false;
                    var count = 0;
                    var products = spApi.getPaidProducts() || [];
                    var prodCats = JSON.parse(spApi.storageData('prodCats')) || [];
                    if (typeof products == "undefined" || typeof prodCats == "undefined" || products.length == 0 || prodCats.length == 0)
                        return count;
                    sQuery.each(products, function(i, product) {
                        success = false;
                        sQuery.each(prodCats, function(j, cat) {
                            if (sQuery.trim(decodeURIComponent(cat.name)) == sQuery.trim(product.name) && cat.cat.toLowerCase().indexOf(_cat.toLowerCase()) != -1) {
                                success = true;
                                return false;
                            }
                        });
                        if (success)
                            count++;
                    });
                    return count;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'cartCatCount',
                        bugType: 'partner',
                        extraData: {
                            param1: _cat
                        }
                    });
                }
            },
            events: {
                camp: null,
                checkEventDuplicate: function(callback, type) {
                    var check = false;
                    if (typeof callback != "undefined" && typeof this.camp != "undefined") {
                        check = true;
                        var eventCallbacks = this.camp.callbacks[type];
                        sQuery.each(eventCallbacks, function(i, func) {
                            if (typeof func === 'function' && typeof callback === 'function' && func.toString() == callback.toString()) {
                                check = false;
                            }
                        });
                    }
                    return check;
                },
                setCamp: function(campId) {
                    var _camp = null;
                    sQuery.each(spApi.camps, function(key, camp) {
                        if (camp.id == campId) {
                            _camp = camp;
                        }
                    });
                    return _camp;
                },
                show: function(callback) {
                    if (this.checkEventDuplicate(callback, 'show'))
                        this.setCamp(this.camp.id).callbacks.show.push(callback);
                    return this;
                },
                load: function(callback) {
                    if (this.checkEventDuplicate(callback, 'load'))
                        this.setCamp(this.camp.id).callbacks.load.push(callback);
                    return this;
                },
                liked: function(callback) {
                    if (this.checkEventDuplicate(callback, 'liked'))
                        this.setCamp(this.camp.id).callbacks.liked.push(callback);
                    return this;
                },
                close: function(callback) {
                    if (this.checkEventDuplicate(callback, 'close'))
                        this.setCamp(this.camp.id).callbacks.close.push(callback);
                    return this;
                },
                setPosition: function(options) {
                    if (typeof options != "undefined" && typeof this.camp != "undefined")
                        this.setCamp(this.camp.id).position = options;
                    return this;
                },
                setData: function(params) {}
            },
            getCamp: function(campId) {
                if (typeof this.sortCamp == "undefined") {
                    this.sortCamp = {};
                    var me = this;
                    sQuery.each(spApi.camps.concat(spApi.customizationCamps), function(key, camp) {
                        me.sortCamp[camp.id] = camp;
                    });
                }
                spApi.events.camp = this.sortCamp[campId];
                return spApi.events;
            },
            setApiInitConditions: function() {
                try {
                    if (spApi.apiInitConfig.inited) {
                        spApi.logger('warning', 'setApiInitConditions method has already executed');
                        return false;
                    }
                    spApi.apiInitConfig.inited = true;
                    var apiInitConfig = function() {
                        if (spApi.apiInitConfig.mobile instanceof Object && spApi.isMobileBrowser()) {
                            return spApi.apiInitConfig.mobile;
                        } else if (spApi.apiInitConfig.desktop instanceof Object && !spApi.isMobileBrowser()) {
                            return spApi.apiInitConfig.desktop;
                        } else if (spApi.apiInitConfig.conditions instanceof Array) {
                            return spApi.apiInitConfig;
                        } else if (!spApi.apiInitConfig.mobile && !spApi.apiInitConfig.desktop) {
                            return {
                                conditions: [{
                                    listenUrlChange: true
                                }]
                            };
                        }
                    }();
                    var InitConditionsManager = function(apiInitConfig) {
                        this.CHECK_TYPE_EXISTS = 'exists';
                        this.CHECK_TYPE_NOT_EXISTS = 'not exists';
                        this.CHECK_TYPE_REMOVED = 'removed';
                        this.CHECK_TYPE_CONTAINS = 'contains';
                        this.CHECK_TYPE_NOT_CONTAINS = 'not contains';
                        this.CHECK_TYPE_IS = 'is';
                        this.CHECK_TYPE_IS_NOT = 'is not';
                        this.CHECK_TYPE_CLICK = 'click';
                        this.CLICK_LISTENER_ELEMENT_CLASS = 'ins-init-condition-tracking';
                        this.CLICK_CHECK_ELEMENT_CLASS = 'ins-init-condition-clicked';
                        this.singlePageApiDelay = 0;
                        this.referenceElement = sQuery(apiInitConfig.referenceElement || 'body')[0] || document;
                        this.lastUrl = location.href;
                        this.urlChanged = false;
                        this.conditions = apiInitConfig.conditions;
                        this.clickListenerInited = false;
                        return this;
                    };
                    InitConditionsManager.prototype.init = function() {
                        if (this.conditions.length === 0) {
                            return;
                        }
                        if (window.MutationObserver && this.referenceElement) {
                            setTimeout(function() {
                                var observer = new MutationObserver(this.mutationCallback.bind(this));
                                observer.observe(this.referenceElement, {
                                    childList: true,
                                    subtree: true
                                });
                            }
                            .bind(this), 0);
                        } else {
                            this.referenceElement.addEventListener('DOMSubtreeModified', this.mutationCallback);
                        }
                    }
                    ;
                    InitConditionsManager.prototype.mutationCallback = spApi.debounce(function() {
                        var initFlag = false;
                        if (this.lastUrl !== location.href) {
                            this.lastUrl = location.href;
                            this.urlChanged = true;
                        }
                        if (this.conditions.length > 0) {
                            sQuery.each(this.conditions, function(index, condition) {
                                condition.status = condition.status || {};
                                if (condition.listenUrlChange && !this.urlChanged) {
                                    return;
                                }
                                if (condition.url && this.checkUrlCondition(condition.url) && condition.element) {
                                    condition.status.url = true;
                                    if (this.checkElementCondition(condition.element)) {
                                        condition.status.element = true;
                                        this.reInitApi('Condition group is true:', condition);
                                    }
                                    return false;
                                } else if (condition.url && this.urlChanged) {
                                    initFlag = this.checkUrlCondition(condition.url);
                                } else if (condition.element) {
                                    initFlag = this.checkElementCondition(condition.element);
                                } else if (condition.listenUrlChange && this.urlChanged) {
                                    condition.status.urlChanged = true;
                                    initFlag = true;
                                }
                                if (initFlag) {
                                    if (condition.url) {
                                        condition.status.url = true;
                                    } else if (condition.element) {
                                        condition.status.element = true;
                                    }
                                    this.reInitApi('Condition group is true:', condition);
                                    return false;
                                }
                            }
                            .bind(this));
                        } else if (this.urlChanged) {
                            this.reInitApi('Url has been changed');
                        }
                    }, (apiInitConfig.mutationDelay || 100));
                    InitConditionsManager.prototype.reInitApi = function(log, condition) {
                        condition = condition || {};
                        spApi.logger('info', log + ':' + JSON.stringify(condition));
                        this.urlChanged = false;
                        spApi.debounce(spApi.reInitOnChange, condition.delay || this.singlePageApiDelay)();
                    }
                    ;
                    InitConditionsManager.prototype.checkUrlCondition = function(condition) {
                        var initFlag = false;
                        if (typeof condition === 'string') {
                            condition = [condition];
                        }
                        var conditions = condition || [];
                        sQuery.each(conditions, function(index, condition) {
                            if (typeof condition === 'string') {
                                initFlag = this.checkUrl(condition, this.CHECK_TYPE_CONTAINS);
                            } else if (condition instanceof Object) {
                                initFlag = this.checkUrl(condition.keyword, condition.checkType || this.CHECK_TYPE_CONTAINS);
                            }
                            if (!initFlag) {
                                return false;
                            }
                        }
                        .bind(this));
                        return initFlag;
                    }
                    ;
                    InitConditionsManager.prototype.checkUrl = function(keyword, checkType) {
                        if (checkType === this.CHECK_TYPE_IS) {
                            return keyword === location.href;
                        } else if (checkType === this.CHECK_TYPE_IS_NOT) {
                            return keyword !== location.href;
                        } else if (checkType === this.CHECK_TYPE_CONTAINS) {
                            return location.href.indexOf(keyword) !== -1;
                        } else if (checkType === this.CHECK_TYPE_NOT_CONTAINS) {
                            return location.href.indexOf(keyword) === -1;
                        }
                        spApi.logger('warning', 'Unsupported checkType:' + checkType);
                        return false;
                    }
                    ;
                    InitConditionsManager.prototype.checkElementCondition = function(condition) {
                        if (typeof condition === 'string') {
                            condition = [{
                                selector: condition,
                                checkType: this.CHECK_TYPE_EXISTS
                            }];
                        }
                        var conditions = condition || [];
                        sQuery.each(conditions, function(index, condition) {
                            if (typeof condition === 'string') {
                                conditions[index] = {
                                    selector: condition,
                                    checkType: this.CHECK_TYPE_EXISTS
                                };
                            }
                            if (condition instanceof Object) {
                                if (this.checkElement(condition)) {
                                    condition.status = true;
                                }
                            }
                        }
                        .bind(this));
                        var conditionStatusCount = conditions.filter(function(condition) {
                            return condition.status;
                        }).length;
                        if (conditionStatusCount === conditions.length) {
                            conditions = conditions.map(function(condition) {
                                condition.status = false;
                            });
                            return true;
                        }
                        return false;
                    }
                    ;
                    InitConditionsManager.prototype.checkElement = function(condition) {
                        var checkType = condition.checkType || this.CHECK_TYPE_EXISTS;
                        var selector = condition.selector;
                        if (checkType === this.CHECK_TYPE_EXISTS) {
                            var encodedSelector = btoa(condition);
                            var elementAttributeValue = sQuery(selector).attr('ins-init-condition') || '';
                            if (sQuery(selector).exists() && elementAttributeValue.indexOf(encodedSelector) === -1) {
                                sQuery(selector).attr('ins-init-condition', elementAttributeValue + '#' + encodedSelector);
                                return true;
                            }
                            return false;
                        } else if (checkType === this.CHECK_TYPE_NOT_EXISTS) {
                            return !sQuery(selector).exists();
                        } else if (checkType === this.CHECK_TYPE_CLICK) {
                            sQuery(selector).addClass(this.CLICK_LISTENER_ELEMENT_CLASS);
                            this.listenClickEvents();
                            if (sQuery(selector).hasClass(this.CLICK_CHECK_ELEMENT_CLASS)) {
                                sQuery(selector).removeClass(this.CLICK_CHECK_ELEMENT_CLASS);
                                return true;
                            }
                            return false;
                        } else if (checkType === this.CHECK_TYPE_REMOVED) {
                            if (sQuery(selector).exists()) {
                                condition.showed = true;
                                return false;
                            } else if (condition.showed) {
                                condition.showed = false;
                                return true;
                            }
                            return false;
                        }
                        spApi.logger('warning', 'Unsupported checkType:' + checkType);
                        return false;
                    }
                    ;
                    InitConditionsManager.prototype.listenClickEvents = function() {
                        if (this.clickListenerInited === true) {
                            return;
                        }
                        this.clickListenerInited = true;
                        sQuery(document).on('clickedElement', function(event, element) {
                            if (!sQuery(element).hasClass(this.CLICK_LISTENER_ELEMENT_CLASS)) {
                                return;
                            }
                            sQuery(element).addClass(this.CLICK_CHECK_ELEMENT_CLASS);
                            this.mutationCallback();
                        }
                        .bind(this));
                    }
                    ;
                    new InitConditionsManager(apiInitConfig).init();
                } catch (error) {
                    spApi.errLog(error, {
                        logType: 'setApiInitConditions',
                        bugType: 'product'
                    });
                }
            },
            reInitOnChangeCallbacks: [],
            reInitOnChange: function() {
                try {
                    sQuery(window).trigger('resetTimeOnSite');
                    spApi.reInitOnChangeCallbacks.forEach(function(callback) {
                        callback()
                    });
                    if (sQuery.fancybox) {
                        var sliderCampList = [];
                        var pairs = spApi.allStorageData();
                        sQuery.each(pairs, function(i, obj) {
                            var key = obj.key;
                            var value = unescape(obj.value);
                            if (key.indexOf('sp-camp-') == -1)
                                return;
                            if (typeof spApi.notifies[key.match(/\d+/g)[0]] == "undefined")
                                return;
                            if (spApi.notifies[key.match(/\d+/g)[0]].category != "7")
                                return;
                            if (value.indexOf('hideSlider') != -1)
                                return;
                            sliderCampList.push(key.match(/\d+/g)[0]);
                        });
                        spApi.isFirstVersus = false;
                        sQuery.fancybox.close();
                        sQuery('.sp-inner-notification').remove();
                        sQuery('.sp-inline-wrap').remove();
                        sQuery('.ins-preview-wrapper').remove();
                        sQuery(window).unbind('scroll.insFrameless');
                        sQuery(window).unbind('resize.insFrameless');
                        sQuery.each(sliderCampList, function(key, campId) {
                            var campCookie = JSON.parse(spApi.storageData('sp-camp-' + campId));
                            if (campCookie != null) {
                                delete campCookie.hideSlider;
                                spApi.storageData('sp-camp-' + campId, JSON.stringify(campCookie), {
                                    expires: 14,
                                    path: '/',
                                    domain: cookieDomain
                                });
                            }
                        });
                    }
                    spApi.conLog('init');
                    spApi.clearCustomCamps();
                    spApi.clearElementLoadComplete();
                    spApi.resetCampaignsSettings();
                    spApi.personalizationSetStatus = false;
                    spApi.sessionInit = undefined;
                    spApi.activeBannerManagementCamps = [];
                    spApi.showedCampaignList = [];
                    spApi.hitSend = false;
                    spApi.isWebPushInitialized = false;
                    (spApi.cartAbandonmentEmail || {}).providerIndex = 0;
                    sQuery(document).trigger('resetInspector.insider');
                    spApi.init(false);
                    spApi.executedCallbacks = [];
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'reinitOnParameterChange',
                        bugType: 'partner',
                        extraData: {
                            paramer: location.href
                        }
                    });
                }
            },
            clearElementLoadComplete: function() {
                spApi.logger('info', 'ElementLoadComplete is clearing.');
                spApi.elementLoadCompleteConfig.mutableList.forEach(function(mutableObject) {
                    clearTimeout(mutableObject.notFoundCallbackTimeout);
                });
                if (typeof spApi.elementLoadCompleteConfig.disconnect === 'function') {
                    spApi.elementLoadCompleteConfig.disconnect();
                }
                document.body.removeEventListener('DOMSubtreeModified', spApi.elementLoadCompleteConfig.mutationCallback);
                spApi.elementLoadCompleteConfig.mutableList = [];
                spApi.elementLoadCompleteConfig.inited = false;
            },
            resetCampaignsSettings: function() {
                spApi.logger('info', 'Campaigns are converting to valid.');
                spApi.camps.forEach(function(camp) {
                    camp.invalid = undefined;
                });
            },
            isTargetingReady: function(camp) {
                var builderId = spApi.getBuilderIdFromVar(camp.id);
                return camp.isTest != 1 || (camp.isTest == 1 && builderId in spApi.getCampBuilderCandidates());
            },
            getPersonalizationCamp: function() {
                if (!spApi.personalizationSetStatus) {
                    spApi.personalizationSetStatus = true;
                } else {
                    return;
                }
                spApi.userSegments = spApi.storageData("user-segments") == null ? {} : sQuery.parseJSON(spApi.storageData("user-segments"));
                var newSegmentList = new Object();
                sQuery.each(spApi.personalizationCamps, function(prsnlztnId, prsnlztn) {
                    if (typeof prsnlztn == 'undefined') {
                        return;
                    }
                    if (spApi.userSegments[prsnlztnId] == undefined || typeof spApi.userSegments[prsnlztnId] == 'undefined') {
                        try {
                            var isSegmentValid = true;
                            var prsnlztnStatus = false;
                            if (prsnlztn.segment != undefined && prsnlztn.segment != null && prsnlztn.segment.length > 0) {
                                if (!spApi.e(spApi.rules[prsnlztn.segment[0]].test)) {
                                    isSegmentValid = false;
                                } else {
                                    delete spApi.userSegments[prsnlztnId];
                                }
                            }
                        } catch (err) {
                            spApi.errLog(err, {
                                logType: 'getPersonalizationCamp-blok1-' + prsnlztnId,
                                bugType: 'partner',
                                extraData: {
                                    param1: JSON.stringify(prsnlztn)
                                }
                            });
                        }
                        var totalRatio = 0;
                        var randomRatio = parseInt(Math.random() * 100);
                        var displayedVar = false;
                        if (isSegmentValid) {
                            sQuery.each(prsnlztn.variations, function(key, variation) {
                                try {
                                    if (variation != null && variation.varId) {
                                        if (!spApi.spCampCheckStatus(variation.varId, "step1-displayed")) {
                                            oldRatio = Number(totalRatio);
                                            totalRatio += Number(variation.ratio);
                                            if (!displayedVar && oldRatio <= randomRatio && randomRatio < totalRatio) {
                                                spApi.userSegments[prsnlztnId] = variation.varId;
                                                newSegmentList[prsnlztnId] = {
                                                    id: variation.varId,
                                                    ratio: "o:" + oldRatio + " r:" + randomRatio + " t:" + totalRatio + " var ratio:" + variation.ratio
                                                };
                                                return true;
                                            }
                                        } else {
                                            spApi.userSegments[prsnlztnId] = variation.varId;
                                            newSegmentList[prsnlztnId] = {
                                                id: variation.varId,
                                                ratio: "already shown. var ratio:" + variation.ratio
                                            };
                                            return false;
                                        }
                                    }
                                } catch (err) {
                                    spApi.errLog(err, {
                                        logType: 'getPersonalizationCamp-blok2-' + prsnlztnId,
                                        bugType: 'partner',
                                        extraData: {
                                            param1: JSON.stringify(variation)
                                        }
                                    });
                                }
                            });
                        }
                    }
                });
                try {
                    var data = {
                        key: 'user-segments',
                        obj: spApi.userSegments
                    };
                    var tempSegment = JSON.stringify(spApi.userSegments);
                    if (spApi.checkCampBuilderTest()) {
                        var variationCandidates = spApi.getCampBuilderCandidates();
                        var testBuilderId = spApi.getObjectFirstKey(variationCandidates);
                        if (spApi.userSegments[testBuilderId] && data.obj[testBuilderId]) {
                            spApi.userSegments[testBuilderId] = data.obj[testBuilderId] = variationCandidates[testBuilderId];
                        }
                    }
                    if (spApi.checkCampTest()) {
                        data.obj = spApi.userSegments = {};
                    }
                    spApi.updateCookie(data, "nolog");
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getPersonalizationCamp-blok3',
                        bugType: 'partner',
                        extraData: {
                            param1: JSON.stringify(tempSegment)
                        }
                    });
                }
            },
            getPersonalizationId: function(id) {
                var variationCampId;
                try {
                    sQuery.each(spApi.personalizationCamps, function(campId, prsnlztn) {
                        if (typeof prsnlztn == 'undefined') {
                            return;
                        }
                        sQuery.each(prsnlztn.variations, function(varKey, variation) {
                            if (variation.varId == id) {
                                variationCampId = campId;
                            }
                        });
                    });
                    return variationCampId;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getPersonalizationId',
                        bugType: 'partner',
                        extraData: {
                            param1: id
                        }
                    });
                }
            },
            isControlCamp: function(id) {
                var cgStatus = false;
                sQuery.each(spApi.personalizationCamps, function(campId, prsnlztn) {
                    if (typeof prsnlztn == 'undefined') {
                        return;
                    }
                    sQuery.each(prsnlztn.variations, function(varKey, variation) {
                        if (typeof prsnlztn == 'undefined') {
                            return;
                        }
                        if (variation.varId == id && variation.type == "cg") {
                            cgStatus = true;
                        }
                    });
                });
                return cgStatus;
            },
            checkVarSegment: function(variation) {
                var status = true;
                sQuery.each(spApi.personalizationCamps, function(prsnlztnId, prsnlztn) {
                    if (typeof prsnlztn == 'undefined') {
                        return;
                    }
                    sQuery.each(prsnlztn.variations, function(key, vari) {
                        if (typeof prsnlztn == 'undefined') {
                            return;
                        }
                        if (vari && vari.varId == variation['id']) {
                            if (spApi.userSegments[prsnlztnId] == variation['id']) {
                                status = true;
                                return true;
                            } else {
                                status = false;
                                return false;
                            }
                        }
                    });
                });
                return status;
            },
            isJourneyActive: function(id) {
                var storageData = JSON.parse(spApi.storageData('ins-journey-camp-' + id));
                return storageData !== null && (storageData && storageData['step1-displayed']);
            },
            setJourneyActive: function(journeyId) {
                if (spApi.isJourneyActive(journeyId)) {
                    return false;
                }
                spApi.logger('info', 'Set active journey ' + journeyId);
                var logData = {
                    key: 'ins-journey-camp-' + journeyId,
                    obj: {
                        'step1-displayed': true,
                        journeyId: journeyId,
                        campaignId: spApi.getJourneyActiveCampaignId(journeyId)
                    }
                };
                spApi.updateCookie(logData, 'nolog');
            },
            sendJourneyImpressionLog: function(journeyId) {
                if (spApi.storageData('ins-journey-camp-' + journeyId)) {
                    return;
                }
                spApi.worker.send('do-logging', {
                    type: 'journeyLog',
                    journeyId: journeyId,
                    campaignId: spApi.getJourneyActiveCampaignId(journeyId),
                    logType: 'camp-step1'
                });
            },
            getJourneyActiveCampaignId: function(journeyId) {
                var journey = spApi.getJourneyCamp(journeyId);
                var activeCampId = 0;
                sQuery.each(journey.journeyVariations, function(campaignId, type) {
                    if ((spApi.journeySegments[journeyId] && type === 'variation') || (!spApi.journeySegments[journeyId] && type === 'cg')) {
                        activeCampId = campaignId;
                    }
                });
                return activeCampId;
            },
            getAllGoals: function() {
                var allGoals = [];
                sQuery.each(spApi.allStorageData(), function(index, cookie) {
                    var cookieName = cookie.key;
                    var campaignPrefixRegex = /sp-camp-|ins-wp-/;
                    if (cookieName.match(campaignPrefixRegex)) {
                        var variationId = cookieName.replace(campaignPrefixRegex, '');
                        var builderId = spApi.getBuilderIdFromVar(variationId);
                        var personalization = spApi.personalizationCamps[builderId];
                        if (personalization && Object.keys(personalization.goalBuilderList).length > 0) {
                            allGoals.push({
                                variationId: variationId,
                                builderId: builderId,
                                goalsHolder: personalization.goalBuilderList
                            });
                        }
                    }
                })
                return allGoals;
            },
            getBuilderGoals: function(builderId) {
                return spApi.personalizationCamps[builderId].goalBuilderList;
            },
            getSingleGoalFromBuilder: function(builderId, goalId) {
                return spApi.getBuilderGoals(builderId)[goalId];
            },
            addGoalTracking: function(continuousTracking) {
                if (continuousTracking) {
                    spApi.setContinuousClickTracking();
                }
                sQuery.each(spApi.getAllGoals(), function(index, goalObject) {
                    sQuery.each(goalObject.goalsHolder, function(key, goalHolder) {
                        sQuery.each(goalHolder.goalList, function(index, goal) {
                            spApi.manageGoalTypes({
                                selectorString: goal.selectorString,
                                expectedMatching: goalHolder.result,
                                builderId: goalObject.builderId,
                                variationId: goalObject.variationId,
                                goalId: goalHolder.goalId,
                                subId: goal.id.split('-')[2],
                                goalType: goalHolder.type
                            })
                        });
                    });
                });
            },
            getGoalStorageData: function(variationId, goalId) {
                return spApi.storageData('sp-goal-' + variationId + '-' + goalId);
            },
            getDefaultGoalLogData: function() {
                return {
                    productType: 'goalBuilder',
                    userId: spApi.storageData('spUID'),
                    orderId: spApi.getOrderId() || 'n/a'
                }
            },
            sendGoalBuilderLog: function(logData) {
                var goalClass = spApi.generateGoalClass(logData);
                if (spApi.goalHasSent(goalClass)) {
                    return false;
                }
                spApi.worker.SetGoalBuilderLog(sQuery.extend(spApi.getDefaultGoalLogData(), {
                    builderId: logData.builderId,
                    varId: logData.variationId,
                    campId: logData.variationId,
                    goalId: logData.goalId,
                    subId: logData.subId,
                    type: logData.logType,
                    logType: logData.logType,
                    goalType: logData.goalType,
                    ref: spApi.simplifyURL(logData.ref) || spApi.simplifyURL(document.referrer) || 'n/a',
                    url: spApi.simplifyURL(logData.url) || spApi.simplifyURL(location.href),
                    other: spApi.executeGoalJs(spApi.getSingleGoalFromBuilder(logData.builderId, logData.goalId).goalJs)
                }));
                spApi.markGoalAsSent(goalClass);
            },
            sendGoalBuilderClickLog: function(logData) {
                var goalClass = spApi.generateGoalClass(logData);
                if (spApi.goalHasSent(goalClass)) {
                    return false;
                }
                sQuery.ajax({
                    method: 'POST',
                    url: spApi.apiUrl + 'ajax.php?t=storeGoalBuilderLog',
                    dataType: 'json',
                    async: spApi.isAjaxAsync,
                    data: sQuery.extend(spApi.getDefaultGoalLogData(), logData)
                });
                spApi.markGoalAsSent(goalClass);
                if (logData.logType !== 'engage') {
                    if (logData.logType === 'join') {
                        spApi.gaSend({
                            builderId: logData.builderId,
                            campId: logData.varId,
                            type: 'goal',
                            goalId: logData.goalId
                        });
                    }
                    spApi.updateCookie({
                        key: 'sp-goal-' + logData.varId + '-' + logData.goalId,
                        obj: {
                            'goalType': logData.logType
                        },
                        campId: logData.varId
                    }, 'nolog');
                }
            },
            sendGoalEngagementLog: function(variationId) {
                var builderId = spApi.getBuilderIdFromVar(variationId);
                sQuery.each(spApi.getBuilderGoals(builderId), function(key, goalHolder) {
                    sQuery.each(goalHolder.goalList, function(index, goal) {
                        var goalId = goalHolder.goalId;
                        if (goalHolder.type === 'engagement' && !spApi.getGoalStorageData(variationId, goalId)) {
                            sQuery(document).on('click', 'body', function() {
                                spApi.sendGoalBuilderLog({
                                    builderId: builderId,
                                    variationId: variationId,
                                    goalId: goalId,
                                    subId: goal.id.split('-')[2],
                                    type: 'join',
                                    logType: 'join',
                                    goalType: 'engagement',
                                    other: spApi.executeGoalJs(spApi.getSingleGoalFromBuilder(builderId, goalId).goalJs)
                                });
                            });
                        }
                    });
                });
            },
            simplifyURL: function(url) {
                try {
                    if (!url) {
                        return '';
                    }
                    var parser = document.createElement('a');
                    parser.href = url;
                    return parser.protocol + '//' + parser.host + parser.pathname;
                } catch (e) {
                    return '';
                }
            },
            sendGoalBuilderSuccessLog: function(logData, goalType) {
                logData.goalType = goalType;
                logData.logType = 'sales';
                logData.ref = spApi.simplifyURL(document.referrer) + "%7C-%7C" + sQuery.cookie('total-cart-amount');
                spApi.sendGoalBuilderLog(logData);
                spApi.cachedProductList = spApi.getCartProductStorage();
                spApi.localStorageRemoveItem('ins-cart-product-list');
            },
            setContinuousClickTracking: function() {
                sQuery(document).on('clickedElement', function(event, element) {
                    var classList = sQuery(element).attr('class').split(' ');
                    var goalSelectors = sQuery.grep(classList, function(value) {
                        return value.indexOf('sp-goal-') > -1;
                    });
                    sQuery.each(goalSelectors, function(index, goalSelector) {
                        var decomposedSelector = goalSelector.split('-');
                        var builderId = decomposedSelector[2];
                        var goalId = decomposedSelector[4];
                        var variationId = decomposedSelector[3];
                        spApi.sendGoalBuilderClickLog({
                            builderId: builderId,
                            varId: variationId,
                            campId: variationId,
                            goalId: goalId,
                            subId: decomposedSelector[5],
                            type: spApi.getGoalStorageData(variationId, goalId) ? 'engage' : 'join',
                            logType: spApi.getGoalStorageData(variationId, goalId) ? 'engage' : 'join',
                            goalType: 'click',
                            url: event.currentTarget.activeElement.href || 'n/a',
                            other: builderId && spApi.executeGoalJs(spApi.getSingleGoalFromBuilder(builderId, goalId).goalJs)
                        });
                    });
                });
            },
            notFoundGoalElements: {},
            groupUpNotFoundGoalElements: function(selectorString, goalClass) {
                if (spApi.notFoundGoalElements[selectorString]) {
                    spApi.notFoundGoalElements[selectorString].push(goalClass);
                } else {
                    spApi.notFoundGoalElements[selectorString] = [goalClass];
                }
                return spApi.notFoundGoalElements;
            },
            listenDOMEvents: function(goalConfig) {
                var targetElement = sQuery(goalConfig.selectorString);
                var goalClass = spApi.generateGoalClass(goalConfig);
                if (spApi.isGoalElement(targetElement, goalConfig)) {
                    targetElement.addClass(goalClass);
                } else {
                    spApi.groupUpNotFoundGoalElements(goalConfig.selectorString, goalClass);
                    if (!spApi.goalObserverStatus) {
                        var mutationCallback = function() {
                            sQuery.each(spApi.notFoundGoalElements, function(selector, classList) {
                                var targetElement = sQuery(selector);
                                if (targetElement.length > 0) {
                                    targetElement.addClass(classList.join(' '));
                                }
                            });
                        };
                        if ('MutationObserver'in window) {
                            var observer = new MutationObserver(mutationCallback);
                            observer.observe(sQuery('body')[0], {
                                childList: true,
                                subtree: true
                            });
                            observer.disconnect.bind(observer);
                        } else {
                            sQuery('body').unbind.bind('DOMSubtreeModified', mutationCallback);
                        }
                        spApi.goalObserverStatus = true;
                    }
                }
            },
            manageGoalTypes: function(goalData) {
                var goalContent = goalData.selectorString;
                var expectedMatching = goalData.expectedMatching;
                var joinLogType = 'join';
                var logData = {
                    builderId: goalData.builderId,
                    variationId: goalData.variationId,
                    goalId: goalData.goalId,
                    subId: goalData.subId,
                    type: joinLogType,
                    logType: joinLogType,
                    goalType: goalData.goalType,
                    selectorString: goalContent
                };
                switch (goalData.goalType) {
                case 'click':
                    spApi.listenDOMEvents(logData);
                    break;
                case 'pageViews':
                    var pageURL = window.location.href;
                    logData.goalType = 'pageViews';
                    if (expectedMatching === 'contains' && pageURL.indexOf(goalContent) > -1) {
                        spApi.sendGoalBuilderLog(logData);
                    } else if (expectedMatching === 'simpleMatch' && pageURL.indexOf(goalContent) === 0) {
                        spApi.sendGoalBuilderLog(logData);
                    } else if (expectedMatching === 'exactMatch' && pageURL === goalContent) {
                        spApi.sendGoalBuilderLog(logData);
                    }
                    break;
                case 'rules':
                    if (spApi.e(goalContent).toString() === expectedMatching) {
                        logData.goalType = 'rules';
                        spApi.sendGoalBuilderLog(logData);
                    }
                    break;
                case 'productSuccess':
                    if (spApi.isOnAfterPaymentPage()) {
                        sQuery.each(spApi.getCartProductStorage(), function(index, product) {
                            if ((product.id === goalContent).toString() === expectedMatching) {
                                spApi.sendGoalBuilderSuccessLog(logData, 'productSuccess');
                            }
                        });
                    }
                    break;
                case 'productCategorySuccess':
                    if (spApi.isOnAfterPaymentPage()) {
                        var categories = {};
                        sQuery.each(JSON.parse(spApi.storageData('prodCats')) || [], function(index, category) {
                            categories[category.id] = category.cat.split('|');
                        });
                        sQuery.each(spApi.getCartProductStorage(), function(index, product) {
                            if (typeof categories[product.id] !== 'undefined' && (categories[product.id].indexOf(goalContent) !== -1).toString() === expectedMatching) {
                                spApi.sendGoalBuilderSuccessLog(logData, 'productCategorySuccess');
                            }
                        });
                    }
                    break;
                }
            },
            goalHasSent: function(goalClass) {
                return spApi.goalList.indexOf(goalClass) !== -1;
            },
            markGoalAsSent: function(goalClass) {
                spApi.goalList.indexOf(goalClass) < 0 && spApi.goalList.push(goalClass);
            },
            isGoalElement: function(element, config) {
                var className = spApi.generateGoalClass(config);
                return element.length > 0 && !element.is('[class*="' + className + '"]')
            },
            generateGoalClass: function(logData) {
                return 'sp-goal-' + logData.builderId + '-' + logData.variationId + '-' + logData.goalId + '-' + logData.subId;
            },
            executeGoalJs: function(js) {
                return spApi.e(js);
            },
            checkCampBuilderTest: function() {
                if (!panelEdit) {
                    return (!spApi.hasParameter('insExitTestMode') && (spApi.hasParameter('campBuilderTest') || document.referrer.indexOf("campBuilderTest") > -1 || sQuery.cookie('variationCandidate') != null)) ? true : false;
                }
                return false;
            },
            getCampBuilderCandidates: function() {
                try {
                    var vc = sQuery.cookie("variationCandidate");
                    var segment = (vc == "undefined" || vc == null) ? {} : sQuery.parseJSON(sQuery.cookie("variationCandidate"));
                    if (spApi.checkCampBuilderTest() && spApi.hasParameter('insBuild'))
                        segment = sQuery.parseJSON('{"' + spApi.Base64.decode(spApi.getParameter('insBuild')) + '":"' + spApi.Base64.decode(spApi.getParameter('insVar')) + '"}');
                    else if (spApi.checkCampBuilderTest() && document.referrer.indexOf("insBuild") > -1)
                        segment = sQuery.parseJSON('{"' + spApi.Base64.decode(spApi.getParameterFromUrl(document.referrer, 'insBuild')) + '":"' + spApi.Base64.decode(spApi.getParameterFromUrl(document.referrer, 'insVar')) + '"}');
                    return segment;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getCampBuilderCandidates',
                        bugType: 'product'
                    });
                }
            },
            setCampBuilderTest: function() {
                if (spApi.checkCampBuilderTest()) {
                    sQuery.cookie("variationCandidate", JSON.stringify(spApi.getCampBuilderCandidates()), {
                        path: '/',
                        domain: cookieDomain
                    });
                }
                spApi.showCampBuilderTestInfo()
            },
            getObjectFirstKey: function(obj) {
                for (var i in obj)
                    return i;
                return 0;
            },
            getObjectValue: function(obj) {
                return Object.keys(obj).map(function(e) {
                    return obj[e];
                })[0];
            },
            showCampBuilderTestInfo: function() {
                if (spApi.checkCampBuilderTest() || spApi.checkCampTest()) {
                    try {
                        var inspectorInterval = setInterval(function() {
                            sQuery('#spWorker').pm(function() {
                                return sQuery.cookie('testInfo');
                            }, function(info) {
                                if (info != null) {
                                    clearInterval(inspectorInterval);
                                    info = spApi.Base64.decode(info);
                                    spApi.showTestInfoHtml(info);
                                }
                            });
                        }, 1000);
                    } catch (err) {
                        spApi.errLog(err, {
                            logType: 'showCampBuilderTestInfo',
                            bugType: 'product'
                        });
                    }
                }
            },
            checkPersonalizationTestByVariation: function(builderID, variationID) {
                var candidateCookie = sQuery.cookie('variationCandidate');
                var variationCandidate = candidateCookie === null ? {} : JSON.parse(candidateCookie);
                var testBuilder = typeof variationCandidate[builderID] !== 'undefined';
                var testVariation = testBuilder && (variationCandidate[builderID] === variationID);
                return spApi.checkCampBuilderTest() && testVariation;
            },
            showTestInfoHtml: function(info) {
                var inspectorId = 'insInspectorJs';
                if (!sQuery('#' + inspectorId).exists()) {
                    var script = document.createElement('script');
                    script.type = 'text/javascript';
                    script.async = 'async';
                    script.id = inspectorId;
                    script.src = '//api.useinsider.com/js/inspector/inspector.js?v=0.0.2';
                    document.head.appendChild(script);
                }
            },
            checkCampTest: function() {
                if (document.referrer.indexOf(".panel.") == -1) {
                    return (spApi.hasParameter('campTest') || document.referrer.indexOf("campTest") > -1 || sQuery.cookie('campCandidate') != null) ? true : false;
                }
                return false;
            },
            getCampCandidate: function() {
                try {
                    var camp = sQuery.cookie("campCandidate");
                    if (spApi.checkCampTest() && spApi.hasParameter('camp'))
                        camp = spApi.Base64.decode(spApi.getParameter('camp'));
                    else if (spApi.checkCampTest() && document.referrer.indexOf("camp") > -1)
                        camp = spApi.Base64.decode(spApi.getParameterFromUrl(document.referrer, 'camp'));
                    return camp;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getCampCandidate',
                        bugType: 'product'
                    });
                }
            },
            setCampTest: function() {
                if (spApi.checkCampTest()) {
                    sQuery.cookie("campCandidate", spApi.getCampCandidate(), {
                        path: '/',
                        domain: cookieDomain
                    });
                    spApi.showCampBuilderTestInfo();
                }
            },
            triggerInspectorObserver: function(campId) {
                if (spApi.showedCampaignList instanceof Array === false) {
                    spApi.showedCampaignList = [];
                }
                if (spApi.showedCampaignList.indexOf(spApi.Base64.encode(campId)) === -1) {
                    spApi.showedCampaignList.push(spApi.Base64.encode(campId));
                }
                sQuery(document).trigger('inspectorCampaignShowed.insider');
            },
            triggerInspectorLogs: function(data) {
                if (spApi.showedCampaignLogs instanceof Array === false) {
                    spApi.showedCampaignLogs = [];
                }
                var encodedLogData = spApi.Base64.encode(data);
                if (spApi.showedCampaignLogs.indexOf(encodedLogData) === -1) {
                    spApi.showedCampaignLogs.push(encodedLogData);
                }
                sQuery(document).trigger('inspectorCampaignLog.insider');
            },
            eventManager: function(elementTarget) {
                var trigger = function(eventStackId, event) {
                    event.stopImmediatePropagation();
                    spApi.eventStack[eventStackId].callback();
                };
                return {
                    on: function(eventType, delegatedElement, callback, multipleListenerOption) {
                        if (!elementTarget) {
                            spApi.logger('Specify element to set event on');
                            return false;
                        }
                        var bubbleOption = false;
                        if (arguments.length === 3) {
                            bubbleOption = true;
                            if (typeof delegatedElement === 'function') {
                                multipleListenerOption = callback;
                                callback = delegatedElement;
                            }
                        } else if (arguments.length === 2) {
                            callback = delegatedElement;
                            delegatedElement = '';
                        }
                        if (typeof callback !== 'function') {
                            spApi.logger('Callback must be a function.');
                            return false;
                        }
                        var eventStackId = spApi.hashCode(callback.toString());
                        spApi.eventStack[eventStackId] = {
                            id: eventStackId,
                            type: eventType,
                            element: delegatedElement,
                            captureElement: elementTarget,
                            callback: callback,
                            listenerOption: multipleListenerOption
                        };
                        var setListenerOnAll = function() {
                            sQuery(elementTarget).on(eventType, delegatedElement, function(event) {
                                trigger(eventStackId, event);
                            });
                            sQuery(delegatedElement).on(eventType, function(event) {
                                trigger(eventStackId, event);
                            });
                        };
                        var setListenerOnHead = function() {
                            sQuery(elementTarget).on(eventType, delegatedElement, function(event) {
                                trigger(eventStackId, event);
                            });
                        };
                        var setListenerOnCurrentElement = function() {
                            sQuery(elementTarget).on(eventType, function(event) {
                                trigger(eventStackId, event);
                            });
                        };
                        if (multipleListenerOption) {
                            setListenerOnAll();
                        } else if (bubbleOption) {
                            setListenerOnHead();
                        } else {
                            setListenerOnCurrentElement();
                        }
                    },
                    triggerEvent: function(type, delegatedElement, manualEventCallback) {
                        for (var stackId in spApi.eventStack) {
                            if (spApi.eventStack.hasOwnProperty(stackId)) {
                                var currentEvent = spApi.eventStack[stackId];
                                var specifiedElement = delegatedElement || '';
                                if (currentEvent.type === type && currentEvent.captureElement === elementTarget && currentEvent.element === specifiedElement) {
                                    currentEvent.callback();
                                    (manualEventCallback || function() {}
                                    ).call();
                                }
                            }
                        }
                    },
                    refresh: function() {
                        for (var stackId in spApi.eventStack) {
                            if (spApi.eventStack.hasOwnProperty(stackId)) {
                                var currentEvent = spApi.eventStack[stackId];
                                spApi.eventManager(currentEvent.captureElement).on(currentEvent.type, currentEvent.element, currentEvent.callback, currentEvent.listenerOption);
                            }
                        }
                        spApi.logger('All Events has been refreshed');
                    }
                }
            },
            activeInsights: [],
            insightLogs: [],
            getFractionKey: function(insightId) {
                try {
                    var date = new Date().toJSON().slice(0, 10);
                    var fraction = '';
                    var refractionList = Array();
                    if (spApi.insights[insightId]) {
                        refractionList = spApi.insights[insightId].refractionList;
                    }
                    sQuery.each(refractionList, function(key, fractionType) {
                        if (fractionType == "country") {
                            var userLocation = JSON.parse(spApi.storageData('userLocation'));
                            var subFraction = 'other';
                            if (typeof userLocation['cName'] !== 'undefined' && userLocation['cName'] != null) {
                                subFraction = userLocation['cName'];
                            }
                            fraction = fraction + subFraction;
                        }
                    });
                    return date + "_" + insightId + "_" + fraction;
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getFractionKey',
                        bugType: 'product',
                        extraData: {
                            param: insightId,
                            param2: refractionList
                        }
                    });
                }
            },
            getInsightOfThePage: function() {
                try {
                    if (spApi.deviceDetect('PC')) {
                        platform = "web";
                    } else if (spApi.deviceDetect('Mobil')) {
                        platform = "mobile";
                    } else if (spApi.deviceDetect('Tablet')) {
                        platform = "tablet";
                    }
                    sQuery.each(spApi.insights, function(key, insight) {
                        if (typeof spApi.rules[insight.showIn.trigger[0]] != "undefined") {
                            if (insight.startDate < spApi.getTime() && insight.endDate > spApi.getTime() && spApi.e(spApi.rules[insight.showIn.trigger[0]].test) && insight.platform === platform) {
                                spApi.activeInsights.push(insight);
                            }
                        }
                    });
                    if (spApi.activeInsights) {
                        spApi.setInsights();
                        window.addEventListener('beforeunload', spApi.makeInsightLogRequest);
                    }
                    spApi.logger('info', 'Insightlar init edildi...');
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getInsightOfThePage',
                        bugType: 'product'
                    });
                }
            },
            isScrolledIntoView: function(availableUnitsSelector) {
                try {
                    spApi.logger('info', 'Insight isScrolledIntoView set ediliyor...');
                    function isInView(elementSelector) {
                        var $element = sQuery(elementSelector);
                        var $window = sQuery(window);
                        var docViewTop = $window.scrollTop();
                        var docViewBottom = docViewTop + $window.height();
                        var elemTop = $element.offset().top;
                        var elemBottom = elemTop + $element.height();
                        return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));
                    }
                    function checkElement(availableUnitsSelector) {
                        sQuery.each(availableUnitsSelector, function(id, unit) {
                            if (isInView(unit.selector)) {
                                delete availableUnitsSelector[id];
                                var targetObj = sQuery(unit.selector).first();
                                var customTag = spApi.getCustomTag(targetObj);
                                var eventName = spApi.getEventName(unit.eventNameSelector, targetObj);
                                spApi.sendInsightLog(unit.insightId, unit.unitId, "viewable-impression", customTag, eventName);
                            }
                        });
                    }
                    checkElement(availableUnitsSelector);
                    sQuery(window).scroll(function() {
                        checkElement(availableUnitsSelector);
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'isScrolledIntoView',
                        bugType: 'product',
                        extraData: {
                            selector: availableUnitsSelector
                        }
                    });
                }
            },
            isInsightExists: function(insight, unit) {
                try {
                    spApi.logger('info', 'Is unit exists (id: ' + unit.id + ' - selector: ' + unit.selector + ') kontrol ediliyor ediliyor...');
                    var availableUnitsSelector = {};
                    var turn = 0;
                    var intervalId = setInterval(function() {
                        if (sQuery(unit.selector).length > 0 || turn >= 10) {
                            clearInterval(intervalId);
                            var insightExist = false;
                            if (sQuery(unit.selector).exists()) {
                                insightExist = true;
                                var insightClass = "insdr-insight-" + insight.id + '-' + unit.id;
                                sQuery(unit.selector).first().addClass(insightClass);
                                var targetObj = sQuery(unit.selector).first();
                                var customTag = spApi.getCustomTag(targetObj);
                                var eventName = spApi.getEventName(unit.eventNameSelector, targetObj);
                                spApi.sendInsightLog(insight.id, unit.id, "impression", customTag, eventName);
                                availableUnitsSelector[insight.id + '_' + unit.id] = {
                                    selector: '.' + insightClass,
                                    insightId: insight.id,
                                    unitId: unit.id,
                                    eventNameSelector: unit.eventNameSelector
                                };
                            }
                            spApi.isScrolledIntoView(availableUnitsSelector);
                            if (insightExist) {
                                spApi.insightClickCollector();
                            }
                        }
                        turn++;
                    }, 500);
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'isInsightExists',
                        bugType: 'product',
                        extraData: {
                            insight: insight,
                            unit: unit
                        }
                    });
                }
            },
            setInsights: function() {
                try {
                    spApi.logger('info', 'Insightlar set ediliyor...');
                    sQuery.each(spApi.activeInsights, function(key, insight) {
                        sQuery.each(insight.objList, function(objId, unit) {
                            spApi.isInsightExists(insight, unit);
                        });
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setInsights',
                        bugType: 'product',
                        extraData: {
                            param: spApi.activeInsights
                        }
                    });
                }
            },
            sendInsightLog: function(insightId, unitId, logType, customTag, eventName) {
                try {
                    spApi.logger('info', 'Insight ' + logType + ' logu ' + insightId + '-' + unitId + ' için tetiklendi...');
                    var shortLogType = spApi.convertLogType(logType);
                    var cookieName = 'ins-insight-' + insightId;
                    var historyJSON = JSON.parse(spApi.storageData(cookieName));
                    var sendLog = false;
                    var cookieContent = {};
                    var subContent = {};
                    if (historyJSON == null) {
                        sendLog = true;
                    } else {
                        if (historyJSON["sId"] != spApi.getGAStyleSesId()) {
                            var logData = {
                                key: cookieName,
                                obj: sQuery.toJSON(null)
                            };
                            spApi.updateCookie(logData, 'nolog');
                            sendLog = true;
                        } else {
                            if (typeof historyJSON["units"][unitId] !== 'undefined') {
                                if (!historyJSON["units"][unitId][shortLogType]) {
                                    sendLog = true;
                                }
                            } else {
                                sendLog = true;
                            }
                        }
                    }
                    cookieContent['sId'] = spApi.getGAStyleSesId();
                    subContent[shortLogType] = 1;
                    subContent["eventName"] = eventName;
                    cookieContent["units"] = {};
                    cookieContent["units"][unitId] = subContent;
                    var logObj = {
                        key: cookieName,
                        obj: cookieContent,
                        campId: insightId
                    };
                    spApi.updateCookie(logObj, 'nolog');
                    if (sendLog) {
                        if (logType == 'click') {
                            spApi.logger('info', 'Insight ' + logType + ' logu ' + insightId + '-' + unitId + ' için atılıyor...');
                            spApi.worker.send('do-logging', {
                                type: 'insightLog',
                                insightLogs: [{
                                    campId: insightId,
                                    referer: window.location.href,
                                    otherProperties: {
                                        'unitId': unitId,
                                        'logType': logType,
                                        'customTag': customTag,
                                        'eventName': eventName,
                                        'fraction': spApi.getFractionKey(insightId),
                                        'sessionId': cookieContent['sId']
                                    }
                                }]
                            });
                        } else {
                            spApi.logger('info', 'Insight ' + logType + ' logu ' + insightId + '-' + unitId + ' için kayıt ediliyor...');
                            var getSpUID = setInterval(function(data) {
                                if (spApi.worker.ready) {
                                    pm({
                                        target: sQuery('#spWorker')[0].contentWindow,
                                        type: 'getSPUData',
                                        success: function(spUData) {
                                            clearInterval(getSpUID);
                                            var logData = {
                                                campId: insightId,
                                                referer: window.location.href,
                                                userID: spUData.spUID,
                                                otherProperties: {
                                                    'unitId': unitId,
                                                    'logType': logType,
                                                    'customTag': customTag,
                                                    'eventName': eventName,
                                                    'fraction': spApi.getFractionKey(insightId),
                                                    'sessionId': cookieContent['sId']
                                                }
                                            };
                                            spApi.insightLogs.push(logData);
                                            if (!spApi.insightLogsInterval) {
                                                spApi.insightLogsInterval = setInterval(spApi.makeInsightLogRequest, 3000);
                                            }
                                        }
                                    });
                                }
                            }, "1000");
                        }
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'sendInsightLog',
                        bugType: 'product',
                        extraData: {
                            param1: insightId,
                            param2: unitId,
                            param3: logType,
                            param4: customTag
                        }
                    });
                }
            },
            makeInsightLogRequest: function() {
                if (spApi.insightLogs.length > 0) {
                    spApi.insightLogs.forEach(function(log) {
                        log.isSent = 1;
                    });
                    sQuery.ajax({
                        url: spApi.apiUrl + 'ajax.php?t=storeLog',
                        type: 'POST',
                        dataType: 'json',
                        data: {
                            type: 'insightLog',
                            insightLogs: spApi.insightLogs
                        },
                        success: function(data) {
                            spApi.insightLogs = spApi.insightLogs.filter(function(log) {
                                return !log.hasOwnProperty('isSent');
                            });
                            if (spApi.insightLogs.length < 1) {
                                clearInterval(spApi.insightLogsInterval);
                                spApi.insightLogsInterval = null;
                            }
                            spApi.logger('info', 'Kaydedilen Insight logları atıldı...');
                        }
                    });
                }
            },
            insightClickCollector: function() {
                try {
                    sQuery(document).on('clickedElement', function(event, element) {
                        var classArray = sQuery(element).attr("class").split(" ");
                        var insightClassList = sQuery.grep(classArray, function(value) {
                            return value.indexOf('insdr-insight-') > -1;
                        });
                        sQuery.each(insightClassList, function(i, className) {
                            classSplit = className.split('-');
                            if (typeof classSplit[2] != "undefined" && typeof classSplit[3] != "undefined") {
                                var insightId = parseInt(classSplit[2]);
                                var unitId = parseInt(classSplit[3]);
                                if (insightId > 0 && unitId > 0) {
                                    var targetObj = sQuery('.' + className).first();
                                    var customTag = spApi.getCustomTag(targetObj);
                                    var eventNameSelector, eventName;
                                    sQuery.each(spApi.insights[insightId].objList, function(key, unit) {
                                        if (unit.id == unitId) {
                                            eventNameSelector = unit.eventNameSelector;
                                            eventName = spApi.getEventName(unit.eventNameSelector, targetObj);
                                        }
                                    });
                                    spApi.sendInsightLog(insightId, unitId, "click", customTag, eventName);
                                }
                            }
                        });
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'insightClickCollector',
                        bugType: 'product'
                    });
                }
            },
            getCustomTag: function(targetObj) {
                var customTag = {
                    'src': 'undefined',
                    'href': 'undefined'
                };
                try {
                    if (sQuery(targetObj)[0].tagName == "A") {
                        customTag['href'] = sQuery(targetObj).attr('href');
                        if (sQuery(targetObj).find("img").exists()) {
                            customTag['src'] = sQuery(targetObj).find("img").attr('src');
                        }
                    } else if (sQuery(targetObj)[0].tagName == "IMG") {
                        customTag['src'] = sQuery(targetObj).attr("src");
                        if (sQuery(targetObj).closest('a').exists()) {
                            customTag['href'] = sQuery(targetObj).closest('a').attr('href');
                        }
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getCustomTag',
                        bugType: 'product',
                        extraData: {
                            param: targetObj
                        }
                    });
                }
                return customTag;
            },
            checkEventName: function(eventName) {
                if (typeof eventName === 'undefined') {
                    eventName = '';
                } else if (typeof eventName === 'object') {
                    eventName = JSON.stringify(eventName);
                }
                if (typeof eventName !== 'string') {
                    eventName = '';
                }
                return eventName;
            },
            getEventName: function(eventSelector, targetObj) {
                try {
                    var eventName = spApi.e.apply(targetObj, [eventSelector]);
                    if (spApi.checkEventName(eventName) == '') {
                        eventSelector = eventSelector.replace('src', 'data-src');
                        eventName = spApi.e.apply(targetObj, [eventSelector]);
                    }
                    eventName = spApi.checkEventName(eventName);
                    return eventName;
                } catch (err) {
                    return '';
                    spApi.errLog(err, {
                        logType: 'getEventName',
                        bugType: 'product',
                        extraData: {
                            param: eventSelector
                        }
                    });
                }
            },
            setInsightSalesLog: function(orderID) {
                try {
                    spApi.logger('info', 'setInsightSalesLog ile insight satış logları atılıyor... ');
                    var salesList = {};
                    var impSalesList = {};
                    var vImpSalesList = {};
                    var fractionList = {};
                    var pairs = spApi.allStorageData();
                    sQuery.each(pairs, function(i, obj) {
                        var key = sQuery.trim(obj.key);
                        if (key.indexOf("ins-insight-") != -1) {
                            var insightCookie = JSON.parse(spApi.storageData(key));
                            if (typeof insightCookie !== 'undefined' && insightCookie != null) {
                                if (typeof insightCookie.sId !== 'undefined' && insightCookie.sId == spApi.getGAStyleSesId()) {
                                    var insightId = key.split("-")[2];
                                    sQuery.each(insightCookie.units, function(unitId, unitStatus) {
                                        if (typeof unitStatus["c"] !== 'undefined') {
                                            if (!salesList[insightId]) {
                                                salesList[insightId] = {};
                                            }
                                            salesList[insightId][unitId] = unitStatus["eventName"];
                                            if (spApi.insights[insightId]) {
                                                fractionList[insightId] = spApi.getFractionKey(insightId)
                                            }
                                        }
                                        if (typeof unitStatus["i"] !== 'undefined') {
                                            if (!impSalesList[insightId]) {
                                                impSalesList[insightId] = {};
                                            }
                                            impSalesList[insightId][unitId] = unitStatus["eventName"];
                                        }
                                        if (typeof unitStatus["vi"] !== 'undefined') {
                                            if (!vImpSalesList[insightId]) {
                                                vImpSalesList[insightId] = {};
                                            }
                                            vImpSalesList[insightId][unitId] = unitStatus["eventName"];
                                        }
                                    });
                                }
                            }
                        }
                    });
                    var getSpUID = setInterval(function(data) {
                        if (spApi.worker.ready) {
                            pm({
                                target: sQuery('#spWorker')[0].contentWindow,
                                type: 'getSPUData',
                                success: function(spUData) {
                                    clearInterval(getSpUID);
                                    var logData = {
                                        referer: window.location.href,
                                        userID: spUData.spUID,
                                        otherProperties: {
                                            sessionId: spApi.getGAStyleSesId(),
                                            salesCampList: salesList,
                                            impSalesList: impSalesList,
                                            vImpSalesList: vImpSalesList,
                                            logType: 'sales',
                                            fraction: fractionList,
                                            orderId: orderID,
                                            paidProducts: (spApi.storageData('paid-products') != null) ? spApi.storageData('paid-products') : '',
                                            originalPrice: spApi.getExchangeRate(spApi.preferredCurrency, sQuery.cookie('current-currency'), sQuery.cookie('total-cart-amount'), 'price'),
                                            originalCurrency: (sQuery.cookie('current-currency') != null) ? sQuery.cookie('current-currency') : '',
                                            convertedCurrency: spApi.preferredCurrency,
                                            convertedPrice: (sQuery.cookie('total-cart-amount') != null) ? sQuery.cookie('total-cart-amount') : ''
                                        }
                                    }
                                    spApi.insightLogs.push(logData);
                                    spApi.makeInsightLogRequest();
                                }
                            });
                        }
                    }, "1000");
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setInsightSalesLog',
                        bugType: 'product',
                        extraData: {
                            orderID: orderID
                        }
                    });
                }
            },
            convertLogType: function(type) {
                switch (type) {
                case 'impression':
                    type = 'i';
                    break;
                case 'click':
                    type = 'c';
                    break;
                case 'viewable-impression':
                    type = 'vi';
                    break;
                }
                return type;
            },
            updateVisitedProducts: function(products) {
                var storageProducts = spApi.getAllVisitedProducts();
                storageProducts[spApi.getLang() || 'default'] = products;
                spApi.storageData('insiderVersusData', JSON.stringify(sQuery.extend({}, storageProducts), {
                    expires: 100
                }));
            },
            getVisitedProducts: function() {
                var products = JSON.parse(spApi.storageData('insiderVersusData')) || [];
                return products[spApi.getLang() || 'default'] || [];
            },
            getAllVisitedProducts: function() {
                return JSON.parse(spApi.storageData('insiderVersusData')) || [];
            },
            appendProductToVisitedList: function(product) {
                var products = spApi.deleteProductFromVisitedList(product.id);
                products.push(product);
                if (products.length > 12) {
                    products.shift();
                }
                spApi.updateVisitedProducts(products);
            },
            deleteProductFromVisitedList: function(productId) {
                var products = spApi.getVisitedProducts();
                products = sQuery.grep(products, function(product) {
                    return product.id != productId;
                });
                spApi.updateVisitedProducts(products);
                return products;
            },
            populateVersusWeb: function() {
                var product = spApi.getCurrentProduct();
                if (typeof product.id !== 'undefined' && product.id != '' && typeof product.img !== 'undefined' && product.img != '') {
                    spApi.appendProductToVisitedList(product);
                }
            },
            setCustomSegments: function(customSegments) {
                try {
                    sQuery.each(customSegments, function(key, customSegment) {
                        if (spApi.storageData('cus' + customSegment.id) == null) {
                            if (customSegment.isActive == '1') {
                                var trigger = true;
                                var segment = true;
                                if (spApi.rules[customSegment.showIn.trigger] != undefined && typeof spApi.rules[customSegment.showIn.trigger[0]] != "undefined") {
                                    trigger = spApi.e(spApi.rules[customSegment.showIn.trigger[0]].test);
                                }
                                if (spApi.rules[customSegment.showIn.segment] != undefined && typeof spApi.rules[customSegment.showIn.segment[0]] != "undefined") {
                                    segment = spApi.e(spApi.rules[customSegment.showIn.segment[0]].test);
                                }
                                if (trigger && segment) {
                                    var expDate = new Date(customSegment.activeDateEnd * 1000);
                                    var cookieSettings = {
                                        expires: expDate,
                                        path: '/',
                                        domain: cookieDomain
                                    };
                                    spApi.storageData('cus' + customSegment.id, 1, cookieSettings);
                                    spApi.sendCustomSegmentLog(customSegment.id);
                                }
                            }
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setCustomSegments',
                        bugType: 'product',
                        extraData: {
                            param: 'customSegments'
                        }
                    });
                }
            },
            sendCustomSegmentLog: function(customSegmentId) {
                try {
                    spApi.worker.send('do-logging', {
                        type: 'customSegmentLog',
                        referer: window.location.href,
                        otherProperties: {
                            customSegmentId: customSegmentId
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setCustomSegmentLog',
                        bugType: 'product',
                        extraData: {
                            param: customSegmentId
                        }
                    });
                }
            },
            setESData: function(pagetype) {
                if (document.referrer.indexOf(document.location.host) < 0) {
                    spApi.sessionStorageSet('ins-session-source', document.referrer);
                }
                Object.keys || (Object.keys = function() {
                    "use strict";
                    var t = Object.prototype.hasOwnProperty
                      , r = !{
                        toString: null
                    }.propertyIsEnumerable("toString")
                      , e = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]
                      , o = e.length;
                    return function(n) {
                        if ("object" != typeof n && ("function" != typeof n || null === n))
                            throw new TypeError("Object.keys called on non-object");
                        var c, l, p = [];
                        for (c in n)
                            t.call(n, c) && p.push(c);
                        if (r)
                            for (l = 0; o > l; l++)
                                t.call(n, e[l]) && p.push(e[l]);
                        return p
                    }
                }());
                setPreviousCategory();
                var type = "other";
                var stat;
                spApi.worker.ping(function() {
                    sendHitApiRequests(undefined, function(requestResult) {
                        collectClientData(requestResult);
                    });
                });
                function collectClientData(hitApiRequestsSent) {
                    try {
                        if (spApi.worker.ready) {
                            pm({
                                target: sQuery('#spWorker')[0].contentWindow,
                                type: 'getSPUData',
                                data: {
                                    firstTime: true,
                                    domain: 'partner',
                                    globalUserIdIsDisabled: spApi.globalUserIdIsDisabled
                                },
                                success: function(spUData) {
                                    var UID = spUData.spUID;
                                    var expires = spApi.getPrototype('uidExpireDate');
                                    if (spUData.spUIDCreated == 'true') {
                                        sQuery.cookie("spUID", null, {
                                            expires: -1,
                                            path: '/'
                                        });
                                        localStorage.removeItem("spUID");
                                    }
                                    if (!spApi.globalUserIdIsDisabled) {
                                        setGlobalUserIdToStorage(spUData.globalId, expires);
                                    }
                                    if (sQuery.cookie("spUID") != null) {
                                        UID = sQuery.cookie("spUID");
                                        localStorage.setItem("spUID", UID);
                                    } else if (localStorage.getItem("spUID") != null) {
                                        UID = localStorage.getItem("spUID");
                                        sQuery.cookie("spUID", UID, {
                                            expires: expires,
                                            path: '/'
                                        });
                                    } else {
                                        sQuery.cookie("spUID", UID, {
                                            expires: expires,
                                            path: '/'
                                        });
                                        localStorage.setItem("spUID", UID);
                                    }
                                    pm({
                                        target: sQuery('#spWorker')[0].contentWindow,
                                        type: "set-spUID",
                                        data: {
                                            value: UID
                                        }
                                    });
                                    if (!spUData.spUID) {
                                        spUData.spUID = UID;
                                    }
                                    if (spApi.isUserLoggedIn()) {
                                        spUData.spPersonalData = sQuery.cookie("insUserData");
                                        spUData.member = true;
                                    }
                                    if (typeof spApiUserData != "undefined") {
                                        if (JSON.stringify(spApiUserData) != spApi.localStorageGet("spApiUserData")) {
                                            spApi.localStorageSet("spApiUserData", JSON.stringify(spApiUserData));
                                            spUData.spApiUserData = spApiUserData;
                                        }
                                    }
                                    if (hitApiRequestsSent === false) {
                                        sendHitApiRequests(spUData);
                                    }
                                }
                            });
                        }
                    } catch (err) {
                        spApi.errLog(err);
                    }
                }
                function getSpUIDFromLocalStorage() {
                    if (sQuery.cookie("spUID") != null) {
                        return sQuery.cookie("spUID");
                    } else if (localStorage.getItem("spUID") != null) {
                        return localStorage.getItem("spUID");
                    }
                    return null;
                }
                function setGlobalUserIdToStorage(globalId, expires) {
                    var encodedGlobalId = spApi.Base64.encode(globalId);
                    spApi.storageData('insGUID', encodedGlobalId);
                }
                function sendHitApiRequests(spUData, callback) {
                    if (typeof spUData === 'undefined') {
                        spUData = {
                            updateSpUIDPartnerDomain: spApi.storageData('updateSpUIDPartnerDomain'),
                            spUserIDCreated: 'false',
                            updateSpUID: 'false'
                        };
                        var spUID = getSpUIDFromLocalStorage();
                        var globalId = spApi.getGlobalUserIdFromLocalStorage();
                        var terminationCondition = spApi.globalUserIdIsDisabled ? spUID === null : spUID === null || globalId === null;
                        if (terminationCondition) {
                            if (typeof callback !== 'undefined') {
                                callback(false);
                            }
                            return false;
                        }
                        if (spApi.isUserLoggedIn()) {
                            spUData.spPersonalData = sQuery.cookie("insUserData");
                            spUData.member = true;
                        }
                        spUData.spUID = spUID;
                        spUData.globalId = globalId;
                    }
                    if (spApi.isOnAfterPaymentPage() || pagetype == "success" || spApi.isOnCartPage()) {
                        type = spApi.isOnCartPage() == true ? "cart" : "success";
                        stat = new cartStat(type,spUData);
                        sQuery.ajax({
                            url: '//kkbv2.api.sociaplus.com',
                            data: {
                                s: stat,
                                partnerName: "ikea",
                                t: "setKksData",
                                dataType: type
                            },
                            type: "post",
                            dataType: "jsonp",
                            async: true,
                            success: function() {}
                        });
                    } else if (spApi.isOnCategoryPage()) {
                        setCategoryData(spApi.getCategories());
                        type = "category";
                        stat = new othersStat(type,spUData);
                    } else if (spApi.isOnProductPage()) {
                        setCategoryData(spApi.getProductCategories());
                        type = "productDetail";
                        stat = new productDetailStat(type,spUData);
                    } else if (spApi.isOnRegSuccessPage()) {
                        type = "register";
                        stat = new registerSuccessStat(type,spUData);
                        spApi.sessionStorageRemoveItem("isRegSuccess");
                    } else if (spApi.isOnMainPage()) {
                        type = "main";
                        stat = new mainPage(type,spUData);
                    } else {
                        stat = new othersStat(type,spUData);
                    }
                    try {
                        (function() {
                            !function(e, t) {
                                return e.insiderTimeMe = t()
                            }(this, function() {
                                var e = {
                                    startStopTimes: {},
                                    idleTimeoutMs: 3e4,
                                    currentIdleTimeMs: 0,
                                    checkStateRateMs: 250,
                                    active: !1,
                                    idle: !1,
                                    currentPageName: "default-page-name",
                                    timeElapsedCallbacks: [],
                                    userLeftCallbacks: [],
                                    userReturnCallbacks: [],
                                    startTimer: function(t) {
                                        if (t || (t = e.currentPageName),
                                        void 0 === e.startStopTimes[t])
                                            e.startStopTimes[t] = [];
                                        else {
                                            var i = e.startStopTimes[t]
                                              , n = i[i.length - 1];
                                            if (void 0 !== n && void 0 === n.stopTime)
                                                return
                                        }
                                        e.startStopTimes[t].push({
                                            startTime: new Date,
                                            stopTime: void 0
                                        }),
                                        e.active = !0
                                    },
                                    stopAllTimers: function() {
                                        for (var t = Object.keys(e.startStopTimes), i = 0; i < t.length; i++)
                                            e.stopTimer(t[i])
                                    },
                                    stopTimer: function(t) {
                                        t || (t = e.currentPageName);
                                        var i = e.startStopTimes[t];
                                        void 0 !== i && 0 !== i.length && (void 0 === i[i.length - 1].stopTime && (i[i.length - 1].stopTime = new Date),
                                        e.active = !1)
                                    },
                                    getTimeOnCurrentPageInSeconds: function() {
                                        return e.getTimeOnPageInSeconds(e.currentPageName)
                                    },
                                    getTimeOnPageInSeconds: function(t) {
                                        var i = e.getTimeOnPageInMilliseconds(t);
                                        return void 0 === i ? void 0 : e.getTimeOnPageInMilliseconds(t) / 1e3
                                    },
                                    getTimeOnPageInMilliseconds: function(t) {
                                        var i = 0
                                          , n = e.startStopTimes[t];
                                        if (void 0 !== n) {
                                            for (var a = 0, r = 0; r < n.length; r++) {
                                                var s = n[r].startTime
                                                  , o = n[r].stopTime;
                                                void 0 === o && (o = new Date);
                                                var d = o - s;
                                                a += d
                                            }
                                            return i = Number(a)
                                        }
                                    },
                                    setIdleDurationInSeconds: function(t) {
                                        var i = parseFloat(t);
                                        if (isNaN(i) !== !1)
                                            throw {
                                                name: "InvalidDurationException",
                                                message: "An invalid duration time (" + t + ") was provided."
                                            };
                                        return e.idleTimeoutMs = 1e3 * t,
                                        this
                                    },
                                    setCurrentPageName: function(t) {
                                        return e.currentPageName = t,
                                        this
                                    },
                                    resetIdleCountdown: function() {
                                        e.idle && e.triggerUserHasReturned(),
                                        e.idle = !1,
                                        e.currentIdleTimeMs = 0
                                    },
                                    triggerUserHasReturned: function() {
                                        if (!e.active)
                                            for (var t = 0; t < this.userReturnCallbacks.length; t++) {
                                                var i = this.userReturnCallbacks[t]
                                                  , n = i.numberOfTimesToInvoke;
                                                (isNaN(n) || void 0 === n || n > 0) && (i.numberOfTimesToInvoke -= 1,
                                                i.callback())
                                            }
                                        e.startTimer()
                                    },
                                    triggerUserHasLeftPage: function() {
                                        if (e.active)
                                            for (var t = 0; t < this.userLeftCallbacks.length; t++) {
                                                var i = this.userLeftCallbacks[t]
                                                  , n = i.numberOfTimesToInvoke;
                                                (isNaN(n) || void 0 === n || n > 0) && (i.numberOfTimesToInvoke -= 1,
                                                i.callback())
                                            }
                                        e.stopAllTimers()
                                    },
                                    checkState: function() {
                                        for (var t = 0; t < e.timeElapsedCallbacks.length; t++)
                                            e.timeElapsedCallbacks[t].pending && e.getTimeOnCurrentPageInSeconds() > e.timeElapsedCallbacks[t].timeInSeconds && (e.timeElapsedCallbacks[t].callback(),
                                            e.timeElapsedCallbacks[t].pending = !1);
                                        e.idle === !1 && e.currentIdleTimeMs > e.idleTimeoutMs ? (e.idle = !0,
                                        e.triggerUserHasLeftPage()) : e.currentIdleTimeMs += e.checkStateRateMs
                                    },
                                    visibilityChangeEventName: void 0,
                                    hiddenPropName: void 0,
                                    listenForVisibilityEvents: function() {
                                        "undefined" != typeof document.hidden ? (e.hiddenPropName = "hidden",
                                        e.visibilityChangeEventName = "visibilitychange") : "undefined" != typeof document.mozHidden ? (e.hiddenPropName = "mozHidden",
                                        e.visibilityChangeEventName = "mozvisibilitychange") : "undefined" != typeof document.msHidden ? (e.hiddenPropName = "msHidden",
                                        e.visibilityChangeEventName = "msvisibilitychange") : "undefined" != typeof document.webkitHidden && (e.hiddenPropName = "webkitHidden",
                                        e.visibilityChangeEventName = "webkitvisibilitychange"),
                                        document.addEventListener(e.visibilityChangeEventName, function() {
                                            document[e.hiddenPropName] ? e.triggerUserHasLeftPage() : e.triggerUserHasReturned()
                                        }, !1),
                                        window.addEventListener("blur", function() {
                                            e.triggerUserHasLeftPage()
                                        }),
                                        window.addEventListener("focus", function() {
                                            e.triggerUserHasReturned()
                                        }),
                                        document.addEventListener("mousemove", function() {
                                            e.resetIdleCountdown()
                                        }),
                                        document.addEventListener("keyup", function() {
                                            e.resetIdleCountdown()
                                        }),
                                        document.addEventListener("touchstart", function() {
                                            e.resetIdleCountdown()
                                        }),
                                        window.addEventListener("scroll", function() {
                                            e.resetIdleCountdown()
                                        }),
                                        setInterval(function() {
                                            e.checkState()
                                        }, e.checkStateRateMs)
                                    },
                                    initialize: function(t) {
                                        var i = e.idleTimeoutMs || 30
                                          , n = e.currentPageName || "default-page-name";
                                        t && (i = t.idleTimeoutInSeconds || i,
                                        n = t.currentPageName || n),
                                        e.setIdleDurationInSeconds(i).setCurrentPageName(n).listenForVisibilityEvents(),
                                        e.startTimer()
                                    }
                                };
                                return e
                            })
                        }
                        ).call(this);
                        (function(self) {
                            var hitApiUrl = 'https://hit.api.useinsider.com/hit';
                            var listenerApiUrl = '';
                            var unificationApiUrl = 'https://unification.api.useinsider.com/unify';
                            var recommendationApiUrl = 'mail-recommendation.api';
                            var hitEvent = {};
                            self.construct = function() {
                                insiderTimeMe.initialize({
                                    currentPageName: spApi.genDate,
                                    idleTimeoutInSeconds: 300
                                });
                                hitEvent.version = '1.0';
                                spUIDExpireDay = 365;
                                hitEvent.partner_name = self.getPartnerName();
                                hitEvent.user_id = self.getUserId();
                                if (!spApi.globalUserIdIsDisabled) {
                                    hitEvent.global_id = self.getGlobalId();
                                }
                                self.sessionId = spApi.getGAStyleSesId();
                                self.initSession = spApi.sessionInit === true;
                                self.method = 'post';
                                spApi.sendUserIdLog('unifyUserFromReferrer-pre');
                                self.unifyUserFromReferrer();
                                spApi.sendUserIdLog('unifyUserFromReferrer-post');
                                spApi.sendUserIdLog('unifyUser-pre');
                                self.unifyUser(function() {
                                    self.sendRequest('pageView');
                                    self.sendRequest('user');
                                    self.sendTimeOnSiteRequest();
                                    spApi.sendUserIdLog('unifyUser-post');
                                });
                            }
                            ;
                            self.unifyUserFromReferrer = function() {
                                if (document.referrer.indexOf(recommendationApiUrl) > -1) {
                                    var unifiedSpUID = spApi.getParameterFromUrl(document.referrer, 'unifiedSpUID');
                                    if (unifiedSpUID.length > 5 && unifiedSpUID !== 'NA') {
                                        self.updateSpUID(unifiedSpUID);
                                    }
                                }
                            }
                            ;
                            self.unifyUser = function(callback) {
                                try {
                                    var objectUserData = self.getObjectUserData(self.getUserData());
                                    var emailHash = self.getUserEmailHash();
                                    var unificationPayload = {
                                        'partner_name': self.getPartnerName(),
                                        'user_id': self.getUserId(),
                                        'global_id': self.getGlobalId(),
                                    };
                                    if (typeof objectUserData === 'object' && spApi.validateEmail(objectUserData.email) && self.isChanged(objectUserData.email, 'insUserUnifyHash')) {
                                        unificationPayload.email = objectUserData.email;
                                    }
                                    if (emailHash && self.isChanged(emailHash, 'insHashedEmailUnifyHash')) {
                                        unificationPayload.email_hash = emailHash;
                                    }
                                    if (Object.keys(unificationPayload).length > 3) {
                                        var request = {
                                            url: unificationApiUrl,
                                            async: true,
                                            crossDomain: true,
                                            type: self.method,
                                            data: JSON.stringify(unificationPayload)
                                        };
                                        if (request.type === 'get') {
                                            request.data = {
                                                data: spApi.Base64.encode(JSON.stringify(unificationPayload))
                                            };
                                            request.dataType = 'jsonp';
                                            function OK() {}
                                            ;request.jsonpCallback = 'OK';
                                        }
                                        spApi.logger('info', 'Unification request event sent.');
                                        sQuery.ajax(request).success(function(response) {
                                            response = JSON.parse(response);
                                            if (response && response.status === 'OK' && spApi.isset(response.userId) && response.userId !== 'N/A' && response.userId !== 'null') {
                                                self.updateSpUID(response.userId);
                                                spApi.logger('info', 'The user is unified and the new userId is set as ' + response.userId);
                                                spApi.unificationEventSucceed = true;
                                                loadPredictiveData(function() {
                                                    if (typeof callback !== 'undefined') {
                                                        callback();
                                                    }
                                                });
                                            }
                                        });
                                    } else {
                                        if (typeof callback !== 'undefined') {
                                            callback();
                                        }
                                    }
                                } catch (err) {
                                    spApi.errLog(err, {
                                        logType: 'Unification Api Request Error',
                                        bugType: 'product',
                                        extraData: err
                                    });
                                }
                            }
                            ;
                            self.isChanged = function(value, storageKey) {
                                if (typeof value === 'string' && value.length > 0) {
                                    if (spApi.storageData(storageKey) !== spApi.hashCode(value)) {
                                        spApi.storageData(storageKey, spApi.hashCode(value), {
                                            expires: 30
                                        });
                                        return true;
                                    }
                                }
                                return false;
                            }
                            ;
                            self.getUserEmailHash = function() {
                                try {
                                    var insUserData = spApi.localStorageGet('insUserData') || sQuery.cookie('insUserData');
                                    if (insUserData) {
                                        var email = JSON.parse(insUserData).email;
                                        if (spApi.validateEmail(email)) {
                                            return spApi.Base64.encode(email);
                                        }
                                    }
                                } catch (err) {}
                                return false;
                            }
                            ;
                            self.getUserData = function() {
                                var userData = {};
                                userData['spApiUserData'] = typeof window.spApiUserData !== 'undefined' && ((typeof window.spApiUserData[0] !== 'undefined' && window.spApiUserData[0]) || window.spApiUserData);
                                userData['insider_object'] = typeof insider_object !== 'undefined' && typeof insider_object.user !== 'undefined' && insider_object.user;
                                return userData;
                            }
                            ;
                            self.getObjectUserData = function(userData) {
                                return userData['insider_object'] || userData['spApiUserData'];
                            }
                            ;
                            self.sendWaitingTimeOnSiteRequest = function() {
                                try {
                                    if (spApi.insiderTimeOnSiteInterval) {
                                        var timeOnSiteData = JSON.parse(spApi.storageData('insiderTimeOnSiteData'));
                                        if (timeOnSiteData) {
                                            timeOnSiteData.payload.time_on_site = spApi.timeOnSite;
                                            clearInterval(spApi.insiderTimeOnSiteInterval);
                                            spApi.insiderTimeOnSiteInterval = null;
                                            self.ajaxRequest(timeOnSiteData.payload);
                                        }
                                        spApi.storageData('insiderTimeOnSiteData', null);
                                        spApi.timeOnSite = 0;
                                    }
                                } catch (err) {
                                    spApi.errLog(err, {
                                        logType: 'Hit API Request for (' + eventName + ') event on a single page web application.',
                                        bugType: 'product',
                                        extraData: err
                                    });
                                }
                            }
                            ;
                            self.sendTimeOnSiteRequest = function() {
                                self.sendWaitingTimeOnSiteRequest();
                                if (stat.pt != 'productDetail') {
                                    return;
                                }
                                var payload = {};
                                var eventName = 'timeOnSite';
                                try {
                                    if (!spApi.insiderTimeOnSiteInterval) {
                                        spApi.insiderTimeOnSiteInterval = setInterval(function() {
                                            spApi.timeOnSite = insiderTimeMe.getTimeOnCurrentPageInSeconds();
                                        }, 1000);
                                    }
                                    payload = self.prepareRequestPayload(eventName);
                                    spApi.storageData('insiderTimeOnSiteData', {
                                        payload: payload
                                    });
                                    if (typeof spApi._bindedEvents.beforeunload === 'undefined') {
                                        window.addEventListener('beforeunload', function(event) {
                                            payload.time_on_site = insiderTimeMe.getTimeOnCurrentPageInSeconds();
                                            if (typeof event.target !== 'undefined' && typeof event.target.activeElement !== 'undefined' && typeof event.target.activeElement.nodeName !== 'undefined' && event.target.activeElement.nodeName.toLowerCase() === 'body') {
                                                self.ajaxRequest(payload);
                                                return event.true;
                                            } else {
                                                spApi.storageData('previousPageTimeOnSitePayload', JSON.stringify(payload));
                                            }
                                            spApi._bindedEvents.beforeunload = true;
                                        });
                                    }
                                } catch (err) {
                                    spApi.errLog(err, {
                                        logType: 'Hit API Request for (' + eventName + ') event',
                                        bugType: 'product',
                                        extraData: err
                                    });
                                }
                            }
                            ;
                            self.timeOnSite = function(eventName) {
                                var payload = {
                                    'event': eventName,
                                    'init_session': self.initSession,
                                    'session_id': self.sessionId,
                                    'date': Math.round(Date.now() / 1000),
                                    'referrer': stat.r,
                                    'source': spApi.sessionStorageGet('ins-session-source') || document.location.host,
                                    'current_url': stat.c,
                                    'page_type': stat.pt,
                                    'product': {
                                        'id': stat.p.id,
                                        'category': stat.p.category,
                                        'imgUrl': stat.p.img,
                                        'name': decodeURIComponent(stat.p.name),
                                        'url': stat.p.url
                                    }
                                };
                                self.setPayloadKeyword(payload);
                                self.setPayloadLocation(payload);
                                return payload;
                            }
                            ;
                            self.setPayloadKeyword = function(payload) {
                                var searchQuery = spApi.getSearchKeyWords();
                                if (typeof searchQuery === 'string' && searchQuery.length > 0) {
                                    payload.search_query = searchQuery;
                                }
                            }
                            ;
                            self.setPayloadLocation = function(payload) {
                                var userLocation = JSON.parse(spApi.storageData('userLocation')) || '';
                                if (userLocation) {
                                    if (userLocation.city) {
                                        payload.city = userLocation.city;
                                    }
                                    if (userLocation.country) {
                                        payload.country = userLocation.country;
                                    }
                                }
                            }
                            ;
                            self.getUserId = function() {
                                return (sQuery.cookie('spUID') || spApi.localStorageGet('spUID'));
                            }
                            ;
                            self.getGlobalId = function() {
                                return spUData.globalId || null;
                            }
                            ;
                            self.getPartnerName = function() {
                                return 'ikea';
                            }
                            ;
                            self.sendRequest = function(eventName) {
                                try {
                                    var payload = self.prepareRequestPayload(eventName);
                                    if (self.isValidRequest(eventName, payload)) {
                                        return self.ajaxRequest(payload);
                                    }
                                    spApi.logger('info', 'Hit event ' + eventName + ' is already sent.');
                                } catch (err) {
                                    spApi.errLog(err, {
                                        logType: 'Hit API Request for (' + eventName + ') event',
                                        bugType: 'product',
                                        extraData: err
                                    });
                                }
                            }
                            ;
                            self.isValidRequest = function(event, payload) {
                                var copiedPayload = sQuery.extend(true, {}, payload);
                                delete copiedPayload.date;
                                var hashCodedIdentifier = spApi.hashCode(JSON.stringify(copiedPayload));
                                if (copiedPayload.event === 'pageView') {
                                    if (spApi.sentHitPayloads['pageView'][copiedPayload.page_type] !== hashCodedIdentifier) {
                                        spApi.sentHitPayloads['pageView'][copiedPayload.page_type] = hashCodedIdentifier;
                                        return true
                                    }
                                } else {
                                    if (spApi.sentHitPayloads[event] !== hashCodedIdentifier) {
                                        spApi.sentHitPayloads[event] = hashCodedIdentifier;
                                        return true;
                                    }
                                }
                                return false;
                            }
                            ;
                            self.prepareRequestPayload = function(eventName) {
                                var payload = self[eventName](eventName);
                                var mergePayloadWithHitEvent = sQuery.extend({}, hitEvent, payload);
                                return mergePayloadWithHitEvent;
                            }
                            ;
                            self.checkPayload = function(payload) {
                                var requiredFields = ['event', 'version', 'partner_name', 'user_id'];
                                if (!spApi.globalUserIdIsDisabled) {
                                    requiredFields.push('global_id');
                                }
                                if (Object.keys(payload).length <= requiredFields.length)
                                    return false;
                                for (var i = 0; i < requiredFields.length; i++) {
                                    if (!spApi.isset(payload[requiredFields[i]])) {
                                        return false;
                                    }
                                }
                                return true;
                            }
                            ;
                            self.ajaxRequest = function(payload) {
                                if (!self.checkPayload(payload))
                                    return false;
                                if (payload.event === 'user') {
                                    var sendUserEvent = function() {
                                        sQuery('#spWorker').pm(function(data) {
                                            return {
                                                id: sQuery.cookie('insdrSubsId'),
                                                date: sQuery.cookie('insdrSubsIdCreateDate')
                                            };
                                        }, function(subscriptionData) {
                                            var subsId = subscriptionData.id;
                                            var subsIdExists = (subsId !== null && subsId.length > 0);
                                            if (typeof payload.email === 'string' || subsIdExists || typeof payload.email_hash === 'string') {
                                                if (subscriptionData.date === null && subsIdExists) {
                                                    payload.webpush_token = subsId;
                                                }
                                                if (!self.checkHashValues(payload))
                                                    return false;
                                                self.doRequest(payload);
                                            } else {
                                                spApi.logger('info', 'Hit Api - user event: Cancelled. E-mail is "' + payload.email + '" and SubsId is "' + subsId + '".');
                                            }
                                        }, payload);
                                    };
                                    if (wf.ready) {
                                        sendUserEvent();
                                    } else {
                                        sQuery(document).on('workerFrameReady', sendUserEvent);
                                    }
                                } else {
                                    self.doRequest(payload);
                                }
                            }
                            ;
                            self.doRequest = function(payload) {
                                var request = {
                                    url: hitApiUrl,
                                    async: true,
                                    crossDomain: true,
                                    type: self.method,
                                    data: JSON.stringify(payload)
                                };
                                if (request.type === 'get') {
                                    request.data = {
                                        jsonp: true,
                                        data: spApi.Base64.encode(JSON.stringify(payload))
                                    };
                                    request.dataType = 'jsonp';
                                    function OK() {}
                                    ;request.jsonpCallback = 'OK';
                                }
                                sQuery.ajax(request).success(function() {
                                    spApi.logger('info', 'Hit Api - ' + payload.event + ' event sent.');
                                });
                            }
                            ;
                            self.pageView = function(eventName) {
                                var getProducts = function() {
                                    var products = [];
                                    stat.p.forEach(function(p) {
                                        pData = {
                                            'id': p.id,
                                            'category': p.category,
                                            'imgUrl': p.img,
                                            'name': decodeURIComponent(p.name),
                                            'url': p.url,
                                            'price': {
                                                'value': parseFloat(p.price) || 0,
                                                'currency': spApi.preferredCurrency
                                            },
                                            'displayedPrice': {
                                                'value': parseFloat(p.notConvertedPrice) || parseFloat(p.price) || 0,
                                                'currency': spApi.getCurrency() || spApi.preferredCurrency
                                            }
                                        };
                                        if (p.originalPrice && !isNaN(parseFloat(p.originalPrice))) {
                                            p.originalPrice = parseFloat(p.originalPrice);
                                            pData.price.originalValue = parseFloat(spApi.getExchangeRate(spApi.getCurrency(), spApi.preferredCurrency, p.originalPrice));
                                            pData.displayedPrice.originalValue = p.originalPrice;
                                        }
                                        products.push(pData);
                                    });
                                    return products;
                                };
                                var payload = {
                                    'event': eventName,
                                    'init_session': self.initSession,
                                    'session_id': self.sessionId,
                                    'date': Math.round(Date.now() / 1000),
                                    'referrer': stat.r,
                                    'source': spApi.sessionStorageGet('ins-session-source') || document.location.host,
                                    'current_url': stat.c,
                                    'cart_amount': stat.ca,
                                    'page_type': stat.pt,
                                    'language': spApi.getLang(),
                                    'previousPageTimeOnSite': JSON.parse(spApi.storageData('previousPageTimeOnSitePayload')),
                                    'cookieSetSuccess': spApi.isCookieSupportEnabled(),
                                    'localStorageSetSuccess': insIsLocalStorageSupported(),
                                    'locale': spApi.getLocale()
                                };
                                spApi.storageData('previousPageTimeOnSitePayload', null);
                                if (payload.page_type === 'productDetail') {
                                    p = spApi.getCurrentProduct();
                                    payload.product = {
                                        'id': p.id || "",
                                        'imgUrl': p.img,
                                        'category': p.cats,
                                        'name': decodeURIComponent(p.name),
                                        'url': p.url,
                                        'price': {
                                            'value': parseFloat(p.price) || 0,
                                            'currency': spApi.preferredCurrency
                                        },
                                        'displayedPrice': {
                                            'value': parseFloat(p.notConvertedPrice) || parseFloat(p.price) || 0,
                                            'currency': spApi.getCurrency() || spApi.preferredCurrency
                                        },
                                        'productAttributes': self.populateProductAttributes()
                                    };
                                    if (p.originalPrice && !isNaN(parseFloat(p.originalPrice))) {
                                        p.originalPrice = parseFloat(p.originalPrice);
                                        payload.product.price.originalValue = parseFloat(spApi.getExchangeRate(spApi.getCurrency(), spApi.preferredCurrency, p.originalPrice));
                                        payload.product.displayedPrice.originalValue = p.originalPrice;
                                    }
                                    if (typeof stat.p.updateDate !== 'undefined' && !isNaN(stat.p.updateDate)) {
                                        payload.product.updateDate = Math.floor(stat.p.updateDate / 1000);
                                    }
                                    if (typeof stat.p.startDate !== 'undefined' && !isNaN(stat.p.startDate)) {
                                        payload.product.startDate = Math.floor(stat.p.startDate / 1000);
                                    }
                                    if (typeof stat.p.endDate !== 'undefined' && !isNaN(stat.p.endDate)) {
                                        payload.product.endDate = Math.floor(stat.p.endDate / 1000);
                                    }
                                    if (typeof stat.p.parentItemId === 'string' || typeof stat.p.parentItemId === 'number') {
                                        payload.product.parentItemId = stat.p.parentItemId;
                                    }
                                    if (Array.isArray(stat.p.variants) && stat.p.variants.length > 0) {
                                        payload.product.variants = stat.p.variants;
                                    }
                                    if (typeof stat.p.quantity !== 'undefined' && !isNaN(stat.p.quantity)) {
                                        payload.product.quantity = stat.p.quantity;
                                    }
                                } else if (payload.page_type === 'success') {
                                    payload.personalizations = [];
                                    Object.keys(localStorage).forEach(function(key) {
                                        if (key.indexOf('sp-camp-') > -1) {
                                            var campId = key.replace('sp-camp-', '');
                                            if (spApi.spCampCheckStatus(campId, 'joined')) {
                                                payload.personalizations.push(spApi.getPersonalizationId(campId));
                                            }
                                        }
                                    });
                                    payload.products = getProducts();
                                    payload.order_id = spApi.getOrderId();
                                } else if (payload.page_type === 'cart') {
                                    payload.products = getProducts();
                                } else if (payload.page_type === 'category') {
                                    payload.category = spApi.getCategories();
                                }
                                self.setPayloadKeyword(payload);
                                self.setPayloadLocation(payload);
                                if (payload.event === 'pageView' && payload.page_type === 'productDetail' && spApi.isPageTranslatedWithGoogleTranslate()) {
                                    delete payload.product.name;
                                    delete payload.product.category;
                                    delete payload.product.productAttributes;
                                }
                                return payload;
                            }
                            ;
                            self.user = function(eventName) {
                                var payload = {
                                    'event': eventName,
                                    'custom_attributes': {}
                                };
                                if (spApi.coeff.passed == true) {
                                    payload.last_updated_l2p = new Date().toISOString();
                                }
                                var emailHash = self.getUserEmailHash();
                                if (emailHash) {
                                    payload.email_hash = emailHash;
                                }
                                payload = self.populateInsiderObject(payload);
                                payload = self.populateCustomUserAttributes(payload);
                                payload = self.filterPayload(payload);
                                if (spApi.shouldInitializeWebPush()) {
                                    spApi.getWebPushOfThePage();
                                }
                                return payload;
                            }
                            ;
                            self.listenerApiRequest = function(payload) {
                                var request = {
                                    url: spApi.listenerApiUrl + 'send',
                                    crossDomain: true,
                                    type: self.method,
                                    data: JSON.stringify(payload)
                                };
                                sQuery.ajax(request).success(function() {
                                    spApi.logger('info', 'Journey Builder Listener Api - ' + payload.customAttributes.length + ' event sent.');
                                });
                            }
                            ;
                            self.isJourneyAttribute = function(attributeName) {
                                return spApi.journeyAttributeList.filter(function(attribute) {
                                    return attribute.name === attributeName;
                                }).length > 0;
                            }
                            ;
                            self.checkJourneyCampEligibility = function(attribute, journey) {
                                return journey.id === attribute.superBuilderId && spApi.getLang() === journey.lang && !spApi.isJourneyActive(journey.id)
                            }
                            ;
                            self.compareAttributeEquality = function(firstAttribute, secondAttribute) {
                                return firstAttribute.toString() === secondAttribute.toString();
                            }
                            ;
                            self.populateCustomUserAttributes = function(payload) {
                                var listenerApiRequestBody = {
                                    userId: self.getUserId(),
                                    partnerName: self.getPartnerName(),
                                    customAttributes: []
                                };
                                var attributes = spApi.customUserAttributes || [];
                                var storageCustomUserAttributesKey = 'insCustomAttributes';
                                if (attributes.length === 0)
                                    return payload;
                                var localCustomAttributes = JSON.parse(spApi.storageData(storageCustomUserAttributesKey)) || {};
                                attributes.forEach(function(attr) {
                                    var attributeType = attr.attributeType.toLowerCase().toString();
                                    var attributeName = attr.attributeName.toLowerCase().toString();
                                    var newAttributeValue = spApi.e(attr.attributeJs);
                                    if ((attributeType !== 'url' && typeof newAttributeValue !== attributeType) || (attributeType === 'url' && !(/^(http|https):\/\/[^ "]+$/.test(newAttributeValue)))) {
                                        spApi.logger('warning', 'Wrong attribute type for "' + attributeName + '" in Custom User Attribute.');
                                        return false;
                                    }
                                    if (self.isJourneyAttribute(attributeName)) {
                                        var journeyAttributeList = spApi.journeyAttributeList;
                                        for (var index in journeyAttributeList) {
                                            if (journeyAttributeList.hasOwnProperty(index)) {
                                                var attribute = journeyAttributeList[index];
                                                var journeyId = attribute.superBuilderId;
                                                var journeyCamp = spApi.getJourneyCamp(journeyId);
                                                if (attributeName !== attribute.name || !self.checkJourneyCampEligibility(attribute, journeyCamp)) {
                                                    continue;
                                                }
                                                var oldAttributeValue = localCustomAttributes[attributeName];
                                                var hasOldAttributeValue = typeof oldAttributeValue !== 'undefined' && oldAttributeValue !== '';
                                                var isAttributeChanged = newAttributeValue !== oldAttributeValue;
                                                var expectedOldValue = attribute.oldValue;
                                                var expectedNewValue = attribute.newValue;
                                                var payloadData = {
                                                    attribute: attributeName,
                                                    oldValue: expectedOldValue,
                                                    newValue: expectedNewValue,
                                                    journeyId: journeyId,
                                                    conditionLogic: attribute.conditionLogic,
                                                    isValid: false
                                                };
                                                if (hasOldAttributeValue && expectedOldValue === '' && isAttributeChanged && self.compareAttributeEquality(expectedNewValue, newAttributeValue)) {
                                                    payloadData.isValid = true;
                                                } else if (hasOldAttributeValue && expectedOldValue !== '' && isAttributeChanged && self.compareAttributeEquality(expectedOldValue, oldAttributeValue) && self.compareAttributeEquality(expectedNewValue, newAttributeValue)) {
                                                    payloadData.isValid = true;
                                                }
                                                listenerApiRequestBody.customAttributes.push(payloadData);
                                            }
                                        }
                                    }
                                    payload.custom_attributes[attributeName] = localCustomAttributes[attributeName] = newAttributeValue;
                                });
                                if (listenerApiRequestBody.customAttributes.length > 0) {
                                    var groupedAttributes = listenerApiRequestBody.customAttributes.reduce(function(carry, attribute) {
                                        if (!carry[attribute.journeyId]) {
                                            carry[attribute.journeyId] = [];
                                            carry[attribute.journeyId].push(attribute);
                                        } else {
                                            carry[attribute.journeyId].push(attribute);
                                        }
                                        return carry;
                                    }, {});
                                    var validAttributes = [];
                                    for (var journeyId in groupedAttributes) {
                                        if (groupedAttributes.hasOwnProperty(journeyId)) {
                                            groupedAttributes[journeyId].forEach(function(attribute) {
                                                if (attribute.conditionLogic === 'and' && groupedAttributes[journeyId].filter(function(attribute) {
                                                    return attribute.isValid === false;
                                                }).length === 0) {
                                                    if (spApi.journeySegments[journeyId] === true) {
                                                        validAttributes.push(attribute);
                                                    } else {
                                                        spApi.sendJourneyImpressionLog(journeyId);
                                                    }
                                                    spApi.setJourneyActive(journeyId);
                                                } else if (attribute.conditionLogic === 'or' && spApi.journeySegments[journeyId] === true && groupedAttributes[journeyId].filter(function(attribute) {
                                                    return attribute.isValid === true;
                                                }).length > 0) {
                                                    if (spApi.journeySegments[journeyId] === true) {
                                                        validAttributes.push(attribute);
                                                    } else {
                                                        spApi.sendJourneyImpressionLog(journeyId);
                                                    }
                                                    spApi.setJourneyActive(journeyId);
                                                }
                                            });
                                        }
                                    }
                                    if (validAttributes.length > 0) {
                                        listenerApiRequestBody.customAttributes = validAttributes;
                                        self.listenerApiRequest(listenerApiRequestBody);
                                    }
                                }
                                spApi.storageData(storageCustomUserAttributesKey, localCustomAttributes, {
                                    expires: 365
                                });
                                return payload;
                            }
                            ;
                            self.populateProductAttributes = function() {
                                return spApi.productAttributes.reduce(function(productAttributes, attribute) {
                                    var attributeJs = spApi.e(attribute.attributeJs);
                                    var attributeType = attribute.attributeType.toLowerCase();
                                    if ((attributeType === 'date' && new Date(attributeJs).toString() !== 'Invalid Date') || attributeType === 'image') {
                                        attributeType = 'string';
                                    }
                                    if (typeof attributeJs === attributeType) {
                                        productAttributes[attribute.attributeName] = attributeJs;
                                    }
                                    return productAttributes;
                                }, {});
                            }
                            ;
                            self.populateInsiderObject = function(payload) {
                                var userData = self.getUserData();
                                var objectUserData = self.getObjectUserData(userData);
                                if (typeof objectUserData !== 'object')
                                    return payload;
                                payload.name = objectUserData.name;
                                payload.surname = objectUserData.surname;
                                payload.age = objectUserData.age;
                                payload.birthday = spApi.reformatDate(objectUserData.birthday);
                                payload.email = objectUserData.email;
                                payload.email_optin = objectUserData.email_optin;
                                payload.email_sha256 = objectUserData.email_sha256;
                                payload.gdpr_optin = objectUserData.gdpr_optin;
                                payload.gender = self.reformatGender(objectUserData.gender);
                                payload.city = objectUserData.city;
                                payload.language = objectUserData.language;
                                payload.country = objectUserData.country;
                                payload.phone_number = objectUserData.phone_number;
                                payload.sms_optin = objectUserData.sms_optin;
                                payload.customer_id = objectUserData.user_id;
                                payload.username = objectUserData.username;
                                payload.facebook_id = objectUserData.facebook_id;
                                if (userData['spApiUserData'] && userData['insider_object']) {
                                    payload.custom_attributes.spApiUserData = userData['spApiUserData'];
                                }
                                return payload;
                            }
                            ;
                            self.filterPayload = function(payload) {
                                var invalidValues = ['undefined', 'unknown', 'null', 'object', 'array', 'empty', '/>', ''];
                                var removeInvalidFields = function(key, value, isCustomAttribute) {
                                    if ((typeof value === 'string' && invalidValues.indexOf(value.toLowerCase()) > -1) || value == null) {
                                        spApi.logger('info', 'Hit Api - user event: "' + key + '" field is removed from payload since the value is "' + payload[key] + '".');
                                        if (!isCustomAttribute) {
                                            delete payload[key];
                                        } else {
                                            delete payload.custom_attributes[key];
                                        }
                                    }
                                    if (typeof key === 'undefined' || key === null || (typeof key === 'string' && !sQuery.trim(key))) {
                                        spApi.logger('info', 'Hit Api - user event: "' + key + '" field is removed from payload since the value is ' + payload[key] + '.');
                                        if (!isCustomAttribute) {
                                            delete payload[key];
                                        } else {
                                            delete payload.custom_attributes[key];
                                        }
                                    }
                                };
                                sQuery.each(payload, function(key, item) {
                                    removeInvalidFields(key, item);
                                });
                                sQuery.each(payload.custom_attributes, function(key, item) {
                                    removeInvalidFields(key, item, true);
                                });
                                if (Object.keys(payload.custom_attributes || {}).length === 0) {
                                    delete payload.custom_attributes;
                                }
                                return payload;
                            }
                            ;
                            self.checkHashValues = function(payload) {
                                var payloadHash = spApi.hashCode(JSON.stringify(payload));
                                var insUserInfoHash = spApi.storageData('insUserInfoHash') !== null && spApi.storageData('insUserInfoHash');
                                if (payloadHash == insUserInfoHash)
                                    return false;
                                spApi.storageData('insUserInfoHash', payloadHash, {
                                    expires: 365
                                });
                                return payload;
                            }
                            ;
                            self.updateSpUID = function(userId) {
                                if (!userId || ((userId || '').indexOf('.') < 0))
                                    return false;
                                var cookieName = 'spUID';
                                spApi.localStorageSet(cookieName, userId);
                                sQuery.cookie(cookieName, null, {
                                    expires: -1,
                                    path: '/',
                                    domain: '.' + location.hostname.replace("www.")
                                });
                                sQuery.cookie(cookieName, null, {
                                    expires: -1,
                                    path: '/',
                                    domain: location.hostname
                                });
                                sQuery.cookie(cookieName, null, {
                                    expires: -1,
                                    path: '/',
                                    domain: null
                                });
                                sQuery.cookie(cookieName, null, {
                                    expires: -1,
                                    path: '/'
                                });
                                sQuery.cookie(cookieName, userId, {
                                    expires: spUIDExpireDay,
                                    path: '/',
                                    domain: cookieDomain
                                });
                                sQuery('#spWorker').pm(function(data) {
                                    spApi.localStorageSet(data.cookieName, data.userId);
                                    sQuery.cookie(data.cookieName, null, {
                                        expires: -1,
                                        path: '/',
                                        domain: '.' + location.hostname.replace("www.")
                                    });
                                    sQuery.cookie(data.cookieName, null, {
                                        expires: -1,
                                        path: '/',
                                        domain: location.hostname
                                    });
                                    sQuery.cookie(data.cookieName, null, {
                                        expires: -1,
                                        path: '/',
                                        domain: null
                                    });
                                    sQuery.cookie(data.cookieName, null, {
                                        expires: -1,
                                        path: '/'
                                    });
                                    sQuery.cookie(data.cookieName, data.userId, {
                                        expires: spUIDExpireDay,
                                        path: '/',
                                        domain: location.hostname
                                    });
                                }, undefined, {
                                    userId: userId,
                                    partnerName: partnerName,
                                    cookieName: cookieName
                                });
                                return true;
                            }
                            ;
                            self.reformatGender = function(genderText) {
                                if (!genderText)
                                    return '';
                                var mappedText;
                                genderText = genderText.toLowerCase();
                                genderTextFirst = genderText.charAt(0);
                                switch (genderTextFirst) {
                                case 'm':
                                    mappedText = 'm';
                                    break;
                                case 'f':
                                    mappedText = 'f';
                                    break;
                                case 'k':
                                    mappedText = 'f';
                                    break;
                                case 'e':
                                    mappedText = 'm';
                                    break;
                                default:
                                    mappedText = genderText;
                                    break;
                                }
                                if (genderText == 'bay') {
                                    mappedText = 'm';
                                } else if (genderText == 'bayan') {
                                    mappedText = 'f';
                                }
                                return mappedText;
                            }
                            ;
                            if (spApi.hitSend === false) {
                                spApi.hitSend = 'inprogress';
                                self.construct();
                                spApi.hitSend = true;
                            }
                        }
                        )({});
                    } catch (err) {
                        spApi.errLog(err, {
                            logType: 'Hit API Request',
                            bugType: 'product',
                            extraData: {}
                        });
                    }
                    if (typeof callback !== 'undefined') {
                        callback(true);
                    }
                }
                function getGeneralStats(pageType, spUData) {
                    try {
                        this.r = document.referrer;
                        this.pt = pageType;
                        this.c = window.location.href;
                        if (pageType == "category") {
                            this.ctg = spApi.getCategories();
                        }
                        this.spu = spUData;
                        var staticCartAmount = (sQuery.cookie('total-cart-amount') == null) ? 0 : sQuery.cookie('total-cart-amount');
                        this.ca = (spApi.isOnCartPage()) ? spApi.getTotalCartAmount() : staticCartAmount;
                    } catch (err) {
                        spApi.errLog(err);
                    }
                }
                function productDetailStat(pageType, spUData) {
                    try {
                        getGeneralStats.call(this, pageType, spUData);
                        var currentP = spApi.getCurrentProduct();
                        this.p = {
                            "name": currentP.name,
                            "category": currentP.cats,
                            "img": currentP.img,
                            "url": currentP.url,
                            "b": "",
                            "id": (currentP.id || ""),
                            "rcm": "",
                            "pr": {
                                "v": parseFloat(currentP.price),
                                "c": spApi.preferredCurrency || "TRY"
                            }
                        };
                        if (typeof currentP.quantity !== 'undefined') {
                            this.p.quantity = currentP.quantity;
                        }
                        if (typeof currentP.updateDate !== 'undefined') {
                            this.p.updateDate = currentP.updateDate;
                        }
                        if (typeof currentP.startDate !== 'undefined') {
                            this.p.startDate = currentP.startDate;
                        }
                        if (typeof currentP.endDate !== 'undefined') {
                            this.p.endDate = currentP.endDate;
                        }
                        if (typeof currentP.variants !== 'undefined') {
                            this.p.variants = currentP.variants;
                        }
                        if (typeof currentP.parentItemId !== 'undefined') {
                            this.p.parentItemId = currentP.parentItemId;
                        }
                    } catch (err) {
                        spApi.errLog(err);
                    }
                }
                function cartStat(pageType, spUData) {
                    getGeneralStats.call(this, pageType, spUData);
                    if (spApi.storageData('paid-products') == null) {
                        spApi.updateCartCookies();
                    }
                    var pPrdList = spApi.storageData('paid-products');
                    var p;
                    var productAray = new Array();
                    if (pPrdList != "" && pPrdList != null) {
                        pPrdList = sQuery.evalJSON(pPrdList);
                        var pPrdCat = spApi.storageData('prodCats');
                        var pPrdCats = [];
                        if (pPrdCat) {
                            pPrdCats = JSON.parse(pPrdCat);
                        }
                        sQuery.each(pPrdList, function(i, prd) {
                            p = prd;
                            p.category = [];
                            sQuery.each(pPrdCats, function(i, pPrdCat) {
                                if (pPrdCat.name == encodeURIComponent(prd.name)) {
                                    p.category = pPrdCat.cat.split('|');
                                }
                            });
                            productAray[i] = p;
                        });
                    }
                    this.p = productAray;
                }
                function registerSuccessStat(pageType, spUData) {
                    getGeneralStats.call(this, pageType, spUData);
                }
                function mainPage(pageType, spUData) {
                    getGeneralStats.call(this, pageType, spUData);
                }
                function othersStat(pageType, spUData) {
                    getGeneralStats.call(this, pageType, spUData);
                }
                function setCategoryData(categories) {
                    try {
                        var allCats = [];
                        if (spApi.sessionStorageGet('paCat')) {
                            allCats = JSON.parse(spApi.sessionStorageGet('paCat'));
                        }
                        allCats.push(categories[0]);
                        var jsonFormat = JSON.stringify(categories);
                        var allCatsFormat = JSON.stringify(allCats);
                        if (!spApi.sessionStorageGet('sFirstCat')) {
                            spApi.sessionStorageSet('sFirstCat', jsonFormat);
                        }
                        spApi.sessionStorageSet('sLastCat', jsonFormat);
                        spApi.sessionStorageSet('paCat', allCatsFormat);
                        if (!localStorage.getItem('pFirstCat')) {
                            localStorage.setItem('pFirstCat', jsonFormat);
                        }
                        localStorage.setItem('pLastCat', jsonFormat);
                        localStorage.setItem('paCat', allCatsFormat);
                    } catch (e) {
                        spApi.errLog(e);
                    }
                }
                function setPreviousCategory() {
                    if (!spApi.sessionStorageGet('psaCat') && localStorage.getItem('paCat') && !spApi.sessionStorageGet('psControl')) {
                        spApi.sessionStorageSet('psaCat', localStorage.getItem('paCat'));
                        localStorage.removeItem('paCat');
                    }
                    spApi.sessionStorageSet('psControl', '1');
                }
            },
            webPushUtilities: {
                makeRequest: function(url, data, successCallback) {
                    var request = {
                        type: 'POST',
                        url: url,
                        data: data
                    };
                    if (successCallback) {
                        request.success = successCallback;
                    }
                    sQuery.ajax(request);
                },
                isUserCompatibleWithCampaign: function(lang) {
                    return spApi.isOnProductPage() && spApi.getLang() === lang && !spApi.isPageTranslatedWithGoogleTranslate();
                },
                baseSensorParameters: function(campaignId, product) {
                    return {
                        partnerName: 'ikea',
                        campaignId: campaignId,
                        productId: product.id,
                        url: product.url,
                        imageUrl: product.img
                    }
                }
            },
            priceAlert: function(webPush) {
                this.webPush = webPush;
                this.utilities = spApi.webPushUtilities;
                this.setPriceAlertData = function() {
                    this.priceAlertData = JSON.parse(this.priceAlertLocalStorageData) || {
                        stats: {},
                        eligibilitySentProducts: {}
                    };
                    if (!this.priceAlertData.eligibilitySentProducts[this.currency]) {
                        this.priceAlertData.eligibilitySentProducts[this.currency] = [];
                    }
                    this.setTodaysData();
                    this.log('Data set');
                }
                ;
                this.setTodaysData = function() {
                    if (!this.priceAlertData.stats[this.today]) {
                        this.priceAlertData.stats[this.today] = {
                            products: {}
                        };
                    }
                    var productList = this.priceAlertData.stats[this.today].products;
                    if (!productList[this.product.id]) {
                        productList[this.product.id] = {};
                    }
                    if (!productList[this.product.id][this.currency]) {
                        productList[this.product.id][this.currency] = {
                            viewCount: 0
                        };
                    }
                }
                ;
                this.increaseProductViewCount = function() {
                    this.priceAlertData.stats[this.today].products[this.product.id][this.currency].viewCount += 1;
                    this.save();
                    this.log('Product view count increased by 1');
                }
                ;
                this.getTotalProductViewCount = function() {
                    var totalViewCount = 0;
                    var oneDayAsSeconds = 86400;
                    var startDate = this.today - (this.webPush.otherSettings.productViewCountInDays - 1) * oneDayAsSeconds;
                    for (var today = this.today; today >= startDate; today -= oneDayAsSeconds) {
                        if (this.priceAlertData.stats[today] && this.priceAlertData.stats[today].products[this.product.id]) {
                            totalViewCount += this.priceAlertData.stats[today].products[this.product.id][this.currency].viewCount;
                        } else {
                            break;
                        }
                    }
                    return totalViewCount;
                }
                ;
                this.isProductPushEligibilitySent = function() {
                    return this.priceAlertData.eligibilitySentProducts[this.currency].indexOf(this.product.id) !== -1;
                }
                ;
                this.isProductViewCountPassedThreshold = function() {
                    return this.getTotalProductViewCount() >= this.webPush.otherSettings.productViewCount;
                }
                ;
                this.removeOldProductStats = function() {
                    var startDate = this.today - (this.webPush.otherSettings.productViewCountInDays - 1) * 86400;
                    for (var date in this.priceAlertData.stats) {
                        if (date < startDate) {
                            delete this.priceAlertData.stats[date];
                            this.log(date + ' product stats removed');
                        }
                    }
                }
                ;
                this.sendProductInfo = function() {
                    var parameters = sQuery.extend(this.utilities.baseSensorParameters(this.webPush.id, this.product), {
                        price: this.product.unconvertedCurrentPrice,
                        currency: this.currency,
                        name: this.product.name
                    });
                    this.utilities.makeRequest(this.API.url + this.API.endpoints.product.add, parameters, function() {
                        this.increaseProductViewCount();
                        this.handlePriceAlertPushEligibility();
                    }
                    .bind(this));
                }
                ;
                this.handlePriceAlertPushEligibility = function() {
                    if (!this.isProductPushEligibilitySent() && this.isProductViewCountPassedThreshold()) {
                        this.log('User is eligible for price alert notifications, sending User ID');
                        this.utilities.makeRequest(this.API.url + this.API.endpoints.user.add, {
                            partnerName: 'ikea',
                            spUID: spApi.storageData('spUID'),
                            productId: this.product.id,
                            currency: this.currency,
                            campaignId: this.webPush.id
                        }, function() {
                            this.addToEligibilitySentProducts(this.currency, this.product.id);
                        }
                        .bind(this));
                    }
                }
                ;
                this.invalidateActivePushesForUser = function() {
                    var productIdsInCart = spApi.getPaidProducts().filter(function(product) {
                        return product.id ? true : false;
                    }).map(function(product) {
                        return product.id;
                    });
                    if (productIdsInCart.length !== 0) {
                        this.utilities.makeRequest(this.API.url + this.API.endpoints.user.remove, {
                            partnerName: 'ikea',
                            spUID: spApi.storageData('spUID'),
                            productIds: productIdsInCart,
                            campaignId: this.webPush.id
                        });
                    }
                }
                ;
                this.addToEligibilitySentProducts = function(currency, productId) {
                    this.priceAlertData.eligibilitySentProducts[currency].push(productId);
                    this.save();
                }
                ;
                this.log = function(message) {
                    spApi.logger('info', '[PRICE ALERT][Campaign ID: ' + this.webPush.id + ' | Product ID: ' + this.product.id + ' | Price: ' + this.product.unconvertedCurrentPrice + ' | Currency: ' + this.currency + ' | View Count: ' + this.getTotalProductViewCount() + '] ' + message);
                }
                ;
                this.save = function() {
                    spApi.storageData(this.localStorageKey, this.priceAlertData);
                }
                ;
                this.API = {
                    url: 'https://price-alert-sensor.api.useinsider.com/v1',
                    endpoints: {
                        product: {
                            add: '/product/add'
                        },
                        user: {
                            add: '/user/add',
                            remove: '/user/remove'
                        }
                    }
                };
                if (this.utilities.isUserCompatibleWithCampaign(this.webPush.lang)) {
                    this.product = spApi.getCurrentProduct();
                    this.product.unconvertedCurrentPrice = parseFloat(spApi.webPushUtilities.unconvertedCurrentPrice || this.product.price).toFixed(2);
                    this.currency = spApi.getCurrency();
                    this.today = new Date().setUTCHours(0, 0, 0, 0) / 1000;
                    this.localStorageKey = 'ins-wp-' + this.webPush.campId;
                    this.priceAlertLocalStorageData = spApi.storageData(this.localStorageKey);
                    spApi.logger('info', '[PRICE ALERT] Today: ' + this.today);
                    this.setPriceAlertData();
                    this.sendProductInfo();
                    this.removeOldProductStats();
                    this.save();
                } else if (spApi.isOnCartPage()) {
                    this.invalidateActivePushesForUser();
                }
            },
            inStock: function(webPush) {
                this.ENDPOINT = 'https://in-stock-sensor.api.useinsider.com/v1/collect';
                this.webPush = webPush;
                this.utilities = spApi.webPushUtilities;
                this.sendProductInfo = function() {
                    var parameters = sQuery.extend(this.utilities.baseSensorParameters(this.webPush.id, this.product), {
                        productName: this.product.name,
                        stockCount: this.product.quantity,
                        language: spApi.getLang(),
                        spUID: spApi.storageData('spUID')
                    });
                    this.utilities.makeRequest(this.ENDPOINT, parameters);
                }
                ;
                if (this.utilities.isUserCompatibleWithCampaign(this.webPush.lang)) {
                    this.product = spApi.getCurrentProduct();
                    this.sendProductInfo();
                    spApi.logger('info', '[IN STOCK SENSOR] Triggered.');
                }
            },
            getWebPushOfThePage: function() {
                try {
                    var triggerPush = '2';
                    var conversionPush = '3';
                    var priceAlertPush = '5';
                    var inStockPush = '7';
                    spApi.worker.asyncFunc(function() {
                        sQuery('#spWorker').pm(function(data) {
                            var pmData = {};
                            pmData.insdrSubsId = sQuery.cookie('insdrSubsId');
                            pmData.spUID = sQuery.cookie('spUID');
                            return pmData;
                        }, function(pmData) {
                            if (pmData.insdrSubsId != null) {
                                spApi.isWebPushInitialized = true;
                                spApi.pmData = pmData;
                                sQuery.each(spApi.webPushes, function(key, webPush) {
                                    var tempCamp = [];
                                    tempCamp.push(webPush);
                                    tempCamp = spApi.getCampOfThePage(tempCamp);
                                    var cName = 'ins-wp-' + webPush.id;
                                    if (tempCamp) {
                                        var storageData = spApi.storageData(cName);
                                        if (webPush.type == triggerPush && storageData == null) {
                                            spApi.activeWebPushes.push(webPush);
                                        } else if (webPush.type == conversionPush) {
                                            if (storageData == null) {
                                                spApi.activeConversionPushes['set'].push(webPush);
                                            } else {
                                                spApi.activeConversionPushes['update'].push(webPush);
                                            }
                                        } else if (webPush.type == priceAlertPush) {
                                            new spApi.priceAlert(webPush);
                                        } else if (webPush.type == inStockPush) {
                                            new spApi.inStock(webPush);
                                        }
                                    }
                                    if (webPush.type == conversionPush && spApi.e(spApi.rules[webPush.resetRule[0]].test)) {
                                        var storageData = spApi.storageData(cName);
                                        if (storageData != null) {
                                            spApi.activeConversionPushes['reset'].push(webPush);
                                        }
                                    }
                                });
                                if (spApi.activeWebPushes.length > 0) {
                                    spApi.setTriggerPushes(pmData);
                                }
                                spApi.setConversionPushes(pmData);
                                spApi.logger('info', 'Web Push kampanyaları init edildi...');
                            }
                        });
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'getWebPushOfThePage',
                        bugType: 'product'
                    });
                }
            },
            parseDynamicPushContent: function(content) {
                var customAttributeExist = false;
                var parseTemplate = /{([^}]*)}/g;
                var dynamicParameterList = content.match(parseTemplate);
                var parseDynamicPushParameter = function(content, parameterName, parameterValue) {
                    return content.replace(parameterName, parameterValue ? parameterValue : '');
                };
                if (dynamicParameterList !== null) {
                    dynamicParameterList.forEach(function(dynamicParameters) {
                        var dynamicParameter = dynamicParameters.replace('{', '').replace('}', '').split('|');
                        var dynamicContent = dynamicParameter[0];
                        var replaceContent = dynamicParameter[1];
                        var customAttributes = JSON.parse(spApi.storageData('insCustomAttributes'));
                        if (customAttributes !== null && customAttributes[dynamicContent]) {
                            replaceContent = customAttributes[dynamicContent];
                            customAttributeExist = true;
                        }
                        content = parseDynamicPushParameter(content, dynamicParameters, replaceContent);
                    });
                }
                return {
                    content: content,
                    customAttributeExist: customAttributeExist
                };
            },
            getPushBrowserName: function() {
                if (spApi.isMobileBrowser() && spApi.getBrowser() == 'Chrome') {
                    return 'Handheld Browser';
                } else {
                    if (spApi.isMobileBrowser() && spApi.getBrowser() == 'Yandex') {
                        return 'Yandex Handheld Browser';
                    } else if (spApi.isMobileBrowser() && spApi.getBrowser() == 'Opera') {
                        return 'Opera Handheld Browser';
                    } else {
                        return spApi.getBrowser();
                    }
                }
            },
            sendPushes: function(pmData, webPush) {
                var data = {
                    key: 'ins-wp-' + parseInt(webPush.id),
                    obj: {
                        viDa: spApi.getTime(),
                        "step1-displayed": true
                    },
                    campId: parseInt(webPush.id)
                };
                if (spApi.storageData(data.key) !== null) {
                    return false;
                }
                var webPushEndPoint = 'https://alfred.api.useinsider.com/webpush/';
                spApi.logger('info', 'Web Push gönderiliyor...', webPush);
                sQuery.ajax({
                    url: webPushEndPoint + 'sendSinglePush?partnerName=ikea',
                    type: "POST",
                    data: {
                        campId: webPush.id,
                        userId: pmData.spUID,
                        token: pmData.insdrSubsId,
                        browser: spApi.getPushBrowserName(),
                        title: spApi.parseDynamicPushContent(webPush.title).content,
                        description: spApi.parseDynamicPushContent(webPush.description).content,
                        link: spApi.parseDynamicPushContent(webPush.link).content,
                        image: spApi.parseDynamicPushContent(webPush.image).content,
                        buttonFirstUrl: spApi.parseDynamicPushContent(webPush.buttonFirstUrl).content,
                        buttonSecondUrl: spApi.parseDynamicPushContent(webPush.buttonSecondUrl).content,
                        banner: spApi.parseDynamicPushContent(webPush.banner).content
                    },
                    dataType: "jsonp",
                    async: true
                });
                spApi.updateCookie(data, 'nolog');
            },
            setTriggerPushes: function(pmData) {
                try {
                    var visibilityChangeHandler = function(webPush, frameVisibilityChangeTime) {
                        if (document.hidden === true) {
                            setTimeout(function() {
                                spApi.sendPushes(pmData, webPush);
                            }, frameVisibilityChangeTime);
                        }
                    }
                    sQuery.each(spApi.activeWebPushes, function(key, webPush) {
                        var otherSettings = webPush.otherSettings != "" ? webPush.otherSettings : "{}";
                        if (otherSettings.frameVisibilityChange == 1) {
                            if (typeof webPush.visibilityChangeHandler !== 'function') {
                                webPush.visibilityChangeHandler = visibilityChangeHandler.bind(this, webPush, otherSettings.frameVisibilityChangeTime);
                            }
                            document.removeEventListener('visibilitychange', webPush.visibilityChangeHandler);
                            document.addEventListener('visibilitychange', webPush.visibilityChangeHandler);
                        } else {
                            spApi.sendPushes(pmData, webPush);
                        }
                    });
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setTriggerPushes',
                        bugType: 'product',
                        extraData: {
                            param: spApi.activeWebPushes
                        }
                    });
                }
            },
            setConversionPushes: function(pmData) {
                try {
                    var webPushEndPoint = 'https://alfred.api.useinsider.com/webpush/';
                    spApi.logger('info', 'Web Push gönderiliyor...', spApi.activeConversionPushes);
                    if (pmData.insdrSubsId != null) {
                        sQuery.each(spApi.activeConversionPushes, function(type, data) {
                            sQuery.each(data, function(key, webPush) {
                                var action = (type == 'reset') ? 'reset' : 'set';
                                sQuery.ajax({
                                    type: "POST",
                                    url: webPushEndPoint + action + '?partnerName=ikea',
                                    data: {
                                        campaignId: webPush.id,
                                        userId: pmData.spUID,
                                        token: pmData.insdrSubsId,
                                        type: action,
                                        timeout: webPush.pushTimeout,
                                        browser: spApi.getPushBrowserName(),
                                        title: spApi.parseDynamicPushContent(webPush.title).content,
                                        description: spApi.parseDynamicPushContent(webPush.description).content,
                                        link: spApi.parseDynamicPushContent(webPush.link).content,
                                        image: spApi.parseDynamicPushContent(webPush.image).content,
                                        buttonFirstUrl: spApi.parseDynamicPushContent(webPush.buttonFirstUrl).content,
                                        buttonSecondUrl: spApi.parseDynamicPushContent(webPush.buttonSecondUrl).content,
                                        banner: spApi.parseDynamicPushContent(webPush.banner).content
                                    },
                                    cache: false,
                                    contentType: 'application/json',
                                    dataType: 'jsonp',
                                    crossDomain: true,
                                    async: true
                                });
                                var data = {
                                    key: 'ins-wp-' + parseInt(webPush.id),
                                    obj: {
                                        viDa: spApi.getTime(),
                                        "step1-displayed": true
                                    },
                                    campId: parseInt(webPush.id)
                                };
                                spApi.updateCookie(data, 'nolog');
                            });
                        });
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setConversionPushes',
                        bugType: 'product',
                        extraData: {
                            param: spApi.activeConversionPushes
                        }
                    });
                }
            }
        };
        Object.setPrototypeOf = Object.setPrototypeOf || function(obj, proto) {
            obj.__proto__ = proto;
            return obj;
        }
        ;
        Object.setPrototypeOf(spApi, {
            uidExpireDate: 365,
            eventStack: {},
            elementLoadCompleteConfig: {
                inited: false,
                timeout: 60 * 1000,
                mutableList: []
            },
            apiInitConfig: {},
            allCamps: spApi.concat(spApi.concat(spApi.camps.concat(spApi.customizationCamps), spApi.webPushes), spApi.customSegments),
            currencyFormatRules: {
                "TRY": {
                    "symbol": "TL",
                    "thousandSeparator": ",",
                    "decimalSeparator": ".",
                    "alignment": "1"
                }
            }
        });
        spApi.getPrototype = function(key) {
            return spApi.__proto__[key];
        }
        ;
        spApi.objKeys = function(obj) {
            return Object.keys(obj).length > 0
        }
        spApi.localStorageGet = function(storageName) {
            try {
                return localStorage[storageName] || null;
            } catch (e) {
                return null;
            }
        }
        ;
        spApi.localStorageSet = function(storageName, storeValue) {
            try {
                return localStorage[storageName] = storeValue;
            } catch (e) {
                return null;
            }
        }
        ;
        spApi.localStorageRemoveItem = function(storageName) {
            try {
                return delete localStorage[storageName];
            } catch (e) {
                return null;
            }
        }
        ;
        spApi.sessionStorageGet = function(storageName) {
            try {
                return sessionStorage[storageName] || null;
            } catch (e) {
                return null;
            }
        }
        ;
        spApi.sessionStorageSet = function(storageName, storeValue) {
            try {
                return sessionStorage[storageName] = storeValue;
            } catch (e) {
                return null;
            }
        }
        ;
        spApi.sessionStorageRemoveItem = function(storageName) {
            try {
                return delete sessionStorage[storageName];
            } catch (e) {
                return null;
            }
        }
        ;
        setEmailToCookie = function(name, value, expire, domain) {
            if (spApi.validateEmail(value)) {
                if (expire === undefined)
                    expire = 365;
                if (domain === undefined)
                    domain = cookieDomain;
                sQuery.cookie(name, value, {
                    expires: expire,
                    path: '/',
                    domain: domain
                });
            }
        }
        ;
        var setUserDataToCookie = (function(userData) {
            if (userData == false || typeof (userData) == 'undefined') {
                return false;
            }
            var cookieName = 'insUserData';
            var save = function(createUserData) {
                createUserData = JSON.stringify(createUserData);
                sQuery.cookie(cookieName, createUserData, {
                    expires: 360,
                    path: '/',
                    domain: cookieDomain
                });
                spApi.localStorageSet(cookieName, createUserData);
            }
            var createUserData = {};
            sQuery(userData.Login.button).live('click', function() {
                if (!spApi.validateEmail(sQuery(userData.Login.email).val()))
                    return;
                if (sQuery.cookie(cookieName) !== null) {
                    var cookieContent = JSON.parse(sQuery.cookie(cookieName));
                    createUserData = cookieContent;
                }
                createUserData.email = sQuery(userData.Login.email).val();
                save(createUserData);
            });
            sQuery(userData.Register.button).live('click', function() {
                if (!spApi.validateEmail(sQuery(userData.Register.email).val())) {
                    return;
                }
                createUserData.email = sQuery(userData.Register.email).val();
                createUserData.city = sQuery(userData.Register.city).val();
                createUserData.region = sQuery(userData.Register.region).val();
                createUserData.name = sQuery(userData.Register.name).val();
                save(createUserData);
                spApi.sessionStorageSet('isRegSuccess', 1);
            });
        }
        )(spApi.setEmailToCookie());
        spApi.timeOut = function(call, time) {
            return setTimeout(function() {
                try {
                    call();
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setTimeout Error',
                        bugType: 'partner',
                        extraData: {
                            time: time,
                            callback: call.toString()
                        }
                    });
                }
            }, time);
        }
        ;
        spApi.interval = function(call, time) {
            return setInterval(function() {
                try {
                    call();
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'setInterval Error',
                        bugType: 'partner',
                        extraData: {
                            time: time,
                            callback: call.toString()
                        }
                    });
                }
            }, time);
        }
        ;
        spApi.ruleControl = function(rule, camp) {
            try {
                rule.test = rule.test.replace(/setTimeout/g, 'spApi.timeOut');
                rule.test = rule.test.replace(/setInterval/g, 'spApi.interval');
                if (camp.isTest == "1") {
                    var variationCandidates = spApi.getCampBuilderCandidates();
                    var testBuilderId = spApi.getObjectFirstKey(variationCandidates);
                    if (variationCandidates[testBuilderId] == camp.id) {
                        return spApi.e(rule.test) === true;
                    }
                    var testCampId = spApi.getCampCandidate();
                    if (testCampId == camp.id) {
                        return spApi.e(rule.test) === true;
                    }
                    return false;
                } else {
                    return spApi.e(rule.test) === true;
                }
            } catch (err) {
                var extraData = {
                    campaignName: spApi.decryptCampName(camp.campName),
                    campaignId: camp.id
                };
                if (rule) {
                    extraData.ruleName = rule.name;
                    extraData.ruleId = rule.id;
                    extraData.ruleContent = rule.test
                } else {
                    extraData.rule = "undefined rule";
                }
                spApi.errLog(err, {
                    logType: 'Rule Error',
                    bugType: 'partner',
                    extraData: extraData
                });
                return false;
            }
        }
        ;
        spApi.getGlobalUserIdFromLocalStorage = function() {
            if (spApi.storageData('insGUID') != null) {
                return spApi.Base64.decode(spApi.storageData('insGUID'));
            }
            return null;
        }
        ;
        spApi.campEventControl = function(eventName, callback) {
            try {
                callback();
            } catch (err) {
                spApi.errLog(err, {
                    logType: 'Campaign Event Error',
                    bugType: 'partner',
                    extraData: {
                        event: eventName,
                        callback: callback.toString()
                    }
                });
            }
        }
        ;
        spApi.isPageTranslatedWithGoogleTranslate = function() {
            var html = sQuery('html');
            return html.hasClass('translated-ltr') || html.hasClass('translated-rtl');
        }
        ;
        spApi.debugModeOpen = function() {
            sQuery.cookie('spDebugMode', 1, {
                expires: 1,
                path: '/',
                domain: cookieDomain
            });
            spApi.logger('info', 'Debug Mode Active');
        }
        ;
        spApi.debugModeClose = function() {
            sQuery.cookie('spDebugMode', null, {
                expires: 1,
                path: '/',
                domain: cookieDomain
            });
            spApi.logger('info', 'Debug Mode Passive');
        }
        ;
        spApi.debugModeIsOpen = function() {
            return sQuery.cookie('spDebugMode') !== null || false;
        }
        ;
        spApi.conLog = function() {
            if (spApi.debugModeIsOpen() && typeof console.log !== 'undefined') {
                console.log.apply(console, arguments);
            }
        }
        ;
        spApi.sentHitPayloads = {
            pageView: {}
        };
        spApi.logger = function(type, message, campID) {
            try {
                message = spApi.Base64.encode(message);
                if (typeof spApi.apiLogs === "undefined") {
                    spApi.apiLogs = {
                        'camps': {},
                        'general': []
                    };
                }
                if (typeof campID !== "undefined") {
                    if (typeof spApi.apiLogs.camps[campID] === "undefined") {
                        spApi.apiLogs.camps[campID] = [];
                    }
                    var logObject = {
                        'campID': campID,
                        'type': type,
                        'message': message,
                        'time': new Date().getTime()
                    };
                    spApi.apiLogs.camps[campID].push(logObject)
                } else {
                    var logObject = {
                        'campID': campID,
                        'type': type,
                        'message': message,
                        'time': new Date().getTime()
                    };
                    spApi.apiLogs.general.push(logObject)
                }
                if (spApi.debugModeIsOpen()) {
                    if (type == 'info' && typeof console.info !== 'undefined') {
                        if (typeof campID === "undefined") {
                            console.info(spApi.Base64.decode(message), 'Log Time:', logObject.time);
                        } else {
                            console.info(spApi.Base64.decode(message), 'Camp ID:', campID, 'Log Time:', logObject.time);
                        }
                    } else if (type == 'warning' && typeof console.warn !== 'undefined') {
                        if (typeof campID === "undefined") {
                            console.warn(spApi.Base64.decode(message), 'Log Time:', logObject.time);
                        } else {
                            console.warn(spApi.Base64.decode(message), 'Camp ID:', campID, 'Log Time:', logObject.time);
                        }
                    } else if (type == 'error' && typeof console.error !== 'undefined') {
                        if (typeof campID === "undefined") {
                            console.error(spApi.Base64.decode(message), 'Log Time:', logObject.time);
                        } else {
                            console.error(spApi.Base64.decode(message), 'Camp ID:', campID, 'Log Time:', logObject.time);
                        }
                    }
                }
            } catch (e) {
                spApi.errLog(e);
            }
            return true;
        }
        ;
        spApi.getLogs = function(campID) {
            if (typeof spApi.apiLogs === "undefined" || spApi.apiLogs.length < 1) {
                return {};
            }
            var logs = {
                'camps': {},
                'general': []
            };
            sQuery.each(spApi.apiLogs.camps, function(i, l) {
                logs.camps[i] = [];
                sQuery.each(l, function(k, val) {
                    var logObject = sQuery.extend(true, {}, val);
                    logObject.message = spApi.Base64.decode(logObject.message);
                    logs.camps[i].push(logObject);
                });
            });
            sQuery.each(spApi.apiLogs.general, function(i, val) {
                var logObject = sQuery.extend(true, {}, val);
                logObject.message = spApi.Base64.decode(logObject.message);
                logs.general.push(logObject);
            });
            if (typeof campID !== "undefined") {
                if (typeof spApi.apiLogs.camps[campID] !== "undefined") {
                    return logs.camps[campID];
                }
                return false;
            }
            return logs;
        }
        if (spApi.debugModeIsOpen()) {
            spApi.logger('info', 'Debug Mode Active');
        }
        spApi.setCampTest();
        spApi.setCampBuilderTest();
        function processAnalyticsResult(data) {
            if (data && typeof data.count != "undefined") {
                return data.count;
            }
            return 0;
        }
        sQuery.fn.extend({
            pm: function(pmFunction, success, data) {
                return this.each(function() {
                    if (sQuery(this).is('iframe')) {
                        pm({
                            target: sQuery(this)[0].contentWindow,
                            type: 'sQueryPM',
                            data: {
                                data: JSON.stringify(data),
                                callback: encodeURI(pmFunction)
                            },
                            success: function(data) {
                                if (Boolean(success)) {
                                    try {
                                        success(data);
                                    } catch (err) {
                                        spApi.errLog(err, {
                                            logType: 'PM Success Error (from window)',
                                            bugType: 'partner',
                                            extraData: {
                                                params: JSON.stringify(data) || "",
                                                callback: String(success)
                                            }
                                        });
                                    }
                                }
                            }
                        });
                    }
                });
            }
        });
        pm.bind('getPaidProductsCategories', function(data) {
            return spApi.storageData("prodCats");
        });
        pm.bind('GAClickCounter', function(data) {
            spApi.conLog('GA Event Worked..');
            spApi.conLog('Coupon Code: ' + data.value);
            ga('send', 'event', 'KliksaTest', 'Promo', data.value, {
                'nonInteraction': 1
            });
        });
        pm.bind('sQueryPM', function(data) {
            var result = null;
            try {
                result = spApi.e('(' + decodeURI(data.callback) + ')(' + data.data + ')');
            } catch (err) {
                spApi.errLog(err, {
                    logType: 'PM Error (from window)',
                    bugType: 'partner',
                    extraData: {
                        campId: data.campId,
                        params: JSON.stringify(data.data) || "",
                        callback: String(decodeURI(data.callback))
                    }
                });
            }
            return result;
        });
        pm.bind("getUserIdFromPartnerDomain", function() {
            var spUID = sQuery.cookie("spUID");
            return spUID;
        });
        pm.bind('spApiPM', function(data) {
            var result = spApi.e(data.query);
            if (result)
                return result;
        });
        pm.bind('autoFit', function(data) {
            var params = {
                'height': data.height,
                'width': data.width
            };
            if (typeof data.onlyHeight !== "undefined" && data.onlyHeight == true) {
                var campIdPrefix = '';
                var advancedCssClass = ''
                if (typeof data.campId !== 'undefined') {
                    campIdPrefix = '-' + data.campId;
                    advancedCssClass = '.sp-advanced-css-' + data.campId + ' ';
                }
                params = {
                    'height': data.height
                };
                sQuery('#insdrInfoHeightStyle' + campIdPrefix).remove();
                sQuery('body').append('<style id="insdrInfoHeightStyle' + campIdPrefix + '">' + advancedCssClass + '.sp-fancybox-inner, ' + advancedCssClass + '.sp-inline-iframe { height: ' + data.height + 'px !important; }' + '</style>');
            } else {
                sQuery('.sp-fancybox-outer').css(params);
                sQuery('.sp-fancybox-wrap').css(params);
                sQuery('.sp-fancybox-skin').css(params);
                sQuery(".sp-fancybox-inner").css(params);
                sQuery(".sp-fancybox-iframe").css(params);
                sQuery('.sp-fancybox-wrap').css("visibility", "visible");
            }
        });
        pm.bind('close-fancybox', function(data) {
            var updateCookieType = typeof data.updateCookieType !== 'undefined' ? data.updateCookieType : '';
            var effectConfig;
            var positionType;
            var camp = spApi.getCamp(data.campId).camp;
            var notifySettings = spApi.notifies[camp.id];
            effectConfig = notifySettings.effectConfig;
            if (camp.productType == 24) {
                positionType = notifySettings.locationConfig.type;
            }
            var closeCamp = function() {
                if (typeof notifySettings != "undefined" && typeof notifySettings.locationConfig != "undefined" && positionType == "2") {
                    sQuery('.sp-inline-wrap-' + camp.id).remove();
                } else {
                    sQuery.fancybox.close();
                }
            };
            var closeEffect = function() {
                if (typeof notifySettings != "undefined" && typeof notifySettings.locationConfig != "undefined" && positionType == "2") {
                    sQuery('.sp-inline-wrap-' + camp.id).effective(effectConfig.close);
                } else {
                    sQuery('.sp-fancybox-skin').effective(effectConfig.close);
                }
            }
            if (effectConfig instanceof Object && typeof effectConfig.close !== "undefined") {
                effectConfig.close.dialog.complete = function() {
                    closeCamp();
                }
                closeEffect();
            } else {
                closeCamp();
            }
            if (data.cookieType == "liked") {
                data = {
                    key: 'sp-camp-' + data.campId,
                    obj: {
                        'liked': data.cookieValue
                    },
                    campId: data.campId
                };
                spApi.updateCookie(data);
            } else if (data.cookieType == "closed") {
                data = {
                    key: 'sp-camp-' + data.campId,
                    obj: {
                        'closed': true
                    },
                    campId: data.campId
                };
                spApi.updateCookie(data, updateCookieType);
            }
            if (typeof spApi.mask !== 'undefined' && typeof spApi.mask.isLoaded() !== "undefined") {
                spApi.mask.closeSlient();
            }
            sQuery('html').unbind('mousemove');
        });
        spApi.localStorageRemoveItem('insUserData');
        sQuery.cookie('insUserData', null, {
            expires: -1,
            path: '/',
            domain: partner_site.host
        });
        sQuery.cookie('insUserData', null, {
            expires: -1,
            path: '/',
            domain: '.' + partner_site.host
        });
        pm.bind('set-cookie', function(data) {
            spApi.updateCookie(data);
        });
        pm.bind('execute', function(data) {
            return spApi.e(data);
        });
        pm.bind('get-cookie', function(data) {
            var c = sQuery.cookie(data.key) != null ? sQuery.cookie(data.key) : spApi.storageData(data.key);
            if (c) {
                c = JSON.parse(c);
                return {
                    err: null,
                    response: c
                };
            } else {
                return {
                    err: true,
                    response: false
                };
            }
        });
        pm.bind("getGlobalIdSettingStatus", function(data) {
            return spApi.globalUserIdIsDisabled;
        });
        pm.bind('setMigrationDone', function() {
            sQuery.cookie('ins-mig-done', 1, {
                expires: 360,
                path: '/'
            });
        });
        pm.bind('campEventTrigger', function(data) {
            if (typeof data.campId === "undefined" || typeof data.callbackType === "undefined") {
                return false;
            }
            var camp = spApi.getCamp(data.campId).camp;
            sQuery.each(camp.callbacks[data.callbackType], function(key, callback) {
                spApi.campEventControl(data.callbackType, callback);
            });
        });
        pm.bind('set-localStorage', function(data) {
            localStorage.setItem(data.key, data.data);
        });
        pm.bind('clear-cookie', function(data) {
            spApi.storageData("paid-products", "", {
                path: '/',
                domain: cookieDomain
            });
        });
        pm.bind('updatePaidProducts', function(data) {
            spApi.storageData("paid-products", sQuery.toJSON(data), {
                path: '/',
                domain: cookieDomain
            });
        });
        pm.bind('get-url-param', function(data) {
            return spApi.getParameter(data);
        });
        pm.bind('setFrameCSS', function(data) {
            if (data.funcType == "set") {
                sQuery(data.selector).css(data.attr, data.value);
            }
        });
        pm.bind("set-coupon-assistant", function(data) {
            spApi.setCouponAsistant(data.couponSet, data.fromPurcha);
        });
        pm.bind("get-current-product", function(data) {
            return spApi.getCurrentProduct();
        });
        pm.bind("startNoteTimer", function(data) {
            return spApi.noteTimer(data);
        });
        pm.bind('get-paid-products', function(data) {
            return localStorage.getItem("paid-products");
        });
        pm.bind("gaSend", function(data) {
            return spApi.gaSend(data);
        });
        if (typeof spApi.worker == "undefined" && (spApi.optOutRequestExists() || !spApi.isOptOut())) {
            if (sQuery.cookie('spDebugMode') == 1)
                spApi.consoleLog.push("API is ready.");
            function insCreateUID() {
                var idStrLen = 32;
                var spUID = (Math.floor((Math.random() * 25)) + 10);
                spUID += (new Date()).getTime();
                do {
                    spUID += (Math.floor((Math.random() * 15))).toString(36);
                    if (spUID.length == 23)
                        spUID += ".";
                } while (spUID.length < idStrLen);return spUID;
            }
            function gaLog(campId) {
                _gaq.push(['_setCustomVar', 5, 'Insider', campId, 2]);
                _gaq.push(['_trackEvent', 'SociaPlus', 'impression', campId]);
            }
            var dimensionControl = false;
            WorkerFrame = function() {
                sQuery(document).on('userLocationSet', function() {
                    spApi.worker.userIP('setUserIp', {
                        userLocation: spApi.storageData('userLocation')
                    });
                });
                var gaSegmentIsActive = false;
                sQuery.each(spApi.personalizationCamps, function(key, value) {
                    if (value.gaSegmentId != '') {
                        gaSegmentIsActive = true;
                        return false;
                    }
                });
                var wf = this;
                var migrationDone = !!sQuery.cookie('ins-mig-done');
                var workerParams = '?new=' + (spApi.newUser ? 'true' : 'false');
                if (!migrationDone && !spApi.newUser) {
                    var cookieSettings = {
                        webPush: {
                            "permissionAbandonExpireDay": "1",
                            "permissionBlockExpireDay": "45",
                            "permissionAllowExpireDay": "7",
                            "permanentPermission": 0
                        },
                        main: {
                            spUID: sQuery.cookie('spUID')
                        }
                    };
                    workerParams += '&cs=' + encodeURIComponent(JSON.stringify(cookieSettings));
                }
                sQuery('body').elementLoadComplete(function() {
                    var workerFrame = document.createElement('iframe');
                    workerFrame.style.display = 'none';
                    workerFrame.id = 'spWorker';
                    workerFrame.src = 'https://ikea.api.useinsider.com/worker.html' + workerParams;
                    workerFrame.onload = function() {
                        wf._window = workerFrame.contentWindow;
                        wf.ping();
                    }
                    ;
                    document.body.appendChild(workerFrame);
                }, {
                    i: 1,
                    t: 5000
                });
            }
            ;
            WorkerFrame.prototype.ping = function(callback) {
                spApi.executedCallbacks = [];
                try {
                    wf = this;
                    var intervalId = setInterval(function() {
                        if (sQuery('#spWorker').length > 0) {
                            pm({
                                target: wf._window,
                                type: 'are-you-ready',
                                data: {
                                    no: "data",
                                    noLog: window.noLog,
                                    globalUserIdIsDisabled: spApi.globalUserIdIsDisabled
                                },
                                success: function(data) {
                                    if (!dimensionControl) {
                                        spApi.gaDimensionQ = data.dimensionResults;
                                        if (typeof spApi.setCustomSegments == 'function') {
                                            spApi.setCustomSegments(spApi.customSegments);
                                        }
                                        spApi.logger('info', 'Worker is ready');
                                        dimensionControl = true;
                                    }
                                    wf.ready = true;
                                    sQuery(document).trigger('workerFrameReady');
                                    spApi.salesSesId = spApi.Base64.encode(spApi.getGAStyleSesId());
                                    spApi.setCampSalesSesId();
                                    if (sQuery.cookie('spUID') == null) {
                                        if (spApi.getBrowser() == 'Safari' && (data.spUID == 'null' || data.spUID == null || data.spUID == 'undefined')) {
                                            data.spUID = insCreateUID();
                                        }
                                        pm({
                                            target: sQuery('#spWorker')[0].contentWindow,
                                            type: 'getSPUData',
                                            data: {
                                                firstTime: true,
                                                domain: 'partner',
                                                globalUserIdIsDisabled: spApi.globalUserIdIsDisabled
                                            }
                                        });
                                        sQuery.cookie('spUID', data.spUID, {
                                            expires: spApi.getPrototype('uidExpireDate'),
                                            path: '/'
                                        });
                                    } else {
                                        sQuery.cookie('spUID', sQuery.cookie('spUID'), {
                                            expires: spApi.getPrototype('uidExpireDate'),
                                            path: '/'
                                        });
                                        pm({
                                            target: sQuery('#spWorker')[0].contentWindow,
                                            type: "set-spUID",
                                            data: {
                                                value: sQuery.cookie('spUID')
                                            }
                                        });
                                    }
                                    clearInterval(intervalId);
                                    if (callback && spApi.executedCallbacks.indexOf(callback.toString()) === -1) {
                                        spApi.executedCallbacks.push(callback.toString());
                                        callback();
                                    }
                                }
                            });
                        }
                    }, 10);
                } catch (err) {}
            }
            ;
            WorkerFrame.prototype.send = function(type, data, callback) {
                wf = this;
                if (this.ready) {
                    if (data.type == 'joined') {
                        spApi.gaSend(data);
                    } else {
                        if (spApi.getBrowser() == 'Safari') {
                            data.userID = sQuery.cookie('spUID');
                        }
                        var checkLogKey = true;
                        if (typeof data.type === 'undefined' || typeof data.campId === 'undefined' || data.goalType === 'productCategorySuccess' || data.goalType === 'productSuccess') {
                            checkLogKey = false;
                        }
                        var timestamp = Math.floor(new Date().getTime() / 1000);
                        var logKey = data.type + '-' + timestamp + '-' + data.campId;
                        if (typeof spApi.logsStack[logKey] === 'undefined' || checkLogKey === false) {
                            spApi.logsStack[logKey] = '1';
                            pm({
                                target: this._window,
                                type: type,
                                data: data,
                                success: function() {
                                    spApi.logger('info', 'Worker ile ' + data.type + ' logu atıldı.', data.campId);
                                    if (data.type == 'impression' || data.type == 'join' || data.type == 'camp-step1' || data.salesType == 'sales' || data.salesType == 'bounce-sales' || data.salesType == 'variation-sales' || data.type == 'closed' || data.type == 'camp-step1-close') {
                                        spApi.gaSend(data);
                                    }
                                    spApi.triggerInspectorLogs(JSON.stringify(data));
                                }
                            });
                        }
                    }
                } else {
                    setTimeout(function() {
                        wf.send(type, data, callback);
                    }, 1000)
                }
            }
            ;
            WorkerFrame.prototype.asyncPM = function(type, data, callback) {
                wf = this;
                if (this.ready) {
                    pm({
                        target: this._window,
                        type: type,
                        data: data,
                        success: callback
                    });
                } else {
                    setTimeout(function() {
                        wf.asyncPM(type, data, callback);
                    }, 500);
                }
            }
            ;
            WorkerFrame.prototype.asyncFunc = function(func) {
                wf = this;
                if (this.ready) {
                    func();
                } else {
                    setTimeout(function() {
                        func();
                    }, 500);
                }
            }
            ;
            WorkerFrame.prototype.userIP = function(type, data, callback) {
                wf = this;
                if (this.ready) {
                    pm({
                        target: this._window,
                        type: type,
                        data: data,
                        success: function(data) {}
                    });
                } else {
                    setTimeout(function() {
                        wf.userIP(type, data, callback);
                    }, 1000)
                }
            }
            WorkerFrame.prototype.sendCook = function(type, data, callback) {
                wf = this;
                if (this.ready) {
                    pm({
                        target: this._window,
                        type: type,
                        data: data,
                        success: function(data) {}
                    });
                } else {
                    setTimeout(function() {
                        wf.send(type, data, callback);
                    }, 1000)
                }
            }
            ;
            WorkerFrame.prototype.check = function(o, n, campId, callback) {
                try {
                    if (!campId)
                        return;
                    else if (o == undefined && n == undefined)
                        return;
                    wf = this;
                    var logType = [];
                    sQuery.each(n, function(key, value) {
                        if (value == true) {
                            if (o == undefined || (o && !o[key])) {
                                if (key == 'step1-displayed') {
                                    logType.push('camp-step1');
                                } else if (key == 'step1-closed') {
                                    logType.push('camp-step1-close');
                                } else if (key == 'closedCouponTimer') {
                                    logType.push('closedCouponTimer');
                                } else if (key == 'couponAppliedTimer') {
                                    logType.push('couponAppliedTimer');
                                } else if (key == 'closed') {} else {
                                    logType.push(key);
                                }
                            }
                        }
                    });
                    sQuery.each(logType, function(key, value) {
                        wf.send('do-logging', {
                            type: value,
                            campId: campId
                        }, callback);
                    });
                } catch (err) {}
            }
            ;
            WorkerFrame.prototype.cookie = function(capsule, callback) {
                wf = this;
                wf.sendCook(capsule.dataC.type, {
                    data: capsule.dataC.cookie,
                    key: capsule.dataC.key
                });
            }
            ;
            WorkerFrame.prototype.SetGlobalExperimentLog = function(logData) {
                var logs = new Array('impression-A','impression-B','variation-sales-A','variation-sales-B');
                if (sQuery.inArray(logData.globalExperimentType, logs) > -1) {
                    spApi.worker.send('globalExperimentLogging', {
                        type: logData.globalExperimentType,
                        productType: 'globalExperiment',
                        ref: window.location.href
                    });
                    if (sQuery.inArray(logData.globalExperimentType, ['impression-A', 'impression-B']) > -1) {
                        if (spApi.globalExperiment['gaPush'] == "1") {
                            var gaAction = (logData.globalExperimentType == 'impression-A') ? 'Global-A' : 'Global-B';
                            spApi.gaSend({
                                type: 'globalExperiment',
                                action: gaAction,
                                campId: 0
                            });
                        }
                    }
                } else {
                    sQuery.post(spApi.apiUrl + 'ajax.php?t=storeGlobalExperimentLog', logData);
                }
            }
            WorkerFrame.prototype.SetGoalBuilderLog = function(logData) {
                var key = 'sp-goal-' + logData.varId + '-' + logData.goalId;
                var subId = logData['subId'] || '';
                if (logData.logType == 'join') {
                    var spGoal = spApi.storageData(key);
                    logData.logType = (typeof spGoal == "undefined" || spGoal == null) ? 'join' : 'engage';
                }
                var logKey = key + '-' + subId + '-' + logData.logType;
                if (sQuery.inArray(logKey, spApi.goalLogs) == -1) {
                    var other = (logData['other'] !== undefined) ? logData['other'] : '';
                    logData.builderId = logData.builderId.toString();
                    logData.varId = logData.varId.toString();
                    logData.goalId = logData.goalId.toString();
                    var logs = new Array('engage','join','impression','sales');
                    if (sQuery.inArray(logData.logType, logs) > -1) {
                        spApi.worker.send('goalBuilderLogging', {
                            type: logData.logType,
                            builderId: logData.builderId,
                            varId: logData.varId,
                            campId: logData.campId,
                            goalId: logData.goalId,
                            productType: logData.productType,
                            goalType: logData.goalType,
                            subId: subId,
                            userId: logData.userId,
                            ref: logData.ref,
                            url: logData.url,
                            other: other
                        });
                        if (logData.logType != 'engage') {
                            if (logData.logType == 'join') {
                                spApi.gaSend({
                                    builderId: logData.builderId,
                                    campId: logData.varId,
                                    type: 'goal',
                                    goalId: logData.goalId
                                });
                            }
                            cData = {
                                key: key,
                                obj: {
                                    'goalType': logData.logType
                                },
                                campId: logData["varId"]
                            };
                            spApi.updateCookie(cData, "nolog");
                        }
                    } else {
                        var checkLogKey = true;
                        if (typeof logData.logType === 'undefined' || typeof logData.goalId === 'undefined') {
                            checkLogKey = false;
                        }
                        var timestamp = Math.floor(new Date().getTime() / 1000);
                        var logKey = logData.logType + '-' + timestamp + '-' + logData.goalId;
                        if (typeof spApi.logsStack[logKey] === 'undefined' || checkLogKey === false) {
                            spApi.logsStack[logKey] = '1';
                            sQuery.post(spApi.apiUrl + 'ajax.php?t=storeGoalBuilderLog', logData);
                        }
                    }
                    spApi.goalLogs.push(logKey);
                }
            }
            WorkerFrame.prototype.SetCustomCampLog = function(logData) {
                try {
                    var other = '';
                    if (logData['other'] !== undefined) {
                        other = logData['other'];
                    }
                    var customSubId = logData['customSubId'] || '';
                    logData.campId = logData.campId.toString();
                    if (logData.campId.indexOf('c') < 0) {
                        logData.campId = 'c' + logData.campId;
                    }
                    if (logData.logType == "joined") {
                        if (!spApi.spCampCheckStatus(logData["campId"], 'joined') && logData.logType == "joined") {
                            logData.logType = "join";
                            cData = {
                                key: 'sp-camp-' + logData["campId"],
                                obj: {
                                    'joined': true
                                },
                                campId: logData["campId"]
                            };
                            spApi.updateCookie(cData, "nolog");
                        } else {
                            logData.logType = "engage";
                        }
                    }
                    spApi.logger('info', logData.logType + ' logu atılıyor.', logData.campId);
                    var logs = ['engage', 'join', 'impression'];
                    if (sQuery.inArray(logData.logType, logs) > -1) {
                        var logParams = {
                            type: logData.logType,
                            campId: logData.campId,
                            productType: 'custom',
                            customSubId: customSubId,
                            ref: window.location.href,
                            orderId: spApi.isOnAfterPaymentPage() ? spApi.getOrderId() : '',
                            paidProducts: (spApi.storageData('paid-products') != null) ? spApi.storageData('paid-products') : '',
                            sessionId: spApi.salesSesId,
                            salesSesId: spApi.getCampSalesSesInfo(logData.campId, 'salesSesId'),
                            salesSesTime: spApi.getCampSalesSesInfo(logData.campId, 'salesSesTime') + '-' + spApi.getTime(),
                            other: other
                        };
                        logParams = sQuery.extend(logParams, spApi.getStandardLogData());
                        spApi.worker.send('do-logging', logParams);
                    } else {
                        var checkLogKey = true;
                        if (typeof logData.logType === 'undefined' || typeof logData.campId === 'undefined') {
                            checkLogKey = false;
                        }
                        var timestamp = Math.floor(new Date().getTime() / 1000);
                        var logKey = logData.logType + '-' + timestamp + '-' + logData.campId;
                        if (typeof spApi.logsStack[logKey] === 'undefined' || checkLogKey === false) {
                            spApi.logsStack[logKey] = '1';
                            sQuery.post(spApi.apiUrl + 'ajax.php?t=storeCustomLog', logData);
                        }
                    }
                } catch (err) {
                    spApi.errLog(err);
                }
            }
            spApi.worker = new WorkerFrame();
            spApi.loaded = true;
        }
        if (spApi.isBrowserSupportEnabled()) {
            function parseLocationData(data) {}
            function parseWeatherData(data) {}
            function parsePredictiveData(data) {}
            function parseCustomDataSet(data) {}
            function parseGaSegmentData(data) {}
            window.insiderPermissionLogCallback = function() {}
            ;
            var _flushPredictiveData = function() {
                var optionalSegmentList = ["0bff474b3949eba68df4fc1c2dc18bc8"];
                var predictiveData = JSON.parse(spApi.storageData('predictiveData'));
                var newKeyExists = false;
                optionalSegmentList.forEach(function(segmentKey) {
                    if (typeof predictiveData[segmentKey] === 'undefined') {
                        newKeyExists = true;
                    }
                });
                if (newKeyExists) {
                    return true;
                }
                return false;
            };
            function loadUserLocation() {
                try {
                    sQuery.ajax({
                        url: 'https://location.api.useinsider.com/?pId=10002017',
                        type: "get",
                        dataType: "jsonp",
                        async: spApi.isAjaxAsync,
                        jsonpCallback: "parseLocationData",
                        success: function(data) {
                            var geoData = {
                                geoId: '',
                                city: '',
                                country: '',
                                cName: '',
                                request: '',
                                latitude: '',
                                longitude: ''
                            };
                            if (spApi.objKeys(data)) {
                                geoData.geoId = data.cityNameId;
                                geoData.city = data.cityName;
                                geoData.country = data.countryCode;
                                geoData.cName = data.countrName;
                                geoData.request = data.ip;
                                geoData.latitude = data.latitude;
                                geoData.longitude = data.longitude;
                                spApi.storageData('userLocation', geoData, {
                                    expires: 1
                                });
                            } else {
                                spApi.storageData('userLocation', geoData, {
                                    expires: 1
                                });
                            }
                            sQuery(document).trigger('userLocationSet');
                        }
                    });
                } catch (err) {
                    spApi.errLog(err);
                }
            }
            function loadPredictiveData(callback) {
                try {
                    if (((!spApi.storageData('predictiveData') && window.predictiveSet == undefined) || spApi.unificationEventSucceed || _flushPredictiveData())) {
                        var getspUID = setInterval(function(data) {
                            if (spApi.worker.ready) {
                                pm({
                                    target: sQuery('#spWorker')[0].contentWindow,
                                    type: 'getSPUData',
                                    success: function(spUData) {
                                        if (spUData.updateSpUIDPartnerDomain !== null) {
                                            clearInterval(getspUID);
                                            if (window.predictiveSet == undefined) {
                                                window.predictiveSet = true;
                                                sQuery.ajax({
                                                    url: '//segment.api.useinsider.com/v4/segments/' + (sQuery.cookie('spUID') || spApi.localStorageGet('spUID') || spUData.spUID) + '?partnerid=10002017&jsonp=true&fields=0bff474b3949eba68df4fc1c2dc18bc8',
                                                    type: "get",
                                                    dataType: "jsonp",
                                                    async: spApi.isAjaxAsync,
                                                    jsonpCallback: "parsePredictiveData",
                                                    success: function(data) {
                                                        var expireDate = 1;
                                                        if (typeof data['97a1aececd9a5b7916c859bfa02a1464'] !== 'undefined') {
                                                            var date = new Date();
                                                            expireDate = new Date(date.setTime(date.getTime() + data['97a1aececd9a5b7916c859bfa02a1464']));
                                                        }
                                                        spApi.storageData('predictiveData', data, {
                                                            expires: expireDate
                                                        });
                                                        if (typeof callback !== 'undefined') {
                                                            callback();
                                                        }
                                                    }
                                                });
                                            }
                                        }
                                    }
                                });
                            }
                        }, "1000");
                    }
                } catch (err) {
                    spApi.errLog(err);
                }
            }
            function getDataset(segmentList) {
                var loopCounter = Math.floor(segmentList.length / 30);
                var segmentListForDataList = [];
                for (var i = 0; i <= loopCounter; i++) {
                    segmentListForDataList[i] = segmentList.slice(i * 30, (i + 1) * 30);
                    var callbackName = 'insParseCustomDataSet' + i;
                    window[callbackName] = function(data) {}
                    ;
                    sQuery.ajax({
                        url: spApi.apiUrl + 'customDataSegmentation.php',
                        type: 'POST',
                        data: {
                            segmentList: JSON.stringify(segmentListForDataList[i]),
                            callback: callbackName,
                            counter: i
                        },
                        dataType: 'jsonp',
                        async: spApi.isAjaxAsync,
                        jsonpCallback: callbackName,
                        success: function(dataset) {
                            if (dataset.success) {
                                sQuery.each(dataset.success, function(segmentName, result) {
                                    sQuery.each(segmentListForDataList[dataset.counter], function(index, segment) {
                                        if (segmentName === segment.sn) {
                                            var key = 'customDataSet-' + segmentName;
                                            var data = {
                                                status: result,
                                                cookie: segment.cv
                                            };
                                            localStorage.setItem(key, JSON.stringify(data));
                                        }
                                    });
                                });
                            }
                        }
                    });
                }
            }
            function loadCustomDataSet(customDataset) {
                try {
                    var segmentList = [];
                    sQuery.each(customDataset, function(index, rule) {
                        if (typeof rule !== 'undefined') {
                            var regex = /checkCustomDataset\(([^)]+)\)/g
                            var matches = [];
                            var match = regex.exec(rule.test.replace(/[^()-_,\w\s]/gi, ''));
                            while (match != null) {
                                matches.push(match[1]);
                                match = regex.exec(rule.test.replace(/[^()-_,\w\s]/gi, ''));
                            }
                            sQuery.each(matches, function(index, ruleTest) {
                                var ruleMatch = ruleTest.split(',');
                                if (typeof ruleMatch['1'] !== 'undefined') {
                                    var cookieKey = ruleMatch['0'];
                                    var segmentName = ruleMatch['1'].trim();
                                    if (typeof rule.isProcessed !== 'undefined' && rule.isProcessed) {
                                        var cookieValue = sQuery.cookie(cookieKey);
                                        var key = 'customDataSet-' + segmentName;
                                        var customSet = JSON.parse(localStorage.getItem(key));
                                        if (!customSet || typeof customSet == 'number' || (typeof customSet == 'object' && customSet.cookie != cookieValue)) {
                                            if (cookieValue) {
                                                var data = {
                                                    cv: cookieValue,
                                                    sn: segmentName
                                                };
                                                segmentList.push(data);
                                            } else {
                                                var data = {
                                                    status: 0,
                                                    cookie: cookieValue
                                                };
                                                localStorage.setItem(key, JSON.stringify(data));
                                            }
                                        } else if (!cookieValue && customSet.status) {
                                            var data = {
                                                status: 0,
                                                cookie: cookieValue
                                            };
                                            localStorage.setItem(key, JSON.stringify(data));
                                        }
                                    }
                                }
                            });
                        }
                    });
                    if (segmentList.length) {
                        getDataset(segmentList);
                    }
                } catch (err) {
                    spApi.errLog(err, {
                        logType: 'loadCustomDataSet',
                        bugType: 'product',
                        extraData: {
                            customDataset: customDataset
                        }
                    });
                }
            }
            try {
                var now = new Date();
                var customDataset = [];
                if (!spApi.isSiteUrlCheckFailed()) {
                    sQuery.each(spApi.rules, function(i, val) {
                        rule = spApi.rules[i];
                        if (rule.test.indexOf("Predictive") > -1 || rule.test.indexOf("BehavioralSegments") > -1 || rule.test.indexOf("checkAdAudience") > -1 || rule.test.indexOf("checkCrmAttributeData") > -1) {
                            var localStorageValue = JSON.parse(localStorage.getItem('predictiveData'));
                            if (localStorageValue !== null && typeof localStorageValue.expireDate !== 'undefined') {
                                if (localStorageValue.expireDate > (new Date()).getTime()) {
                                    spApi.storageData('predictiveData', localStorageValue, {
                                        expires: (new Date(localStorageValue.expireDate))
                                    });
                                } else {
                                    loadPredictiveData();
                                }
                            } else {
                                if (!spApi.storageData('predictiveData')) {
                                    loadPredictiveData();
                                } else if (_flushPredictiveData()) {
                                    loadPredictiveData();
                                }
                            }
                        }
                        if (rule.test.indexOf("CustomDataset") > -1) {
                            customDataset[rule.id] = rule;
                        }
                    });
                }
                if (customDataset.length) {
                    loadCustomDataSet(customDataset);
                }
                var userLocationData = '';
                if (true) {
                    userLocationData = JSON.parse(spApi.storageData('userLocation'));
                    if (!userLocationData) {
                        loadUserLocation();
                    }
                }
                if (true && spApi.localStorageGet('insdrSV') == sQuery.cookie('insdrSV')) {
                    spApi.init();
                } else {
                    spApi.logger('info', 'Partner storage mismatch, waiting for worker...');
                    var insStorageInterval = setInterval(function() {
                        if (spApi.worker.ready) {
                            pm({
                                target: sQuery('#spWorker')[0].contentWindow,
                                type: 'storageData',
                                data: {
                                    action: 'read'
                                },
                                success: function(storageData) {
                                    try {
                                        spApi.logger('info', 'Waiting for worker to making partner data syncronized');
                                        sQuery.each(storageData, function(property, value) {
                                            spApi.localStorageSet(property, value);
                                        });
                                        spApi.localStorageSet('insdrSV', sQuery.cookie('insdrSV'));
                                        spApi.init();
                                        spApi.logger('info', 'API initialized');
                                    } catch (error) {
                                        spApi.errLog(error);
                                    }
                                }
                            });
                            clearInterval(insStorageInterval);
                        }
                    }, 100);
                }
            } catch (err) {
                spApi.errLog(err);
            }
            function setLocalStorage(storageName, storeValue) {
                localStorage.setItem(storageName, JSON.stringify(storeValue));
            }
            function getLocalStorage(storageName) {
                try {
                    return JSON.parse(localStorage.getItem(storageName))
                } catch (err) {
                    setLocalStorage(storageName, '');
                    return [];
                }
            }
            var isLocalStorageExist = function(storageName) {
                var val = getLocalStorage(storageName);
                if (val !== null && val != '\"\"' && val != '')
                    return true;
                else
                    return false;
            }
            function spGetTime() {
                return Math.round(new Date() / 1000 + 3600);
            }
            try {
                var uVDate = [];
                if (isLocalStorageExist('userDateV'))
                    uVDate = getLocalStorage('userDateV');
                if (uVDate.length == 0 || spGetTime() - uVDate[uVDate.length - 1] > 1800) {
                    uVDate.push(spGetTime());
                    setLocalStorage('userDateV', uVDate);
                }
                if (spApi.isOnAfterPaymentPage()) {
                    var userpaids = [];
                    var paid = {};
                    if (spApi.storageData("paid-products") != null && spApi.storageData("paid-products").length > 0) {
                        if (isLocalStorageExist('userpaids')) {
                            userpaids = getLocalStorage('userpaids');
                            paid = sQuery.merge(JSON.parse(spApi.storageData("paid-products")), userpaids);
                        } else {
                            paid = JSON.parse(spApi.storageData("paid-products"));
                        }
                        setLocalStorage('userpaids', paid);
                    }
                }
                if (spApi.isUserLoggedIn()) {
                    if (!isLocalStorageExist('loggedinUser'))
                        setLocalStorage('loggedinUser', 1);
                }
            } catch (err) {
                spApi.errLog(err);
            }
        } else {
            spApi.consoleLog.push("Not supporting Internet Explorer 10 or below.");
        }
    }
    spApi.loadScript('//api.useinsider.com/js/squery.min.js', insiderMain);
} else {
    var errorTwice = "Warning : API is integrated more than once";
    (spApi.consoleLog == undefined) ? spApi.consoleLog = [errorTwice] : spApi.consoleLog.push(errorTwice);
}
(function() {
    window.API_VERSION_ikea = 'v2.7.2';
}
)();
